/**                                                                                                    /**                                                                                                 
* Constructor                                                                                          * Constructor                                                                                       
*                                                                                                      *                                                                                                   
* @param input the CIDR netmask                                                                        * @param input the CIDR netmask                                                                     
* @throws IllegalArgumentException if the netmask is not correct (invalid                              * @throws IllegalArgumentException if the netmask is not correct (invalid                           
*             address specification, malformed CIDR prefix, etc)                                       *             address specification, malformed CIDR prefix, etc)                                    
*/                                                                                                     */                                                                                                  
public NetMask(final String input) {                                                                   public NetMask(final String input) {                                                                
expression = input;                                                                                    expression = input;                                                                                 
final int portIdx = input.indexOf(";");                                                              | final int portIdx = input.indexOf(';');                                                             
final String nonPortPart;                                                                              final String nonPortPart;                                                                           
if (portIdx == -1) {                                                                                   if (portIdx == -1) {                                                                                
foundPort = false;                                                                                     foundPort = false;                                                                                  
nonPortPart = input;                                                                                   nonPortPart = input;                                                                                
portPattern = null;                                                                                    portPattern = null;                                                                                 
} else {                                                                                               } else {                                                                                            
foundPort = true;                                                                                      foundPort = true;                                                                                   
nonPortPart = input.substring(0, portIdx);                                                             nonPortPart = input.substring(0, portIdx);                                                          
try {                                                                                                  try {                                                                                               
portPattern = Pattern.compile(input.substring(portIdx + 1));                                           portPattern = Pattern.compile(input.substring(portIdx + 1));                                        
} catch (PatternSyntaxException e) {                                                                   } catch (PatternSyntaxException e) {                                                                
/*                                                                                                     /*                                                                                                  
* In case of error never match any non-empty port given                                                * In case of error never match any non-empty port given                                             
*/                                                                                                     */                                                                                                  
throw new IllegalArgumentException(sm.getString("netmask.invalidPort", input), e);                     throw new IllegalArgumentException(sm.getString("netmask.invalidPort", input), e);                  
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
final int idx = nonPortPart.indexOf("/");                                                            | final int idx = nonPortPart.indexOf('/');                                                           
/*                                                                                                     /*                                                                                                  
* Handle the "IP only" case first                                                                      * Handle the "IP only" case first                                                                   
*/                                                                                                     */                                                                                                  
if (idx == -1) {                                                                                       if (idx == -1) {                                                                                    
try {                                                                                                  try {                                                                                               
netaddr = InetAddress.getByName(nonPortPart).getAddress();                                             netaddr = InetAddress.getByName(nonPortPart).getAddress();                                          
} catch (UnknownHostException e) {                                                                     } catch (UnknownHostException e) {                                                                  
throw new IllegalArgumentException(sm.getString("netmask.invalidAddress", nonPortPart));               throw new IllegalArgumentException(sm.getString("netmask.invalidAddress", nonPortPart));            
}                                                                                                      }                                                                                                   
nrBytes = netaddr.length;                                                                              nrBytes = netaddr.length;                                                                           
lastByteShift = 0;                                                                                     lastByteShift = 0;                                                                                  
return;                                                                                                return;                                                                                             
}                                                                                                      }                                                                                                   
/*                                                                                                     /*                                                                                                  
* OK, we do have a netmask specified, so let's extract both the address                                * OK, we do have a netmask specified, so let's extract both the address                             
* and the CIDR.                                                                                        * and the CIDR.                                                                                     
*/                                                                                                     */                                                                                                  
final String addressPart = nonPortPart.substring(0, idx), cidrPart = nonPortPart.substring(idx + 1);   final String addressPart = nonPortPart.substring(0, idx), cidrPart = nonPortPart.substring(idx + 1);
try {                                                                                                  try {                                                                                               
/*                                                                                                     /*                                                                                                  
* The address first...                                                                                 * The address first...                                                                              
*/                                                                                                     */                                                                                                  
netaddr = InetAddress.getByName(addressPart).getAddress();                                             netaddr = InetAddress.getByName(addressPart).getAddress();                                          
} catch (UnknownHostException e) {                                                                     } catch (UnknownHostException e) {                                                                  
throw new IllegalArgumentException(sm.getString("netmask.invalidAddress", addressPart));               throw new IllegalArgumentException(sm.getString("netmask.invalidAddress", addressPart));            
}                                                                                                      }                                                                                                   
final int addrlen = netaddr.length * 8;                                                                final int addrlen = netaddr.length * 8;                                                             
final int cidr;                                                                                        final int cidr;                                                                                     
try {                                                                                                  try {                                                                                               
/*                                                                                                     /*                                                                                                  
* And then the CIDR.                                                                                   * And then the CIDR.                                                                                
*/                                                                                                     */                                                                                                  
cidr = Integer.parseInt(cidrPart);                                                                     cidr = Integer.parseInt(cidrPart);                                                                  
} catch (NumberFormatException e) {                                                                    } catch (NumberFormatException e) {                                                                 
throw new IllegalArgumentException(sm.getString("netmask.cidrNotNumeric", cidrPart));                  throw new IllegalArgumentException(sm.getString("netmask.cidrNotNumeric", cidrPart));               
}                                                                                                      }                                                                                                   
/*                                                                                                     /*                                                                                                  
* We don't want a negative CIDR, nor do we want a CIDR which is greater                                * We don't want a negative CIDR, nor do we want a CIDR which is greater                             
* than the address length (consider 0.0.0.0/33, or ::/129)                                             * than the address length (consider 0.0.0.0/33, or ::/129)                                          
*/                                                                                                     */                                                                                                  
if (cidr &lt; 0) {                                                                                     if (cidr &lt; 0) {                                                                                  
throw new IllegalArgumentException(sm.getString("netmask.cidrNegative", cidrPart));                    throw new IllegalArgumentException(sm.getString("netmask.cidrNegative", cidrPart));                 
}                                                                                                      }                                                                                                   
if (cidr &gt; addrlen) {                                                                               if (cidr &gt; addrlen) {                                                                            
throw new IllegalArgumentException(sm.getString("netmask.cidrTooBig", cidrPart, Integer.valueOf(addr   throw new IllegalArgumentException(sm.getString("netmask.cidrTooBig", cidrPart, Integer.valueOf(addr
}                                                                                                      }                                                                                                   
nrBytes = cidr / 8;                                                                                    nrBytes = cidr / 8;                                                                                 
/*                                                                                                     /*                                                                                                  
* These last two lines could be shortened to:                                                          * These last two lines could be shortened to:                                                       
*                                                                                                      *                                                                                                   
* lastByteShift = (8 - (cidr % 8)) & 7;                                                                * lastByteShift = (8 - (cidr % 8)) & 7;                                                             
*                                                                                                      *                                                                                                   
* But... It's not worth it. In fact, explaining why it could work would                                * But... It's not worth it. In fact, explaining why it could work would                             
* be too long to be worth the trouble, so let's do it the simple way...                                * be too long to be worth the trouble, so let's do it the simple way...                             
*/                                                                                                     */                                                                                                  
final int remainder = cidr % 8;                                                                        final int remainder = cidr % 8;                                                                     
lastByteShift = (remainder == 0) ? 0 : 8 - remainder;                                                  lastByteShift = (remainder == 0) ? 0 : 8 - remainder;                                               
}                                                                                                      }                                                                                                   
