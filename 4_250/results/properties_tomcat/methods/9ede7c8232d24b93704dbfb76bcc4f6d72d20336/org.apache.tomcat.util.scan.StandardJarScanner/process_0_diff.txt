/*                                                                                                     /*                                                                                                  
* Scan a URL for JARs with the optional extensions to look at all files                                * Scan a URL for JARs with the optional extensions to look at all files                             
* and all directories.                                                                                 * and all directories.                                                                              
*/                                                                                                     */                                                                                                  
protected void process(JarScanType scanType, JarScannerCallback callback, URL url, String webappPath   protected void process(JarScanType scanType, JarScannerCallback callback, URL url, String webappPath
if (log.isTraceEnabled()) {                                                                            if (log.isTraceEnabled()) {                                                                         
log.trace(sm.getString("jarScan.jarUrlStart", url));                                                   log.trace(sm.getString("jarScan.jarUrlStart", url));                                                
}                                                                                                      }                                                                                                   
if ("jar".equals(url.getProtocol()) || url.getPath().endsWith(Constants.JAR_EXT)) {                    if ("jar".equals(url.getProtocol()) || url.getPath().endsWith(Constants.JAR_EXT)) {                 
try (Jar jar = JarFactory.newInstance(url)) {                                                          try (Jar jar = JarFactory.newInstance(url)) {                                                       
if (isScanManifest()) {                                                                                if (isScanManifest()) {                                                                             
processManifest(jar, isWebapp, classPathUrlsToProcess);                                                processManifest(jar, isWebapp, classPathUrlsToProcess);                                             
}                                                                                                      }                                                                                                   
callback.scan(jar, webappPath, isWebapp);                                                              callback.scan(jar, webappPath, isWebapp);                                                           
}                                                                                                      }                                                                                                   
} else if ("file".equals(url.getProtocol())) {                                                         } else if ("file".equals(url.getProtocol())) {                                                      
File f;                                                                                                File f;                                                                                             
try {                                                                                                  try {                                                                                               
f = new File(url.toURI());                                                                             f = new File(url.toURI());                                                                          
if (f.isFile() && isScanAllFiles()) {                                                                  if (f.isFile() && isScanAllFiles()) {                                                               
// Treat this file as a JAR                                                                            // Treat this file as a JAR                                                                         
URL jarURL = UriUtil.buildJarUrl(f);                                                                   URL jarURL = UriUtil.buildJarUrl(f);                                                                
try (Jar jar = JarFactory.newInstance(jarURL)) {                                                       try (Jar jar = JarFactory.newInstance(jarURL)) {                                                    
if (isScanManifest()) {                                                                                if (isScanManifest()) {                                                                             
processManifest(jar, isWebapp, classPathUrlsToProcess);                                                processManifest(jar, isWebapp, classPathUrlsToProcess);                                             
}                                                                                                      }                                                                                                   
callback.scan(jar, webappPath, isWebapp);                                                              callback.scan(jar, webappPath, isWebapp);                                                           
}                                                                                                      }                                                                                                   
} else if (f.isDirectory()) {                                                                          } else if (f.isDirectory()) {                                                                       
if (scanType == JarScanType.PLUGGABILITY) {                                                            if (scanType == JarScanType.PLUGGABILITY) {                                                         
callback.scan(f, webappPath, isWebapp);                                                                callback.scan(f, webappPath, isWebapp);                                                             
} else {                                                                                               } else {                                                                                            
File metainf = new File(f.getAbsoluteFile() + File.separator + "META-INF");                            File metainf = new File(f.getAbsoluteFile() + File.separator + "META-INF");                         
if (metainf.isDirectory()) {                                                                           if (metainf.isDirectory()) {                                                                        
callback.scan(f, webappPath, isWebapp);                                                                callback.scan(f, webappPath, isWebapp);                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} catch (Throwable t) {                                                                                } catch (Throwable t) {                                                                             
ExceptionUtils.handleThrowable(t);                                                                     ExceptionUtils.handleThrowable(t);                                                                  
// Wrap the exception and re-throw                                                                     // Wrap the exception and re-throw                                                                  
IOException ioe = new IOException();                                                                 | throw new IOException(t);                                                                           
ioe.initCause(t);                                                                                    |                                                                                                     
throw ioe;                                                                                           |                                                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
