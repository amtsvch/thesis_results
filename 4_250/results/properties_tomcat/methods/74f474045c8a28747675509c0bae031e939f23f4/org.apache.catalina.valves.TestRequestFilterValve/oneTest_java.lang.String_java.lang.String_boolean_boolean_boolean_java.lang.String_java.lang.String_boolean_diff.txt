private void oneTest(String allow, String deny, boolean denyStatus, boolean addConnectorPort, boolea   private void oneTest(String allow, String deny, boolean denyStatus, boolean addConnectorPort, boolea
// PREPARE                                                                                             // PREPARE                                                                                          
RequestFilterValve valve = null;                                                                       RequestFilterValve valve = null;                                                                    
Connector connector = new Connector();                                                                 Connector connector = new Connector();                                                              
Context context = new StandardContext();                                                               Context context = new StandardContext();                                                            
Request request = new Request(connector);                                                              Request request = new Request(connector);                                                           
Response response = new MockResponse();                                                                Response response = new MockResponse();                                                             
StringBuilder msg = new StringBuilder();                                                               StringBuilder msg = new StringBuilder();                                                            
int expected = allowed ? OK : FORBIDDEN;                                                               int expected = allowed ? OK : FORBIDDEN;                                                            
connector.setPort(PORT);                                                                               connector.setPort(PORT);                                                                            
request.getMappingData().context = context;                                                            request.getMappingData().context = context;                                                         
request.setCoyoteRequest(new org.apache.coyote.Request());                                             request.setCoyoteRequest(new org.apache.coyote.Request());                                          
Assert.assertNotNull("Invalid test with null type", type);                                             Assert.assertNotNull("Invalid test with null type", type);                                          
if (property != null) {                                                                                if (property != null) {                                                                             
if (type.equals("Addr")) {                                                                             if (type.equals("Addr")) {                                                                          
valve = new RemoteAddrValve();                                                                         valve = new RemoteAddrValve();                                                                      
request.setRemoteAddr(property);                                                                       request.setRemoteAddr(property);                                                                    
msg.append(" ip='" + property + "'");                                                                  msg.append(" ip='" + property + "'");                                                               
} else if (type.equals("Host")) {                                                                      } else if (type.equals("Host")) {                                                                   
valve = new RemoteHostValve();                                                                         valve = new RemoteHostValve();                                                                      
request.setRemoteHost(property);                                                                       request.setRemoteHost(property);                                                                    
msg.append(" host='" + property + "'");                                                                msg.append(" host='" + property + "'");                                                             
                                                                                                     | } else if (type.equals("CIDR")) {                                                                   
                                                                                                     | valve = new RemoteCIDRValve();                                                                      
                                                                                                     | request.setRemoteAddr(property);                                                                    
                                                                                                     | msg.append(" ip='" + property + "'");                                                               
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
Assert.assertNotNull("Invalid test type" + type, valve);                                               Assert.assertNotNull("Invalid test type" + type, valve);                                            
valve.setNext(new TerminatingValve());                                                                 valve.setNext(new TerminatingValve());                                                              
if (allow != null) {                                                                                   if (allow != null) {                                                                                
valve.setAllow(allow);                                                                                 valve.setAllow(allow);                                                                              
msg.append(" allow='" + allow + "'");                                                                  msg.append(" allow='" + allow + "'");                                                               
}                                                                                                      }                                                                                                   
if (deny != null) {                                                                                    if (deny != null) {                                                                                 
valve.setDeny(deny);                                                                                   valve.setDeny(deny);                                                                                
msg.append(" deny='" + deny + "'");                                                                    msg.append(" deny='" + deny + "'");                                                                 
}                                                                                                      }                                                                                                   
if (denyStatus) {                                                                                      if (denyStatus) {                                                                                   
valve.setDenyStatus(CUSTOM);                                                                           valve.setDenyStatus(CUSTOM);                                                                        
msg.append(" denyStatus='" + CUSTOM + "'");                                                            msg.append(" denyStatus='" + CUSTOM + "'");                                                         
if (!allowed) {                                                                                        if (!allowed) {                                                                                     
expected = CUSTOM;                                                                                     expected = CUSTOM;                                                                                  
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (addConnectorPort) {                                                                                if (addConnectorPort) {                                                                             
if (valve instanceof RemoteAddrValve) {                                                                if (valve instanceof RemoteAddrValve) {                                                             
((RemoteAddrValve) valve).setAddConnectorPort(true);                                                   ((RemoteAddrValve) valve).setAddConnectorPort(true);                                                
} else if (valve instanceof RemoteHostValve) {                                                         } else if (valve instanceof RemoteHostValve) {                                                      
((RemoteHostValve) valve).setAddConnectorPort(true);                                                   ((RemoteHostValve) valve).setAddConnectorPort(true);                                                
                                                                                                     | } else if (valve instanceof RemoteCIDRValve) {                                                      
                                                                                                     | ((RemoteCIDRValve) valve).setAddConnectorPort(true);                                                
} else {                                                                                               } else {                                                                                            
Assert.fail("Can only set 'addConnectorPort' for RemoteAddrValve and RemoteHostValve");              | Assert.fail("Can only set 'addConnectorPort' for RemoteAddrValve, RemoteHostValve and RemoteCIDRValv
}                                                                                                      }                                                                                                   
msg.append(" addConnectorPort='true'");                                                                msg.append(" addConnectorPort='true'");                                                             
}                                                                                                      }                                                                                                   
if (auth) {                                                                                            if (auth) {                                                                                         
context.setPreemptiveAuthentication(true);                                                             context.setPreemptiveAuthentication(true);                                                          
valve.setInvalidAuthenticationWhenDeny(true);                                                          valve.setInvalidAuthenticationWhenDeny(true);                                                       
msg.append(" auth='true'");                                                                            msg.append(" auth='true'");                                                                         
}                                                                                                      }                                                                                                   
// TEST                                                                                                // TEST                                                                                             
try {                                                                                                  try {                                                                                               
valve.invoke(request, response);                                                                       valve.invoke(request, response);                                                                    
} catch (IOException | ServletException ex) {                                                          } catch (IOException | ServletException ex) {                                                       
// Ignore                                                                                              // Ignore                                                                                           
}                                                                                                      }                                                                                                   
// VERIFY                                                                                              // VERIFY                                                                                           
if (!allowed && auth) {                                                                                if (!allowed && auth) {                                                                             
Assert.assertEquals(msg.toString(), OK, response.getStatus());                                         Assert.assertEquals(msg.toString(), OK, response.getStatus());                                      
Assert.assertEquals(msg.toString(), "invalid", request.getHeader("authorization"));                    Assert.assertEquals(msg.toString(), "invalid", request.getHeader("authorization"));                 
} else {                                                                                               } else {                                                                                            
Assert.assertEquals(msg.toString(), expected, response.getStatus());                                   Assert.assertEquals(msg.toString(), expected, response.getStatus());                                
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
