protected void sendAsyncData(ChannelMessage msg, Member[] destination, InterceptorPayload payload) {
    ErrorHandler handler = null;
    if (payload != null) {
        handler = payload.getErrorHandler();
    }
    try {
        super.sendMessage(destination, msg, null);
        try {
            if (handler != null) {
                handler.handleCompletion(new UniqueId(msg.getUniqueId()));
            }
        } catch (Exception ex) {
            log.error(sm.getString("messageDispatchInterceptor.completeMessage.failed"), ex);
        }
    } catch (Exception x) {
        ChannelException cx = null;
        if (x instanceof ChannelException) {
            cx = (ChannelException) x;
        } else {
            cx = new ChannelException(x);
        }
        if (log.isDebugEnabled()) {
            log.debug(sm.getString("messageDispatchInterceptor.AsyncMessage.failed"), x);
        }
        try {
            if (handler != null) {
                handler.handleError(cx, new UniqueId(msg.getUniqueId()));
            }
        } catch (Exception ex) {
            log.error(sm.getString("messageDispatchInterceptor.errorMessage.failed"), ex);
        }
    } finally {
        addAndGetCurrentSize(-msg.getMessage().getLength());
    }
}