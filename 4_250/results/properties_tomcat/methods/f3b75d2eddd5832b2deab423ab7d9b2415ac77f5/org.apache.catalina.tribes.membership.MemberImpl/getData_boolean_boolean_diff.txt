@Override
public synchronized byte[] getData(boolean getalive, boolean reset) {
    if (reset) {
        dataPkg = null;
    }
    // Look in cache first
    if (dataPkg != null) {
        if (getalive) {
            // You'd be surprised, but System.currentTimeMillis
            // shows up on the profiler
            long alive = System.currentTimeMillis() - getServiceStartTime();
            byte[] result = dataPkg.clone();
            XByteBuffer.toBytes(alive, result, TRIBES_MBR_BEGIN.length + 4);
            dataPkg = result;
        }
        return dataPkg;
    }
    // package looks like
    // start package TRIBES_MBR_BEGIN.length
    // package length - 4 bytes
    // alive - 8 bytes
    // port - 4 bytes
    // secure port - 4 bytes
    // udp port - 4 bytes
    // host length - 1 byte
    // host - hl bytes
    // clen - 4 bytes
    // command - clen bytes
    // dlen - 4 bytes
    // domain - dlen bytes
    // uniqueId - 16 bytes
    // payload length - 4 bytes
    // payload plen bytes
    // end package TRIBES_MBR_END.length
    long alive = System.currentTimeMillis() - getServiceStartTime();
    byte[] data = new byte[getDataLength()];
    int bodylength = (getDataLength() - TRIBES_MBR_BEGIN.length - TRIBES_MBR_END.length - 4);
    int pos = 0;
    // TRIBES_MBR_BEGIN
    System.arraycopy(TRIBES_MBR_BEGIN, 0, data, pos, TRIBES_MBR_BEGIN.length);
    pos += TRIBES_MBR_BEGIN.length;
    // body length
    XByteBuffer.toBytes(bodylength, data, pos);
    pos += 4;
    // alive data
    XByteBuffer.toBytes(alive, data, pos);
    pos += 8;
    // port
    XByteBuffer.toBytes(port, data, pos);
    pos += 4;
    // secure port
    XByteBuffer.toBytes(securePort, data, pos);
    pos += 4;
    // udp port
    XByteBuffer.toBytes(udpPort, data, pos);
    pos += 4;
    // host length
    data[pos++] = (byte) host.length;
    // host
    System.arraycopy(host, 0, data, pos, host.length);
    pos += host.length;
    // clen - 4 bytes
    XByteBuffer.toBytes(command.length, data, pos);
    pos += 4;
    // command - clen bytes
    System.arraycopy(command, 0, data, pos, command.length);
    pos += command.length;
    // dlen - 4 bytes
    XByteBuffer.toBytes(domain.length, data, pos);
    pos += 4;
    // domain - dlen bytes
    System.arraycopy(domain, 0, data, pos, domain.length);
    pos += domain.length;
    // unique Id
    System.arraycopy(uniqueId, 0, data, pos, uniqueId.length);
    pos += uniqueId.length;
    // payload
    XByteBuffer.toBytes(payload.length, data, pos);
    pos += 4;
    System.arraycopy(payload, 0, data, pos, payload.length);
    pos += payload.length;
    // TRIBES_MBR_END
    System.arraycopy(TRIBES_MBR_END, 0, data, pos, TRIBES_MBR_END.length);
    pos += TRIBES_MBR_END.length;
    // create local data
    dataPkg = data;
    return data;
}