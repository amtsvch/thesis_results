private void memberBroadcastsReceived(final byte[] b) {
    if (log.isTraceEnabled())
        log.trace("Mcast received broadcasts.");
    XByteBuffer buffer = new XByteBuffer(b, true);
    if (buffer.countPackages(true) > 0) {
        int count = buffer.countPackages();
        final ChannelData[] data = new ChannelData[count];
        for (int i = 0; i < count; i++) {
            try {
                data[i] = buffer.extractPackage(true);
            } catch (IllegalStateException ise) {
                log.debug("Unable to decode message.", ise);
            }
        }
        Runnable t = new Runnable() {

            @Override
            public void run() {
                String name = Thread.currentThread().getName();
                try {
                    Thread.currentThread().setName("Membership-MemberAdded");
                    for (ChannelData datum : data) {
                        try {
                            if (datum != null && !member.equals(datum.getAddress())) {
                                msgservice.messageReceived(datum);
                            }
                        } catch (Throwable t) {
                            if (t instanceof ThreadDeath) {
                                throw (ThreadDeath) t;
                            }
                            if (t instanceof VirtualMachineError) {
                                throw (VirtualMachineError) t;
                            }
                            log.error(sm.getString("mcastServiceImpl.unableReceive.broadcastMessage"), t);
                        }
                    }
                } finally {
                    Thread.currentThread().setName(name);
                }
            }
        };
        executor.execute(t);
    }
}