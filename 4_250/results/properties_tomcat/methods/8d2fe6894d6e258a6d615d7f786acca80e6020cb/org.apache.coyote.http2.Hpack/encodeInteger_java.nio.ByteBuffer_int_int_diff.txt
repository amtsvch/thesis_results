/**
 * Encodes an integer in the HPACK prefix format.
 * <p/>
 * This method assumes that the buffer has already had the first 8-n bits filled.
 * As such it will modify the last byte that is already present in the buffer, and
 * potentially add more if required
 *
 * @param source The buffer that contains the integer
 * @param value  The integer to encode
 * @param n      The encoding prefix length
 */
static void encodeInteger(ByteBuffer source, int value, int n) {
    int twoNminus1 = PREFIX_TABLE[n];
    int pos = source.position() - 1;
    if (value < twoNminus1) {
        source.put(pos, (byte) (source.get(pos) | value));
    } else {
        source.put(pos, (byte) (source.get(pos) | twoNminus1));
        value = value - twoNminus1;
        while (value >= 128) {
            source.put((byte) (value % 128 + 128));
            value = value / 128;
        }
        source.put((byte) value);
    }
}