private static final void loadTomcatPackage(ClassLoader loader) throws Exception {
    final String basePackage = "org.apache.tomcat.";
    // buf
    loader.loadClass(basePackage + "util.buf.B2CConverter");
    loader.loadClass(basePackage + "util.buf.ByteBufferUtils");
    loader.loadClass(basePackage + "util.buf.C2BConverter");
    loader.loadClass(basePackage + "util.buf.HexUtils");
    loader.loadClass(basePackage + "util.buf.StringCache");
    loader.loadClass(basePackage + "util.buf.StringCache$ByteEntry");
    loader.loadClass(basePackage + "util.buf.StringCache$CharEntry");
    loader.loadClass(basePackage + "util.buf.UriUtil");
    // collections
    loader.loadClass(basePackage + "util.collections.CaseInsensitiveKeyMap");
    loader.loadClass(basePackage + "util.collections.CaseInsensitiveKeyMap$EntryImpl");
    loader.loadClass(basePackage + "util.collections.CaseInsensitiveKeyMap$EntryIterator");
    loader.loadClass(basePackage + "util.collections.CaseInsensitiveKeyMap$EntrySet");
    loader.loadClass(basePackage + "util.collections.CaseInsensitiveKeyMap$Key");
    // http
    loader.loadClass(basePackage + "util.http.CookieProcessor");
    loader.loadClass(basePackage + "util.http.NamesEnumerator");
    // Make sure system property is read at this point
    Class<?> clazz = loader.loadClass(basePackage + "util.http.FastHttpDateFormat");
    clazz.getConstructor().newInstance();
    loader.loadClass(basePackage + "util.http.parser.HttpParser");
    loader.loadClass(basePackage + "util.http.parser.MediaType");
    loader.loadClass(basePackage + "util.http.parser.MediaTypeCache");
    loader.loadClass(basePackage + "util.http.parser.SkipResult");
    // net
    loader.loadClass(basePackage + "util.net.Constants");
    loader.loadClass(basePackage + "util.net.DispatchType");
    loader.loadClass(basePackage + "util.net.AprEndpoint$AprSocketWrapper$AprOperationState");
    loader.loadClass(basePackage + "util.net.NioEndpoint$NioSocketWrapper$NioOperationState");
    loader.loadClass(basePackage + "util.net.Nio2Endpoint$Nio2SocketWrapper$Nio2OperationState");
    loader.loadClass(basePackage + "util.net.SocketWrapperBase$BlockingMode");
    loader.loadClass(basePackage + "util.net.SocketWrapperBase$CompletionCheck");
    loader.loadClass(basePackage + "util.net.SocketWrapperBase$CompletionHandlerCall");
    loader.loadClass(basePackage + "util.net.SocketWrapperBase$CompletionState");
    loader.loadClass(basePackage + "util.net.SocketWrapperBase$VectoredIOCompletionHandler");
    // security
    loader.loadClass(basePackage + "util.security.PrivilegedGetTccl");
    loader.loadClass(basePackage + "util.security.PrivilegedSetTccl");
}