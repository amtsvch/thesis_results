private boolean buildClassPath(StringBuilder classpath, ClassLoader loader) {
    if (loader instanceof URLClassLoader) {
        URL[] repositories = ((URLClassLoader) loader).getURLs();
        for (URL url : repositories) {
            String repository = url.toString();
            if (repository.startsWith("file://")) {
                repository = UDecoder.URLDecode(repository.substring(7), StandardCharsets.UTF_8);
            } else if (repository.startsWith("file:")) {
                repository = UDecoder.URLDecode(repository.substring(5), StandardCharsets.UTF_8);
            } else {
                continue;
            }
            if (repository == null) {
                continue;
            }
            if (classpath.length() > 0) {
                classpath.append(File.pathSeparator);
            }
            classpath.append(repository);
        }
    } else if (loader == ClassLoader.getSystemClassLoader()) {
        // Java 9 onwards. The internal class loaders no longer extend
        // URLCLassLoader
        String cp = System.getProperty("java.class.path");
        if (cp != null && cp.length() > 0) {
            if (classpath.length() > 0) {
                classpath.append(File.pathSeparator);
            }
            classpath.append(cp);
        }
        return false;
    } else {
        // Ignore Graal "unknown" classloader
        if (!JreCompat.isGraalAvailable()) {
            log.info(sm.getString("webappLoader.unknownClassLoader", loader, loader.getClass()));
        }
        return false;
    }
    return true;
}