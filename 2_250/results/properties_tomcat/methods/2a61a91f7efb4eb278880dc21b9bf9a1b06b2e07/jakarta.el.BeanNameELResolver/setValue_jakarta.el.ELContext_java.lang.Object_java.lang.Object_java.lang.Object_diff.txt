@Override
public void setValue(ELContext context, Object base, Object property, Object value) {
    Objects.requireNonNull(context);
    if (base != null || !(property instanceof String)) {
        return;
    }
    String beanName = (String) property;
    boolean isResolved = context.isPropertyResolved();
    boolean isReadOnly;
    try {
        isReadOnly = isReadOnly(context, base, property);
    } catch (Throwable t) {
        Util.handleThrowable(t);
        throw new ELException(t);
    } finally {
        context.setPropertyResolved(isResolved);
    }
    if (isReadOnly) {
        throw new PropertyNotWritableException(Util.message(context, "beanNameELResolver.beanReadOnly", beanName));
    }
    if (beanNameResolver.isNameResolved(beanName) || beanNameResolver.canCreateBean(beanName)) {
        try {
            beanNameResolver.setBeanValue(beanName, value);
            context.setPropertyResolved(base, property);
        } catch (Throwable t) {
            Util.handleThrowable(t);
            throw new ELException(t);
        }
    }
}