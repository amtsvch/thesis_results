private String getFormatInternal(long time) {
    long seconds = time / 1000;
    /* First step: if we have seen this timestamp
                   during the previous call, and we need CLF, return the previous value. */
    if (seconds == previousSeconds) {
        return previousFormat;
    }
    /* Second step: Try to locate in cache */
    previousSeconds = seconds;
    int index = (offset + (int) (seconds - first)) % cacheSize;
    if (index < 0) {
        index += cacheSize;
    }
    if (seconds >= first && seconds <= last) {
        if (cache[index] != null) {
            /* Found, so remember for next call and return.*/
            previousFormat = cache[index];
            return previousFormat;
        }
        /* Third step: not found in cache, adjust cache and add item */
    } else if (seconds >= last + cacheSize || seconds <= first - cacheSize) {
        first = seconds;
        last = first + cacheSize - 1;
        index = 0;
        offset = 0;
        for (int i = 1; i < cacheSize; i++) {
            cache[i] = null;
        }
    } else if (seconds > last) {
        for (int i = 1; i < seconds - last; i++) {
            cache[(index + cacheSize - i) % cacheSize] = null;
        }
        first = seconds - (cacheSize - 1);
        last = seconds;
        offset = (index + 1) % cacheSize;
    } else if (seconds < first) {
        for (int i = 1; i < first - seconds; i++) {
            cache[(index + i) % cacheSize] = null;
        }
        first = seconds;
        last = seconds + (cacheSize - 1);
        offset = index;
    }
    /* Last step: format new timestamp either using
                 * parent cache or locally. */
    if (parent != null) {
        synchronized (parent) {
            previousFormat = parent.getFormatInternal(time);
        }
    } else {
        currentDate.setTime(time);
        previousFormat = formatter.format(currentDate);
        if (isCLF) {
            StringBuilder current = new StringBuilder(32);
            current.append('[');
            current.append(previousFormat);
            current.append(']');
            previousFormat = current.toString();
        }
    }
    cache[index] = previousFormat;
    return previousFormat;
}