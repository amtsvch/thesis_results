/**                                                                                                    /**                                                                                                 
* If a manager for a package/Locale combination already exists, it will be                             * If a manager for a package/Locale combination already exists, it will be                          
* reused, else a new StringManager will be created and returned.                                       * reused, else a new StringManager will be created and returned.                                    
*                                                                                                      *                                                                                                   
* @param packageName The package name                                                                  * @param packageName The package name                                                               
* @param locale      The Locale                                                                        * @param locale      The Locale                                                                     
*                                                                                                      *                                                                                                   
* @return The StringManager for a particular package and Locale                                        * @return The StringManager for a particular package and Locale                                     
*/                                                                                                     */                                                                                                  
public static final synchronized StringManager getManager(String packageName, Locale locale) {         public static final synchronized StringManager getManager(String packageName, Locale locale) {      
Map&lt;Locale, StringManager&gt; map = managers.get(packageName);                                      Map&lt;Locale, StringManager&gt; map = managers.get(packageName);                                   
if (map == null) {                                                                                     if (map == null) {                                                                                  
/*                                                                                                     /*                                                                                                  
* Don't want the HashMap to be expanded beyond LOCALE_CACHE_SIZE.                                      * Don't want the HashMap to be expanded beyond LOCALE_CACHE_SIZE.                                   
* Expansion occurs when size() exceeds capacity. Therefore keep                                        * Expansion occurs when size() exceeds capacity. Therefore keep                                     
* size at or below capacity.                                                                           * size at or below capacity.                                                                        
* removeEldestEntry() executes after insertion therefore the test                                      * removeEldestEntry() executes after insertion therefore the test                                   
* for removal needs to use one less than the maximum desired size                                      * for removal needs to use one less than the maximum desired size                                   
*                                                                                                      *                                                                                                   
*/                                                                                                     */                                                                                                  
map = new LinkedHashMap&lt;Locale, StringManager&gt;(LOCALE_CACHE_SIZE, 1, true) {                   | map = new LinkedHashMap&lt;&gt;(LOCALE_CACHE_SIZE, 1, true) {                                       
                                                                                                                                                                                                           
private static final long serialVersionUID = 1L;                                                       private static final long serialVersionUID = 1L;                                                    
                                                                                                                                                                                                           
@Override                                                                                              @Override                                                                                           
protected boolean removeEldestEntry(Map.Entry&lt;Locale, StringManager&gt; eldest) {                   protected boolean removeEldestEntry(Map.Entry&lt;Locale, StringManager&gt; eldest) {                
if (size() &gt; (LOCALE_CACHE_SIZE - 1)) {                                                             if (size() &gt; (LOCALE_CACHE_SIZE - 1)) {                                                          
return true;                                                                                           return true;                                                                                        
}                                                                                                      }                                                                                                   
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
};                                                                                                     };                                                                                                  
managers.put(packageName, map);                                                                        managers.put(packageName, map);                                                                     
}                                                                                                      }                                                                                                   
StringManager mgr = map.get(locale);                                                                   StringManager mgr = map.get(locale);                                                                
if (mgr == null) {                                                                                     if (mgr == null) {                                                                                  
mgr = new StringManager(packageName, locale);                                                          mgr = new StringManager(packageName, locale);                                                       
map.put(locale, mgr);                                                                                  map.put(locale, mgr);                                                                               
}                                                                                                      }                                                                                                   
return mgr;                                                                                            return mgr;                                                                                         
}                                                                                                      }                                                                                                   
