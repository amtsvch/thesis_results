/**
 * transfers sender properties from one sender to another
 * @param from AbstractSender
 * @param to AbstractSender
 */
public static void transferProperties(AbstractSender from, AbstractSender to) {
    to.rxBufSize = from.rxBufSize;
    to.txBufSize = from.txBufSize;
    to.directBuffer = from.directBuffer;
    to.keepAliveCount = from.keepAliveCount;
    to.keepAliveTime = from.keepAliveTime;
    to.timeout = from.timeout;
    to.destination = from.destination;
    to.address = from.address;
    to.port = from.port;
    to.maxRetryAttempts = from.maxRetryAttempts;
    to.tcpNoDelay = from.tcpNoDelay;
    to.soKeepAlive = from.soKeepAlive;
    to.ooBInline = from.ooBInline;
    to.soReuseAddress = from.soReuseAddress;
    to.soLingerOn = from.soLingerOn;
    to.soLingerTime = from.soLingerTime;
    to.soTrafficClass = from.soTrafficClass;
    to.throwOnFailedAck = from.throwOnFailedAck;
    to.udpBased = from.udpBased;
    to.udpPort = from.udpPort;
}