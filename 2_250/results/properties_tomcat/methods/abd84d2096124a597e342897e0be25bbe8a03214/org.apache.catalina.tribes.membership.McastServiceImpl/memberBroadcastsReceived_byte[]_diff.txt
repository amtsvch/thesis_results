private void memberBroadcastsReceived(final byte[] b) {
    if (log.isTraceEnabled()) {
        log.trace("Mcast received broadcasts.");
    }
    XByteBuffer buffer = new XByteBuffer(b, true);
    if (buffer.countPackages(true) > 0) {
        int count = buffer.countPackages();
        final ChannelData[] data = new ChannelData[count];
        for (int i = 0; i < count; i++) {
            try {
                data[i] = buffer.extractPackage(true);
            } catch (IllegalStateException ise) {
                log.debug("Unable to decode message.", ise);
            }
        }
        Runnable t = () -> {
            String name = Thread.currentThread().getName();
            try {
                Thread.currentThread().setName("Membership-MemberAdded");
                for (ChannelData datum : data) {
                    try {
                        if (datum != null && !member.equals(datum.getAddress())) {
                            msgservice.messageReceived(datum);
                        }
                    } catch (Throwable t1) {
                        if (t1 instanceof ThreadDeath) {
                            throw (ThreadDeath) t1;
                        }
                        if (t1 instanceof VirtualMachineError) {
                            throw (VirtualMachineError) t1;
                        }
                        log.error(sm.getString("mcastServiceImpl.unableReceive.broadcastMessage"), t1);
                    }
                }
            } finally {
                Thread.currentThread().setName(name);
            }
        };
        executor.execute(t);
    }
}