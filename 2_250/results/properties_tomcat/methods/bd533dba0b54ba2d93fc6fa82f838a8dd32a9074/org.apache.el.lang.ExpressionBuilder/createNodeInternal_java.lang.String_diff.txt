private static final Node createNodeInternal(String expr) throws ELException {                         private static final Node createNodeInternal(String expr) throws ELException {                      
if (expr == null) {                                                                                    if (expr == null) {                                                                                 
throw new ELException(MessageFactory.get("error.null"));                                               throw new ELException(MessageFactory.get("error.null"));                                            
}                                                                                                      }                                                                                                   
Node n = expressionCache.get(expr);                                                                    Node n = expressionCache.get(expr);                                                                 
if (n == null) {                                                                                       if (n == null) {                                                                                    
ELParser parser = parserCache.pop();                                                                   ELParser parser = parserCache.pop();                                                                
try {                                                                                                  try {                                                                                               
if (parser == null) {                                                                                  if (parser == null) {                                                                               
parser = new ELParser(new StringReader(expr));                                                         parser = new ELParser(new StringReader(expr));                                                      
} else {                                                                                               } else {                                                                                            
parser.ReInit(new StringReader(expr));                                                                 parser.ReInit(new StringReader(expr));                                                              
}                                                                                                      }                                                                                                   
n = parser.CompositeExpression();                                                                      n = parser.CompositeExpression();                                                                   
// validate composite expression                                                                       // validate composite expression                                                                    
int numChildren = n.jjtGetNumChildren();                                                               int numChildren = n.jjtGetNumChildren();                                                            
if (numChildren == 1) {                                                                                if (numChildren == 1) {                                                                             
n = n.jjtGetChild(0);                                                                                  n = n.jjtGetChild(0);                                                                               
} else {                                                                                               } else {                                                                                            
Class&lt;?&gt; type = null;                                                                            Class&lt;?&gt; type = null;                                                                         
Node child = null;                                                                                     Node child = null;                                                                                  
for (int i = 0; i &lt; numChildren; i++) {                                                             for (int i = 0; i &lt; numChildren; i++) {                                                          
child = n.jjtGetChild(i);                                                                              child = n.jjtGetChild(i);                                                                           
if (child instanceof AstLiteralExpression)                                                           | if (child instanceof AstLiteralExpression) {                                                        
continue;                                                                                              continue;                                                                                           
if (type == null)                                                                                    | }                                                                                                   
                                                                                                     | if (type == null) {                                                                                 
type = child.getClass();                                                                               type = child.getClass();                                                                            
else {                                                                                               | } else {                                                                                            
if (!type.equals(child.getClass())) {                                                                  if (!type.equals(child.getClass())) {                                                               
throw new ELException(MessageFactory.get("error.mixed", expr));                                        throw new ELException(MessageFactory.get("error.mixed", expr));                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (n instanceof AstDeferredExpression || n instanceof AstDynamicExpression) {                         if (n instanceof AstDeferredExpression || n instanceof AstDynamicExpression) {                      
n = n.jjtGetChild(0);                                                                                  n = n.jjtGetChild(0);                                                                               
}                                                                                                      }                                                                                                   
expressionCache.put(expr, n);                                                                          expressionCache.put(expr, n);                                                                       
} catch (Exception e) {                                                                                } catch (Exception e) {                                                                             
throw new ELException(MessageFactory.get("error.parseFail", expr), e);                                 throw new ELException(MessageFactory.get("error.parseFail", expr), e);                              
} finally {                                                                                            } finally {                                                                                         
if (parser != null) {                                                                                  if (parser != null) {                                                                               
parserCache.push(parser);                                                                              parserCache.push(parser);                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return n;                                                                                              return n;                                                                                           
}                                                                                                      }                                                                                                   
