/**                                                                                                    /**                                                                                                 
* Adds complete information about a simple line mapping.  Specify                                      * Adds complete information about a simple line mapping.  Specify                                   
* all the fields in this method; the back-end machinery takes care                                     * all the fields in this method; the back-end machinery takes care                                  
* of printing only those that are necessary in the final SMAP.                                         * of printing only those that are necessary in the final SMAP.                                      
* (My view is that fields are optional primarily for spatial efficiency,                               * (My view is that fields are optional primarily for spatial efficiency,                            
* not for programmer convenience.  Could always add utility methods                                    * not for programmer convenience.  Could always add utility methods                                 
* later.)                                                                                              * later.)                                                                                           
*                                                                                                      *                                                                                                   
* @param inputStartLine starting line in the source file                                               * @param inputStartLine starting line in the source file                                            
*        (SMAP &lt;code&gt;InputStartLine&lt;/code&gt;)                                                *        (SMAP &lt;code&gt;InputStartLine&lt;/code&gt;)                                             
* @param inputFileName the filepath (or name) from which the input comes                               * @param inputFileName the filepath (or name) from which the input comes                            
*        (yields SMAP &lt;code&gt;LineFileID&lt;/code&gt;)  Use unqualified names                      *        (yields SMAP &lt;code&gt;LineFileID&lt;/code&gt;)  Use unqualified names                   
*        carefully, and only when they uniquely identify a file.                                       *        carefully, and only when they uniquely identify a file.                                    
* @param inputLineCount the number of lines in the input to map                                        * @param inputLineCount the number of lines in the input to map                                     
*        (SMAP &lt;code&gt;LineFileCount&lt;/code&gt;)                                                 *        (SMAP &lt;code&gt;LineFileCount&lt;/code&gt;)                                              
* @param outputStartLine starting line in the output file                                              * @param outputStartLine starting line in the output file                                           
*        (SMAP &lt;code&gt;OutputStartLine&lt;/code&gt;)                                               *        (SMAP &lt;code&gt;OutputStartLine&lt;/code&gt;)                                            
* @param outputLineIncrement number of output lines to map to each                                     * @param outputLineIncrement number of output lines to map to each                                  
*        input line (SMAP &lt;code&gt;OutputLineIncrement&lt;/code&gt;).  &lt;i&gt;Given the           *        input line (SMAP &lt;code&gt;OutputLineIncrement&lt;/code&gt;).  &lt;i&gt;Given the        
*        fact that the name starts with "output", I continuously have                                  *        fact that the name starts with "output", I continuously have                               
*        the subconscious urge to call this field                                                      *        the subconscious urge to call this field                                                   
*        &lt;code&gt;OutputLineExcrement&lt;/code&gt;.&lt;/i&gt;                                       *        &lt;code&gt;OutputLineExcrement&lt;/code&gt;.&lt;/i&gt;                                    
*/                                                                                                     */                                                                                                  
public void addLineData(int inputStartLine, String inputFileName, int inputLineCount, int outputStar   public void addLineData(int inputStartLine, String inputFileName, int inputLineCount, int outputStar
// check the input - what are you doing here??                                                         // check the input - what are you doing here??                                                      
int fileIndex = filePathList.indexOf(inputFileName);                                                   int fileIndex = filePathList.indexOf(inputFileName);                                                
if (// still                                                                                         | if (fileIndex == -1) {                                                                              
fileIndex == -1)                                                                                     |                                                                                                     
throw new IllegalArgumentException("inputFileName: " + inputFileName);                                 throw new IllegalArgumentException("inputFileName: " + inputFileName);                              
                                                                                                     | }                                                                                                   
// Jasper incorrectly SMAPs certain Nodes, giving them an                                              // Jasper incorrectly SMAPs certain Nodes, giving them an                                           
// outputStartLine of 0.  This can cause a fatal error in                                              // outputStartLine of 0.  This can cause a fatal error in                                           
// optimizeLineSection, making it impossible for Jasper to                                             // optimizeLineSection, making it impossible for Jasper to                                          
// compile the JSP.  Until we can fix the underlying                                                   // compile the JSP.  Until we can fix the underlying                                                
// SMAPping problem, we simply ignore the flawed SMAP entries.                                         // SMAPping problem, we simply ignore the flawed SMAP entries.                                      
if (outputStartLine == 0)                                                                            | if (outputStartLine == 0) {                                                                         
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
// build the LineInfo                                                                                  // build the LineInfo                                                                               
LineInfo li = new LineInfo();                                                                          LineInfo li = new LineInfo();                                                                       
li.setInputStartLine(inputStartLine);                                                                  li.setInputStartLine(inputStartLine);                                                               
li.setInputLineCount(inputLineCount);                                                                  li.setInputLineCount(inputLineCount);                                                               
li.setOutputStartLine(outputStartLine);                                                                li.setOutputStartLine(outputStartLine);                                                             
li.setOutputLineIncrement(outputLineIncrement);                                                        li.setOutputLineIncrement(outputLineIncrement);                                                     
if (fileIndex != lastFileID)                                                                         | if (fileIndex != lastFileID) {                                                                      
li.setLineFileID(fileIndex);                                                                           li.setLineFileID(fileIndex);                                                                        
                                                                                                     | }                                                                                                   
lastFileID = fileIndex;                                                                                lastFileID = fileIndex;                                                                             
// save it                                                                                             // save it                                                                                          
lineData.add(li);                                                                                      lineData.add(li);                                                                                   
}                                                                                                      }                                                                                                   
