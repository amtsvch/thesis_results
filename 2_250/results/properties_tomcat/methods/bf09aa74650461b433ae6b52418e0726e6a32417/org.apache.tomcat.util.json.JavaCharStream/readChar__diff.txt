/**                                                                                                    /**                                                                                                 
* Read a character.                                                                                    * Read a character.                                                                                 
*/                                                                                                     */                                                                                                  
public char readChar() throws java.io.IOException {                                                    public char readChar() throws java.io.IOException {                                                 
if (inBuf &gt; 0) {                                                                                    if (inBuf &gt; 0) {                                                                                 
--inBuf;                                                                                               --inBuf;                                                                                            
if (++bufpos == bufsize)                                                                             | if (++bufpos == bufsize) {                                                                          
bufpos = 0;                                                                                            bufpos = 0;                                                                                         
                                                                                                     | }                                                                                                   
return buffer[bufpos];                                                                                 return buffer[bufpos];                                                                              
}                                                                                                      }                                                                                                   
char c;                                                                                                char c;                                                                                             
if (++bufpos == available)                                                                           | if (++bufpos == available) {                                                                        
AdjustBuffSize();                                                                                      AdjustBuffSize();                                                                                   
                                                                                                     | }                                                                                                   
if ((buffer[bufpos] = c = ReadByte()) == '\\') {                                                       if ((buffer[bufpos] = c = ReadByte()) == '\\') {                                                    
if (trackLineColumn) {                                                                                 if (trackLineColumn) {                                                                              
UpdateLineColumn(c);                                                                                   UpdateLineColumn(c);                                                                                
}                                                                                                      }                                                                                                   
int backSlashCnt = 1;                                                                                  int backSlashCnt = 1;                                                                               
for (; ; ) // Read all the backslashes                                                                 for (; ; ) // Read all the backslashes                                                              
{                                                                                                      {                                                                                                   
if (++bufpos == available)                                                                           | if (++bufpos == available) {                                                                        
AdjustBuffSize();                                                                                      AdjustBuffSize();                                                                                   
                                                                                                     | }                                                                                                   
try {                                                                                                  try {                                                                                               
if ((buffer[bufpos] = c = ReadByte()) != '\\') {                                                       if ((buffer[bufpos] = c = ReadByte()) != '\\') {                                                    
if (trackLineColumn) {                                                                                 if (trackLineColumn) {                                                                              
UpdateLineColumn(c);                                                                                   UpdateLineColumn(c);                                                                                
}                                                                                                      }                                                                                                   
// found a non-backslash char.                                                                         // found a non-backslash char.                                                                      
if ((c == 'u') && ((backSlashCnt & 1) == 1)) {                                                         if ((c == 'u') && ((backSlashCnt & 1) == 1)) {                                                      
if (--bufpos &lt; 0)                                                                                 | if (--bufpos &lt; 0) {                                                                              
bufpos = bufsize - 1;                                                                                  bufpos = bufsize - 1;                                                                               
                                                                                                     | }                                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
backup(backSlashCnt);                                                                                  backup(backSlashCnt);                                                                               
return '\\';                                                                                           return '\\';                                                                                        
}                                                                                                      }                                                                                                   
} catch (java.io.IOException e) {                                                                      } catch (java.io.IOException e) {                                                                   
// We are returning one backslash so we should only backup (count-1)                                   // We are returning one backslash so we should only backup (count-1)                                
if (backSlashCnt &gt; 1)                                                                             | if (backSlashCnt &gt; 1) {                                                                          
backup(backSlashCnt - 1);                                                                              backup(backSlashCnt - 1);                                                                           
                                                                                                     | }                                                                                                   
return '\\';                                                                                           return '\\';                                                                                        
}                                                                                                      }                                                                                                   
if (trackLineColumn) {                                                                                 if (trackLineColumn) {                                                                              
UpdateLineColumn(c);                                                                                   UpdateLineColumn(c);                                                                                
}                                                                                                      }                                                                                                   
backSlashCnt++;                                                                                        backSlashCnt++;                                                                                     
}                                                                                                      }                                                                                                   
// Here, we have seen an odd number of backslash's followed by a 'u'                                   // Here, we have seen an odd number of backslash's followed by a 'u'                                
try {                                                                                                  try {                                                                                               
while ((c = ReadByte()) == 'u') ++column;                                                            | while ((c = ReadByte()) == 'u') {                                                                   
                                                                                                     | ++column;                                                                                           
                                                                                                     | }                                                                                                   
buffer[bufpos] = c = (char) (hexval(c) &lt;&lt; 12 | hexval(ReadByte()) &lt;&lt; 8 | hexval(ReadByte   buffer[bufpos] = c = (char) (hexval(c) &lt;&lt; 12 | hexval(ReadByte()) &lt;&lt; 8 | hexval(ReadByte
column += 4;                                                                                           column += 4;                                                                                        
} catch (java.io.IOException e) {                                                                      } catch (java.io.IOException e) {                                                                   
throw new Error("Invalid escape character at line " + line + " column " + column + ".");               throw new Error("Invalid escape character at line " + line + " column " + column + ".");            
}                                                                                                      }                                                                                                   
if (backSlashCnt == 1)                                                                               | if (backSlashCnt == 1) {                                                                            
return c;                                                                                              return c;                                                                                           
else {                                                                                               | } else {                                                                                            
backup(backSlashCnt - 1);                                                                              backup(backSlashCnt - 1);                                                                           
return '\\';                                                                                           return '\\';                                                                                        
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
UpdateLineColumn(c);                                                                                   UpdateLineColumn(c);                                                                                
return c;                                                                                              return c;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
