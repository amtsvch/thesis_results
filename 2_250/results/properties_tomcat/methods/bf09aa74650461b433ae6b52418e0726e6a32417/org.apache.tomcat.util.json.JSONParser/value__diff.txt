final public Object value() throws ParseException {                                                    final public Object value() throws ParseException {                                                 
Object x;                                                                                              Object x;                                                                                           
switch(jj_nt.kind) {                                                                                   switch(jj_nt.kind) {                                                                                
case STRING_SINGLE_EMPTY:                                                                              case STRING_SINGLE_EMPTY:                                                                           
case STRING_DOUBLE_EMPTY:                                                                              case STRING_DOUBLE_EMPTY:                                                                           
case STRING_SINGLE_NONEMPTY:                                                                           case STRING_SINGLE_NONEMPTY:                                                                        
case STRING_DOUBLE_NONEMPTY:                                                                           case STRING_DOUBLE_NONEMPTY:                                                                        
{                                                                                                      {                                                                                                   
x = string();                                                                                          x = string();                                                                                       
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
case NUMBER_INTEGER:                                                                                   case NUMBER_INTEGER:                                                                                
case NUMBER_DECIMAL:                                                                                   case NUMBER_DECIMAL:                                                                                
{                                                                                                      {                                                                                                   
x = number();                                                                                          x = number();                                                                                       
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
case TRUE:                                                                                             case TRUE:                                                                                          
case FALSE:                                                                                            case FALSE:                                                                                         
{                                                                                                      {                                                                                                   
x = booleanValue();                                                                                    x = booleanValue();                                                                                 
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
case NULL:                                                                                             case NULL:                                                                                          
{                                                                                                      {                                                                                                   
x = nullValue();                                                                                       x = nullValue();                                                                                    
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
default:                                                                                               default:                                                                                            
jj_la1[7] = jj_gen;                                                                                    jj_la1[7] = jj_gen;                                                                                 
jj_consume_token(-1);                                                                                  jj_consume_token(-1);                                                                               
throw new ParseException();                                                                            throw new ParseException();                                                                         
}                                                                                                      }                                                                                                   
{                                                                                                      {                                                                                                   
if ("" != null)                                                                                      | if ("" != null) {                                                                                   
return x;                                                                                              return x;                                                                                           
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
throw new Error("Missing return statement in function");                                               throw new Error("Missing return statement in function");                                            
}                                                                                                      }                                                                                                   
