final public java.util.ArrayList&lt;Object&gt; list() throws ParseException {                          final public java.util.ArrayList&lt;Object&gt; list() throws ParseException {                       
final java.util.ArrayList&lt;Object&gt; list = new java.util.ArrayList&lt;Object&gt;();                final java.util.ArrayList&lt;Object&gt; list = new java.util.ArrayList&lt;Object&gt;();             
Object value;                                                                                          Object value;                                                                                       
jj_consume_token(BRACKET_OPEN);                                                                        jj_consume_token(BRACKET_OPEN);                                                                     
switch(jj_nt.kind) {                                                                                   switch(jj_nt.kind) {                                                                                
case BRACE_OPEN:                                                                                       case BRACE_OPEN:                                                                                    
case BRACKET_OPEN:                                                                                     case BRACKET_OPEN:                                                                                  
case NUMBER_INTEGER:                                                                                   case NUMBER_INTEGER:                                                                                
case NUMBER_DECIMAL:                                                                                   case NUMBER_DECIMAL:                                                                                
case TRUE:                                                                                             case TRUE:                                                                                          
case FALSE:                                                                                            case FALSE:                                                                                         
case NULL:                                                                                             case NULL:                                                                                          
case STRING_SINGLE_EMPTY:                                                                              case STRING_SINGLE_EMPTY:                                                                           
case STRING_DOUBLE_EMPTY:                                                                              case STRING_DOUBLE_EMPTY:                                                                           
case STRING_SINGLE_NONEMPTY:                                                                           case STRING_SINGLE_NONEMPTY:                                                                        
case STRING_DOUBLE_NONEMPTY:                                                                           case STRING_DOUBLE_NONEMPTY:                                                                        
{                                                                                                      {                                                                                                   
value = anything();                                                                                    value = anything();                                                                                 
list.add(value);                                                                                       list.add(value);                                                                                    
value = null;                                                                                          value = null;                                                                                       
label_2: while (true) {                                                                                label_2: while (true) {                                                                             
switch(jj_nt.kind) {                                                                                   switch(jj_nt.kind) {                                                                                
case COMMA:                                                                                            case COMMA:                                                                                         
{                                                                                                      {                                                                                                   
;                                                                                                      ;                                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
default:                                                                                               default:                                                                                            
jj_la1[5] = jj_gen;                                                                                    jj_la1[5] = jj_gen;                                                                                 
break label_2;                                                                                         break label_2;                                                                                      
}                                                                                                      }                                                                                                   
jj_consume_token(COMMA);                                                                               jj_consume_token(COMMA);                                                                            
value = anything();                                                                                    value = anything();                                                                                 
list.add(value);                                                                                       list.add(value);                                                                                    
value = null;                                                                                          value = null;                                                                                       
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
default:                                                                                               default:                                                                                            
jj_la1[6] = jj_gen;                                                                                    jj_la1[6] = jj_gen;                                                                                 
;                                                                                                      ;                                                                                                   
}                                                                                                      }                                                                                                   
jj_consume_token(BRACKET_CLOSE);                                                                       jj_consume_token(BRACKET_CLOSE);                                                                    
list.trimToSize();                                                                                     list.trimToSize();                                                                                  
{                                                                                                      {                                                                                                   
if ("" != null)                                                                                      | if ("" != null) {                                                                                   
return list;                                                                                           return list;                                                                                        
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
throw new Error("Missing return statement in function");                                               throw new Error("Missing return statement in function");                                            
}                                                                                                      }                                                                                                   
