/**                                                                                                    /**                                                                                                 
* Get the next Token.                                                                                  * Get the next Token.                                                                               
*/                                                                                                     */                                                                                                  
public Token getNextToken() {                                                                          public Token getNextToken() {                                                                       
Token matchedToken;                                                                                    Token matchedToken;                                                                                 
int curPos = 0;                                                                                        int curPos = 0;                                                                                     
EOFLoop: for (; ; ) {                                                                                  EOFLoop: for (; ; ) {                                                                               
try {                                                                                                  try {                                                                                               
curChar = input_stream.BeginToken();                                                                   curChar = input_stream.BeginToken();                                                                
} catch (java.io.IOException e) {                                                                      } catch (java.io.IOException e) {                                                                   
jjmatchedKind = 0;                                                                                     jjmatchedKind = 0;                                                                                  
matchedToken = jjFillToken();                                                                          matchedToken = jjFillToken();                                                                       
return matchedToken;                                                                                   return matchedToken;                                                                                
}                                                                                                      }                                                                                                   
image = jjimage;                                                                                       image = jjimage;                                                                                    
image.setLength(0);                                                                                    image.setLength(0);                                                                                 
jjimageLen = 0;                                                                                        jjimageLen = 0;                                                                                     
switch(curLexState) {                                                                                  switch(curLexState) {                                                                               
case 0:                                                                                                case 0:                                                                                             
jjmatchedKind = 0x7fffffff;                                                                            jjmatchedKind = 0x7fffffff;                                                                         
jjmatchedPos = 0;                                                                                      jjmatchedPos = 0;                                                                                   
curPos = jjMoveStringLiteralDfa0_0();                                                                  curPos = jjMoveStringLiteralDfa0_0();                                                               
break;                                                                                                 break;                                                                                              
case 1:                                                                                                case 1:                                                                                             
try {                                                                                                  try {                                                                                               
input_stream.backup(0);                                                                                input_stream.backup(0);                                                                             
while (curChar &lt;= 32 && (0x100002600L & (1L &lt;&lt; curChar)) != 0L) curChar = input_stream.Begi | while (curChar &lt;= 32 && (0x100002600L & (1L &lt;&lt; curChar)) != 0L) {                          
                                                                                                     | curChar = input_stream.BeginToken();                                                                
                                                                                                     | }                                                                                                   
} catch (java.io.IOException e1) {                                                                     } catch (java.io.IOException e1) {                                                                  
continue EOFLoop;                                                                                      continue EOFLoop;                                                                                   
}                                                                                                      }                                                                                                   
jjmatchedKind = 0x7fffffff;                                                                            jjmatchedKind = 0x7fffffff;                                                                         
jjmatchedPos = 0;                                                                                      jjmatchedPos = 0;                                                                                   
curPos = jjMoveStringLiteralDfa0_1();                                                                  curPos = jjMoveStringLiteralDfa0_1();                                                               
if (jjmatchedPos == 0 && jjmatchedKind &gt; 61) {                                                      if (jjmatchedPos == 0 && jjmatchedKind &gt; 61) {                                                   
jjmatchedKind = 61;                                                                                    jjmatchedKind = 61;                                                                                 
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
case 2:                                                                                                case 2:                                                                                             
try {                                                                                                  try {                                                                                               
input_stream.backup(0);                                                                                input_stream.backup(0);                                                                             
while (curChar &lt;= 32 && (0x100002600L & (1L &lt;&lt; curChar)) != 0L) curChar = input_stream.Begi | while (curChar &lt;= 32 && (0x100002600L & (1L &lt;&lt; curChar)) != 0L) {                          
                                                                                                     | curChar = input_stream.BeginToken();                                                                
                                                                                                     | }                                                                                                   
} catch (java.io.IOException e1) {                                                                     } catch (java.io.IOException e1) {                                                                  
continue EOFLoop;                                                                                      continue EOFLoop;                                                                                   
}                                                                                                      }                                                                                                   
jjmatchedKind = 0x7fffffff;                                                                            jjmatchedKind = 0x7fffffff;                                                                         
jjmatchedPos = 0;                                                                                      jjmatchedPos = 0;                                                                                   
curPos = jjMoveStringLiteralDfa0_2();                                                                  curPos = jjMoveStringLiteralDfa0_2();                                                               
if (jjmatchedPos == 0 && jjmatchedKind &gt; 61) {                                                      if (jjmatchedPos == 0 && jjmatchedKind &gt; 61) {                                                   
jjmatchedKind = 61;                                                                                    jjmatchedKind = 61;                                                                                 
}                                                                                                      }                                                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
if (jjmatchedKind != 0x7fffffff) {                                                                     if (jjmatchedKind != 0x7fffffff) {                                                                  
if (jjmatchedPos + 1 &lt; curPos)                                                                    | if (jjmatchedPos + 1 &lt; curPos) {                                                                 
input_stream.backup(curPos - jjmatchedPos - 1);                                                        input_stream.backup(curPos - jjmatchedPos - 1);                                                     
                                                                                                     | }                                                                                                   
if ((jjtoToken[jjmatchedKind &gt;&gt; 6] & (1L &lt;&lt; (jjmatchedKind & 077))) != 0L) {               if ((jjtoToken[jjmatchedKind &gt;&gt; 6] & (1L &lt;&lt; (jjmatchedKind & 077))) != 0L) {            
matchedToken = jjFillToken();                                                                          matchedToken = jjFillToken();                                                                       
TokenLexicalActions(matchedToken);                                                                     TokenLexicalActions(matchedToken);                                                                  
if (jjnewLexState[jjmatchedKind] != -1)                                                              | if (jjnewLexState[jjmatchedKind] != -1) {                                                           
curLexState = jjnewLexState[jjmatchedKind];                                                            curLexState = jjnewLexState[jjmatchedKind];                                                         
                                                                                                     | }                                                                                                   
return matchedToken;                                                                                   return matchedToken;                                                                                
} else {                                                                                               } else {                                                                                            
if (jjnewLexState[jjmatchedKind] != -1)                                                              | if (jjnewLexState[jjmatchedKind] != -1) {                                                           
curLexState = jjnewLexState[jjmatchedKind];                                                            curLexState = jjnewLexState[jjmatchedKind];                                                         
                                                                                                     | }                                                                                                   
continue EOFLoop;                                                                                      continue EOFLoop;                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
int error_line = input_stream.getEndLine();                                                            int error_line = input_stream.getEndLine();                                                         
int error_column = input_stream.getEndColumn();                                                        int error_column = input_stream.getEndColumn();                                                     
String error_after = null;                                                                             String error_after = null;                                                                          
boolean EOFSeen = false;                                                                               boolean EOFSeen = false;                                                                            
try {                                                                                                  try {                                                                                               
input_stream.readChar();                                                                               input_stream.readChar();                                                                            
input_stream.backup(1);                                                                                input_stream.backup(1);                                                                             
} catch (java.io.IOException e1) {                                                                     } catch (java.io.IOException e1) {                                                                  
EOFSeen = true;                                                                                        EOFSeen = true;                                                                                     
error_after = curPos &lt;= 1 ? "" : input_stream.GetImage();                                           error_after = curPos &lt;= 1 ? "" : input_stream.GetImage();                                        
if (curChar == '\n' || curChar == '\r') {                                                              if (curChar == '\n' || curChar == '\r') {                                                           
error_line++;                                                                                          error_line++;                                                                                       
error_column = 0;                                                                                      error_column = 0;                                                                                   
} else                                                                                               | } else {                                                                                            
error_column++;                                                                                        error_column++;                                                                                     
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
if (!EOFSeen) {                                                                                        if (!EOFSeen) {                                                                                     
input_stream.backup(1);                                                                                input_stream.backup(1);                                                                             
error_after = curPos &lt;= 1 ? "" : input_stream.GetImage();                                           error_after = curPos &lt;= 1 ? "" : input_stream.GetImage();                                        
}                                                                                                      }                                                                                                   
throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenM   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenM
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
