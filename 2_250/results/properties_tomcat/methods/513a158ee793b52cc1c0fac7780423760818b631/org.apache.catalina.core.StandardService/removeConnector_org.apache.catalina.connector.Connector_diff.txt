/**                                                                                                    /**                                                                                                 
* Remove the specified Connector from the set associated from this                                     * Remove the specified Connector from the set associated from this                                  
* Service.  The removed Connector will also be disassociated from our                                  * Service.  The removed Connector will also be disassociated from our                               
* Container.                                                                                           * Container.                                                                                        
*                                                                                                      *                                                                                                   
* @param connector The Connector to be removed                                                         * @param connector The Connector to be removed                                                      
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public void removeConnector(Connector connector) {                                                     public void removeConnector(Connector connector) {                                                  
synchronized (connectorsLock) {                                                                        synchronized (connectorsLock) {                                                                     
int j = -1;                                                                                            int j = -1;                                                                                         
for (int i = 0; i &lt; connectors.length; i++) {                                                       for (int i = 0; i &lt; connectors.length; i++) {                                                    
if (connector == connectors[i]) {                                                                      if (connector == connectors[i]) {                                                                   
j = i;                                                                                                 j = i;                                                                                              
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (j &lt; 0)                                                                                        | if (j &lt; 0) {                                                                                     
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
if (connectors[j].getState().isAvailable()) {                                                          if (connectors[j].getState().isAvailable()) {                                                       
try {                                                                                                  try {                                                                                               
connectors[j].stop();                                                                                  connectors[j].stop();                                                                               
} catch (LifecycleException e) {                                                                       } catch (LifecycleException e) {                                                                    
log.error(sm.getString("standardService.connector.stopFailed", connectors[j]), e);                     log.error(sm.getString("standardService.connector.stopFailed", connectors[j]), e);                  
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
connector.setService(null);                                                                            connector.setService(null);                                                                         
int k = 0;                                                                                             int k = 0;                                                                                          
Connector[] results = new Connector[connectors.length - 1];                                            Connector[] results = new Connector[connectors.length - 1];                                         
for (int i = 0; i &lt; connectors.length; i++) {                                                       for (int i = 0; i &lt; connectors.length; i++) {                                                    
if (i != j)                                                                                          | if (i != j) {                                                                                       
results[k++] = connectors[i];                                                                          results[k++] = connectors[i];                                                                       
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
connectors = results;                                                                                  connectors = results;                                                                               
// Report this property change to interested listeners                                                 // Report this property change to interested listeners                                              
support.firePropertyChange("connector", connector, null);                                              support.firePropertyChange("connector", connector, null);                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
