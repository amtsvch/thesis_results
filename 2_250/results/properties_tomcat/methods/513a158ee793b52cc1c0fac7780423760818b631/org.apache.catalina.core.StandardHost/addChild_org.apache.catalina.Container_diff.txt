/**                                                                                                    /**                                                                                                 
* Add a child Container, only if the proposed child is an implementation                               * Add a child Container, only if the proposed child is an implementation                            
* of Context.                                                                                          * of Context.                                                                                       
*                                                                                                      *                                                                                                   
* @param child Child container to be added                                                             * @param child Child container to be added                                                          
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public void addChild(Container child) {                                                                public void addChild(Container child) {                                                             
if (!(child instanceof Context))                                                                     | if (!(child instanceof Context)) {                                                                  
throw new IllegalArgumentException(sm.getString("standardHost.notContext"));                           throw new IllegalArgumentException(sm.getString("standardHost.notContext"));                        
                                                                                                     | }                                                                                                   
child.addLifecycleListener(new MemoryLeakTrackingListener());                                          child.addLifecycleListener(new MemoryLeakTrackingListener());                                       
// Avoid NPE for case where Context is defined in server.xml with only a                               // Avoid NPE for case where Context is defined in server.xml with only a                            
// docBase                                                                                             // docBase                                                                                          
Context context = (Context) child;                                                                     Context context = (Context) child;                                                                  
if (context.getPath() == null) {                                                                       if (context.getPath() == null) {                                                                    
ContextName cn = new ContextName(context.getDocBase(), true);                                          ContextName cn = new ContextName(context.getDocBase(), true);                                       
context.setPath(cn.getPath());                                                                         context.setPath(cn.getPath());                                                                      
}                                                                                                      }                                                                                                   
super.addChild(child);                                                                                 super.addChild(child);                                                                              
}                                                                                                      }                                                                                                   
