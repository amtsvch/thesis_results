/**                                                                                                    /**                                                                                                 
* Set the Realm with which this Container is associated.                                               * Set the Realm with which this Container is associated.                                            
*                                                                                                      *                                                                                                   
* @param realm The newly associated Realm                                                              * @param realm The newly associated Realm                                                           
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public void setRealm(Realm realm) {                                                                    public void setRealm(Realm realm) {                                                                 
Lock l = realmLock.writeLock();                                                                        Lock l = realmLock.writeLock();                                                                     
l.lock();                                                                                              l.lock();                                                                                           
try {                                                                                                  try {                                                                                               
// Change components if necessary                                                                      // Change components if necessary                                                                   
Realm oldRealm = this.realm;                                                                           Realm oldRealm = this.realm;                                                                        
if (oldRealm == realm)                                                                               | if (oldRealm == realm) {                                                                            
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
this.realm = realm;                                                                                    this.realm = realm;                                                                                 
// Stop the old component if necessary                                                                 // Stop the old component if necessary                                                              
if (getState().isAvailable() && (oldRealm != null) && (oldRealm instanceof Lifecycle)) {               if (getState().isAvailable() && (oldRealm != null) && (oldRealm instanceof Lifecycle)) {            
try {                                                                                                  try {                                                                                               
((Lifecycle) oldRealm).stop();                                                                         ((Lifecycle) oldRealm).stop();                                                                      
} catch (LifecycleException e) {                                                                       } catch (LifecycleException e) {                                                                    
log.error(sm.getString("containerBase.realm.stop"), e);                                                log.error(sm.getString("containerBase.realm.stop"), e);                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// Start the new component if necessary                                                                // Start the new component if necessary                                                             
if (realm != null)                                                                                   | if (realm != null) {                                                                                
realm.setContainer(this);                                                                              realm.setContainer(this);                                                                           
                                                                                                     | }                                                                                                   
if (getState().isAvailable() && (realm != null) && (realm instanceof Lifecycle)) {                     if (getState().isAvailable() && (realm != null) && (realm instanceof Lifecycle)) {                  
try {                                                                                                  try {                                                                                               
((Lifecycle) realm).start();                                                                           ((Lifecycle) realm).start();                                                                        
} catch (LifecycleException e) {                                                                       } catch (LifecycleException e) {                                                                    
log.error(sm.getString("containerBase.realm.start"), e);                                               log.error(sm.getString("containerBase.realm.start"), e);                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// Report this property change to interested listeners                                                 // Report this property change to interested listeners                                              
support.firePropertyChange("realm", oldRealm, this.realm);                                             support.firePropertyChange("realm", oldRealm, this.realm);                                          
} finally {                                                                                            } finally {                                                                                         
l.unlock();                                                                                            l.unlock();                                                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
