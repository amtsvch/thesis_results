/**                                                                                                    /**                                                                                                 
* Remove the specified Valve from the pipeline associated with this                                    * Remove the specified Valve from the pipeline associated with this                                 
* Container, if it is found; otherwise, do nothing.  If the Valve is                                   * Container, if it is found; otherwise, do nothing.  If the Valve is                                
* found and removed, the Valve's &lt;code&gt;setContainer(null)&lt;/code&gt; method                    * found and removed, the Valve's &lt;code&gt;setContainer(null)&lt;/code&gt; method                 
* will be called if it implements &lt;code&gt;Contained&lt;/code&gt;.                                  * will be called if it implements &lt;code&gt;Contained&lt;/code&gt;.                               
*                                                                                                      *                                                                                                   
* @param valve Valve to be removed                                                                     * @param valve Valve to be removed                                                                  
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public void removeValve(Valve valve) {                                                                 public void removeValve(Valve valve) {                                                              
Valve current;                                                                                         Valve current;                                                                                      
if (first == valve) {                                                                                  if (first == valve) {                                                                               
first = first.getNext();                                                                               first = first.getNext();                                                                            
current = null;                                                                                        current = null;                                                                                     
} else {                                                                                               } else {                                                                                            
current = first;                                                                                       current = first;                                                                                    
}                                                                                                      }                                                                                                   
while (current != null) {                                                                              while (current != null) {                                                                           
if (current.getNext() == valve) {                                                                      if (current.getNext() == valve) {                                                                   
current.setNext(valve.getNext());                                                                      current.setNext(valve.getNext());                                                                   
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
current = current.getNext();                                                                           current = current.getNext();                                                                        
}                                                                                                      }                                                                                                   
if (first == basic)                                                                                  | if (first == basic) {                                                                               
first = null;                                                                                          first = null;                                                                                       
if (valve instanceof Contained)                                                                      | }                                                                                                   
                                                                                                     | if (valve instanceof Contained) {                                                                   
((Contained) valve).setContainer(null);                                                                ((Contained) valve).setContainer(null);                                                             
                                                                                                     | }                                                                                                   
if (valve instanceof Lifecycle) {                                                                      if (valve instanceof Lifecycle) {                                                                   
// Stop this valve if necessary                                                                        // Stop this valve if necessary                                                                     
if (getState().isAvailable()) {                                                                        if (getState().isAvailable()) {                                                                     
try {                                                                                                  try {                                                                                               
((Lifecycle) valve).stop();                                                                            ((Lifecycle) valve).stop();                                                                         
} catch (LifecycleException e) {                                                                       } catch (LifecycleException e) {                                                                    
log.error(sm.getString("standardPipeline.valve.stop"), e);                                             log.error(sm.getString("standardPipeline.valve.stop"), e);                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
((Lifecycle) valve).destroy();                                                                         ((Lifecycle) valve).destroy();                                                                      
} catch (LifecycleException e) {                                                                       } catch (LifecycleException e) {                                                                    
log.error(sm.getString("standardPipeline.valve.destroy"), e);                                          log.error(sm.getString("standardPipeline.valve.destroy"), e);                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
container.fireContainerEvent(Container.REMOVE_VALVE_EVENT, valve);                                     container.fireContainerEvent(Container.REMOVE_VALVE_EVENT, valve);                                  
}                                                                                                      }                                                                                                   
