/**                                                                                                    /**                                                                                                 
* Back up idle sessions.                                                                               * Back up idle sessions.                                                                            
*/                                                                                                     */                                                                                                  
protected void processMaxIdleBackups() {                                                               protected void processMaxIdleBackups() {                                                            
if (!getState().isAvailable() || maxIdleBackup &lt; 0)                                               | if (!getState().isAvailable() || maxIdleBackup &lt; 0) {                                            
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
Session[] sessions = findSessions();                                                                   Session[] sessions = findSessions();                                                                
// Back up all sessions idle longer than maxIdleBackup                                                 // Back up all sessions idle longer than maxIdleBackup                                              
if (maxIdleBackup &gt;= 0) {                                                                           if (maxIdleBackup &gt;= 0) {                                                                        
for (Session value : sessions) {                                                                       for (Session value : sessions) {                                                                    
StandardSession session = (StandardSession) value;                                                     StandardSession session = (StandardSession) value;                                                  
synchronized (session) {                                                                               synchronized (session) {                                                                            
if (!session.isValid())                                                                              | if (!session.isValid()) {                                                                           
continue;                                                                                              continue;                                                                                           
                                                                                                     | }                                                                                                   
long lastAccessedTime = session.getLastAccessedTimeInternal();                                         long lastAccessedTime = session.getLastAccessedTimeInternal();                                      
Long persistedLastAccessedTime = (Long) session.getNote(PERSISTED_LAST_ACCESSED_TIME);                 Long persistedLastAccessedTime = (Long) session.getNote(PERSISTED_LAST_ACCESSED_TIME);              
if (persistedLastAccessedTime != null && lastAccessedTime == persistedLastAccessedTime.longValue())  | if (persistedLastAccessedTime != null && lastAccessedTime == persistedLastAccessedTime.longValue()) 
continue;                                                                                              continue;                                                                                           
                                                                                                     | }                                                                                                   
int timeIdle = (int) (session.getIdleTimeInternal() / 1000L);                                          int timeIdle = (int) (session.getIdleTimeInternal() / 1000L);                                       
if (timeIdle &gt;= maxIdleBackup) {                                                                    if (timeIdle &gt;= maxIdleBackup) {                                                                 
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug(sm.getString("persistentManager.backupMaxIdle", session.getIdInternal(), Integer.valueOf(t   log.debug(sm.getString("persistentManager.backupMaxIdle", session.getIdInternal(), Integer.valueOf(t
                                                                                                     | }                                                                                                   
try {                                                                                                  try {                                                                                               
writeSession(session);                                                                                 writeSession(session);                                                                              
} catch (IOException e) {                                                                              } catch (IOException e) {                                                                           
// This is logged in writeSession()                                                                    // This is logged in writeSession()                                                                 
}                                                                                                      }                                                                                                   
session.setNote(PERSISTED_LAST_ACCESSED_TIME, Long.valueOf(lastAccessedTime));                         session.setNote(PERSISTED_LAST_ACCESSED_TIME, Long.valueOf(lastAccessedTime));                      
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
