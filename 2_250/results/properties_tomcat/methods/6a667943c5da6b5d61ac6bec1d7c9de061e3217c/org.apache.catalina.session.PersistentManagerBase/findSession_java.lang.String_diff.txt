/**                                                                                                    /**                                                                                                 
* {@inheritDoc}                                                                                        * {@inheritDoc}                                                                                     
* &lt;p&gt;                                                                                            * &lt;p&gt;                                                                                         
* This method checks the persistence store if persistence is enabled,                                  * This method checks the persistence store if persistence is enabled,                               
* otherwise just uses the functionality from ManagerBase.                                              * otherwise just uses the functionality from ManagerBase.                                           
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public Session findSession(String id) throws IOException {                                             public Session findSession(String id) throws IOException {                                          
Session session = super.findSession(id);                                                               Session session = super.findSession(id);                                                            
// OK, at this point, we're not sure if another thread is trying to                                    // OK, at this point, we're not sure if another thread is trying to                                 
// remove the session or not so the only way around this is to lock it                                 // remove the session or not so the only way around this is to lock it                              
// (or attempt to) and then try to get it by this session id again. If                                 // (or attempt to) and then try to get it by this session id again. If                              
// the other code ran swapOut, then we should get a null back during                                   // the other code ran swapOut, then we should get a null back during                                
// this run, and if not, we lock it out so we can access the session                                   // this run, and if not, we lock it out so we can access the session                                
// safely.                                                                                             // safely.                                                                                          
if (session != null) {                                                                                 if (session != null) {                                                                              
synchronized (session) {                                                                               synchronized (session) {                                                                            
session = super.findSession(session.getIdInternal());                                                  session = super.findSession(session.getIdInternal());                                               
if (session != null) {                                                                                 if (session != null) {                                                                              
// To keep any external calling code from messing up the                                               // To keep any external calling code from messing up the                                            
// concurrency.                                                                                        // concurrency.                                                                                     
session.access();                                                                                      session.access();                                                                                   
session.endAccess();                                                                                   session.endAccess();                                                                                
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (session != null)                                                                                 | if (session != null) {                                                                              
return session;                                                                                        return session;                                                                                     
                                                                                                     | }                                                                                                   
// See if the Session is in the Store                                                                  // See if the Session is in the Store                                                               
session = swapIn(id);                                                                                  session = swapIn(id);                                                                               
return session;                                                                                        return session;                                                                                     
}                                                                                                      }                                                                                                   
