/**                                                                                                    /**                                                                                                 
* Find the specified class in our local repositories, if possible.  If                                 * Find the specified class in our local repositories, if possible.  If                              
* not found, throw &lt;code&gt;ClassNotFoundException&lt;/code&gt;.                                    * not found, throw &lt;code&gt;ClassNotFoundException&lt;/code&gt;.                                 
*                                                                                                      *                                                                                                   
* @param name The binary name of the class to be loaded                                                * @param name The binary name of the class to be loaded                                             
*                                                                                                      *                                                                                                   
* @exception ClassNotFoundException if the class was not found                                         * @exception ClassNotFoundException if the class was not found                                      
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public Class&lt;?&gt; findClass(String name) throws ClassNotFoundException {                           public Class&lt;?&gt; findClass(String name) throws ClassNotFoundException {                        
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("    findClass(" + name + ")");                                                              log.debug("    findClass(" + name + ")");                                                           
                                                                                                     | }                                                                                                   
checkStateForClassLoading(name);                                                                       checkStateForClassLoading(name);                                                                    
// (1) Permission to define this class when using a SecurityManager                                    // (1) Permission to define this class when using a SecurityManager                                 
if (securityManager != null) {                                                                         if (securityManager != null) {                                                                      
int i = name.lastIndexOf('.');                                                                         int i = name.lastIndexOf('.');                                                                      
if (i &gt;= 0) {                                                                                       if (i &gt;= 0) {                                                                                    
try {                                                                                                  try {                                                                                               
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("      securityManager.checkPackageDefinition");                                             log.trace("      securityManager.checkPackageDefinition");                                          
                                                                                                     | }                                                                                                   
securityManager.checkPackageDefinition(name.substring(0, i));                                          securityManager.checkPackageDefinition(name.substring(0, i));                                       
} catch (Exception se) {                                                                               } catch (Exception se) {                                                                            
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("      --&gt;Exception--&gt;ClassNotFoundException", se);                                    log.trace("      --&gt;Exception--&gt;ClassNotFoundException", se);                                 
                                                                                                     | }                                                                                                   
throw new ClassNotFoundException(name, se);                                                            throw new ClassNotFoundException(name, se);                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// Ask our superclass to locate this class, if possible                                                // Ask our superclass to locate this class, if possible                                             
// (throws ClassNotFoundException if it is not found)                                                  // (throws ClassNotFoundException if it is not found)                                               
Class&lt;?&gt; clazz = null;                                                                           Class&lt;?&gt; clazz = null;                                                                        
try {                                                                                                  try {                                                                                               
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("      findClassInternal(" + name + ")");                                                    log.trace("      findClassInternal(" + name + ")");                                                 
                                                                                                     | }                                                                                                   
try {                                                                                                  try {                                                                                               
if (securityManager != null) {                                                                         if (securityManager != null) {                                                                      
PrivilegedAction&lt;Class&lt;?&gt;&gt; dp = new PrivilegedFindClassByName(name);                       PrivilegedAction&lt;Class&lt;?&gt;&gt; dp = new PrivilegedFindClassByName(name);                    
clazz = AccessController.doPrivileged(dp);                                                             clazz = AccessController.doPrivileged(dp);                                                          
} else {                                                                                               } else {                                                                                            
clazz = findClassInternal(name);                                                                       clazz = findClassInternal(name);                                                                    
}                                                                                                      }                                                                                                   
} catch (AccessControlException ace) {                                                                 } catch (AccessControlException ace) {                                                              
log.warn(sm.getString("webappClassLoader.securityException", name, ace.getMessage()), ace);            log.warn(sm.getString("webappClassLoader.securityException", name, ace.getMessage()), ace);         
throw new ClassNotFoundException(name, ace);                                                           throw new ClassNotFoundException(name, ace);                                                        
} catch (RuntimeException e) {                                                                         } catch (RuntimeException e) {                                                                      
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("      --&gt;RuntimeException Rethrown", e);                                                 log.trace("      --&gt;RuntimeException Rethrown", e);                                              
                                                                                                     | }                                                                                                   
throw e;                                                                                               throw e;                                                                                            
}                                                                                                      }                                                                                                   
if ((clazz == null) && hasExternalRepositories) {                                                      if ((clazz == null) && hasExternalRepositories) {                                                   
try {                                                                                                  try {                                                                                               
clazz = super.findClass(name);                                                                         clazz = super.findClass(name);                                                                      
} catch (AccessControlException ace) {                                                                 } catch (AccessControlException ace) {                                                              
log.warn(sm.getString("webappClassLoader.securityException", name, ace.getMessage()), ace);            log.warn(sm.getString("webappClassLoader.securityException", name, ace.getMessage()), ace);         
throw new ClassNotFoundException(name, ace);                                                           throw new ClassNotFoundException(name, ace);                                                        
} catch (RuntimeException e) {                                                                         } catch (RuntimeException e) {                                                                      
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("      --&gt;RuntimeException Rethrown", e);                                                 log.trace("      --&gt;RuntimeException Rethrown", e);                                              
                                                                                                     | }                                                                                                   
throw e;                                                                                               throw e;                                                                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (clazz == null) {                                                                                   if (clazz == null) {                                                                                
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("    --&gt; Returning ClassNotFoundException");                                              log.debug("    --&gt; Returning ClassNotFoundException");                                           
                                                                                                     | }                                                                                                   
throw new ClassNotFoundException(name);                                                                throw new ClassNotFoundException(name);                                                             
}                                                                                                      }                                                                                                   
} catch (ClassNotFoundException e) {                                                                   } catch (ClassNotFoundException e) {                                                                
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("    --&gt; Passing on ClassNotFoundException");                                             log.trace("    --&gt; Passing on ClassNotFoundException");                                          
                                                                                                     | }                                                                                                   
throw e;                                                                                               throw e;                                                                                            
}                                                                                                      }                                                                                                   
// Return the class we have located                                                                    // Return the class we have located                                                                 
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.debug("      Returning class " + clazz);                                                           log.debug("      Returning class " + clazz);                                                        
                                                                                                     | }                                                                                                   
if (log.isTraceEnabled()) {                                                                            if (log.isTraceEnabled()) {                                                                         
ClassLoader cl;                                                                                        ClassLoader cl;                                                                                     
if (Globals.IS_SECURITY_ENABLED) {                                                                     if (Globals.IS_SECURITY_ENABLED) {                                                                  
cl = AccessController.doPrivileged(new PrivilegedGetClassLoader(clazz));                               cl = AccessController.doPrivileged(new PrivilegedGetClassLoader(clazz));                            
} else {                                                                                               } else {                                                                                            
cl = clazz.getClassLoader();                                                                           cl = clazz.getClassLoader();                                                                        
}                                                                                                      }                                                                                                   
log.debug("      Loaded by " + cl.toString());                                                         log.debug("      Loaded by " + cl.toString());                                                      
}                                                                                                      }                                                                                                   
return clazz;                                                                                          return clazz;                                                                                       
}                                                                                                      }                                                                                                   
