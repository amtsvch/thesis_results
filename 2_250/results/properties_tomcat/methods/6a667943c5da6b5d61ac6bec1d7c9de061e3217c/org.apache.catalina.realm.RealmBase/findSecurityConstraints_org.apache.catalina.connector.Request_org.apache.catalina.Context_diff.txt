/**                                                                                                    /**                                                                                                 
* Return the SecurityConstraints configured to guard the request URI for                               * Return the SecurityConstraints configured to guard the request URI for                            
* this request, or &lt;code&gt;null&lt;/code&gt; if there is no such constraint.                       * this request, or &lt;code&gt;null&lt;/code&gt; if there is no such constraint.                    
*                                                                                                      *                                                                                                   
* @param request Request we are processing                                                             * @param request Request we are processing                                                          
* @param context Context the Request is mapped to                                                      * @param context Context the Request is mapped to                                                   
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public SecurityConstraint[] findSecurityConstraints(Request request, Context context) {                public SecurityConstraint[] findSecurityConstraints(Request request, Context context) {             
ArrayList&lt;SecurityConstraint&gt; results = null;                                                    ArrayList&lt;SecurityConstraint&gt; results = null;                                                 
// Are there any defined security constraints?                                                         // Are there any defined security constraints?                                                      
SecurityConstraint[] constraints = context.findConstraints();                                          SecurityConstraint[] constraints = context.findConstraints();                                       
if ((constraints == null) || (constraints.length == 0)) {                                              if ((constraints == null) || (constraints.length == 0)) {                                           
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("  No applicable constraints defined");                                                      log.debug("  No applicable constraints defined");                                                   
                                                                                                     | }                                                                                                   
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
// Check each defined security constraint                                                              // Check each defined security constraint                                                           
String uri = request.getRequestPathMB().toString();                                                    String uri = request.getRequestPathMB().toString();                                                 
// Bug47080 - in rare cases this may be null or ""                                                     // Bug47080 - in rare cases this may be null or ""                                                  
// Mapper treats as '/' do the same to prevent NPE                                                     // Mapper treats as '/' do the same to prevent NPE                                                  
if (uri == null || uri.length() == 0) {                                                                if (uri == null || uri.length() == 0) {                                                             
uri = "/";                                                                                             uri = "/";                                                                                          
}                                                                                                      }                                                                                                   
String method = request.getMethod();                                                                   String method = request.getMethod();                                                                
int i;                                                                                                 int i;                                                                                              
boolean found = false;                                                                                 boolean found = false;                                                                              
for (i = 0; i &lt; constraints.length; i++) {                                                          for (i = 0; i &lt; constraints.length; i++) {                                                       
SecurityCollection[] collections = constraints[i].findCollections();                                   SecurityCollection[] collections = constraints[i].findCollections();                                
// If collection is null, continue to avoid an NPE                                                     // If collection is null, continue to avoid an NPE                                                  
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (collections == null) {                                                                             if (collections == null) {                                                                          
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
if (log.isDebugEnabled()) {                                                                            if (log.isDebugEnabled()) {                                                                         
log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt;    log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt; 
}                                                                                                      }                                                                                                   
for (SecurityCollection securityCollection : collections) {                                            for (SecurityCollection securityCollection : collections) {                                         
String[] patterns = securityCollection.findPatterns();                                                 String[] patterns = securityCollection.findPatterns();                                              
// If patterns is null, continue to avoid an NPE                                                       // If patterns is null, continue to avoid an NPE                                                    
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (patterns == null) {                                                                                if (patterns == null) {                                                                             
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
for (String pattern : patterns) {                                                                      for (String pattern : patterns) {                                                                   
// Exact match including special case for the context root.                                            // Exact match including special case for the context root.                                         
if (uri.equals(pattern) || pattern.length() == 0 && uri.equals("/")) {                                 if (uri.equals(pattern) || pattern.length() == 0 && uri.equals("/")) {                              
found = true;                                                                                          found = true;                                                                                       
if (securityCollection.findMethod(method)) {                                                           if (securityCollection.findMethod(method)) {                                                        
if (results == null) {                                                                                 if (results == null) {                                                                              
results = new ArrayList&lt;&gt;();                                                                     results = new ArrayList&lt;&gt;();                                                                  
}                                                                                                      }                                                                                                   
results.add(constraints[i]);                                                                           results.add(constraints[i]);                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (found) {                                                                                           if (found) {                                                                                        
return resultsToArray(results);                                                                        return resultsToArray(results);                                                                     
}                                                                                                      }                                                                                                   
int longest = -1;                                                                                      int longest = -1;                                                                                   
for (i = 0; i &lt; constraints.length; i++) {                                                          for (i = 0; i &lt; constraints.length; i++) {                                                       
SecurityCollection[] collection = constraints[i].findCollections();                                    SecurityCollection[] collection = constraints[i].findCollections();                                 
// If collection is null, continue to avoid an NPE                                                     // If collection is null, continue to avoid an NPE                                                  
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (collection == null) {                                                                              if (collection == null) {                                                                           
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
if (log.isDebugEnabled()) {                                                                            if (log.isDebugEnabled()) {                                                                         
log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt;    log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt; 
}                                                                                                      }                                                                                                   
for (SecurityCollection securityCollection : collection) {                                             for (SecurityCollection securityCollection : collection) {                                          
String[] patterns = securityCollection.findPatterns();                                                 String[] patterns = securityCollection.findPatterns();                                              
// If patterns is null, continue to avoid an NPE                                                       // If patterns is null, continue to avoid an NPE                                                    
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (patterns == null) {                                                                                if (patterns == null) {                                                                             
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
boolean matched = false;                                                                               boolean matched = false;                                                                            
int length = -1;                                                                                       int length = -1;                                                                                    
for (String pattern : patterns) {                                                                      for (String pattern : patterns) {                                                                   
if (pattern.startsWith("/") && pattern.endsWith("/*") && pattern.length() &gt;= longest) {             if (pattern.startsWith("/") && pattern.endsWith("/*") && pattern.length() &gt;= longest) {          
if (pattern.length() == 2) {                                                                           if (pattern.length() == 2) {                                                                        
matched = true;                                                                                        matched = true;                                                                                     
length = pattern.length();                                                                             length = pattern.length();                                                                          
} else if (pattern.regionMatches(0, uri, 0, pattern.length() - 1) || (pattern.length() - 2 == uri.le   } else if (pattern.regionMatches(0, uri, 0, pattern.length() - 1) || (pattern.length() - 2 == uri.le
matched = true;                                                                                        matched = true;                                                                                     
length = pattern.length();                                                                             length = pattern.length();                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (matched) {                                                                                         if (matched) {                                                                                      
if (length &gt; longest) {                                                                             if (length &gt; longest) {                                                                          
found = false;                                                                                         found = false;                                                                                      
if (results != null) {                                                                                 if (results != null) {                                                                              
results.clear();                                                                                       results.clear();                                                                                    
}                                                                                                      }                                                                                                   
longest = length;                                                                                      longest = length;                                                                                   
}                                                                                                      }                                                                                                   
if (securityCollection.findMethod(method)) {                                                           if (securityCollection.findMethod(method)) {                                                        
found = true;                                                                                          found = true;                                                                                       
if (results == null) {                                                                                 if (results == null) {                                                                              
results = new ArrayList&lt;&gt;();                                                                     results = new ArrayList&lt;&gt;();                                                                  
}                                                                                                      }                                                                                                   
results.add(constraints[i]);                                                                           results.add(constraints[i]);                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (found) {                                                                                           if (found) {                                                                                        
return resultsToArray(results);                                                                        return resultsToArray(results);                                                                     
}                                                                                                      }                                                                                                   
for (i = 0; i &lt; constraints.length; i++) {                                                          for (i = 0; i &lt; constraints.length; i++) {                                                       
SecurityCollection[] collection = constraints[i].findCollections();                                    SecurityCollection[] collection = constraints[i].findCollections();                                 
// If collection is null, continue to avoid an NPE                                                     // If collection is null, continue to avoid an NPE                                                  
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (collection == null) {                                                                              if (collection == null) {                                                                           
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
if (log.isDebugEnabled()) {                                                                            if (log.isDebugEnabled()) {                                                                         
log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt;    log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt; 
}                                                                                                      }                                                                                                   
boolean matched = false;                                                                               boolean matched = false;                                                                            
int pos = -1;                                                                                          int pos = -1;                                                                                       
for (int j = 0; j &lt; collection.length; j++) {                                                       for (int j = 0; j &lt; collection.length; j++) {                                                    
String[] patterns = collection[j].findPatterns();                                                      String[] patterns = collection[j].findPatterns();                                                   
// If patterns is null, continue to avoid an NPE                                                       // If patterns is null, continue to avoid an NPE                                                    
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (patterns == null) {                                                                                if (patterns == null) {                                                                             
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
for (int k = 0; k &lt; patterns.length && !matched; k++) {                                             for (int k = 0; k &lt; patterns.length && !matched; k++) {                                          
String pattern = patterns[k];                                                                          String pattern = patterns[k];                                                                       
if (pattern.startsWith("*.")) {                                                                        if (pattern.startsWith("*.")) {                                                                     
int slash = uri.lastIndexOf('/');                                                                      int slash = uri.lastIndexOf('/');                                                                   
int dot = uri.lastIndexOf('.');                                                                        int dot = uri.lastIndexOf('.');                                                                     
if (slash &gt;= 0 && dot &gt; slash && dot != uri.length() - 1 && uri.length() - dot == pattern.leng   if (slash &gt;= 0 && dot &gt; slash && dot != uri.length() - 1 && uri.length() - dot == pattern.leng
if (pattern.regionMatches(1, uri, dot, uri.length() - dot)) {                                          if (pattern.regionMatches(1, uri, dot, uri.length() - dot)) {                                       
matched = true;                                                                                        matched = true;                                                                                     
pos = j;                                                                                               pos = j;                                                                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (matched) {                                                                                         if (matched) {                                                                                      
found = true;                                                                                          found = true;                                                                                       
if (collection[pos].findMethod(method)) {                                                              if (collection[pos].findMethod(method)) {                                                           
if (results == null) {                                                                                 if (results == null) {                                                                              
results = new ArrayList&lt;&gt;();                                                                     results = new ArrayList&lt;&gt;();                                                                  
}                                                                                                      }                                                                                                   
results.add(constraints[i]);                                                                           results.add(constraints[i]);                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (found) {                                                                                           if (found) {                                                                                        
return resultsToArray(results);                                                                        return resultsToArray(results);                                                                     
}                                                                                                      }                                                                                                   
for (i = 0; i &lt; constraints.length; i++) {                                                          for (i = 0; i &lt; constraints.length; i++) {                                                       
SecurityCollection[] collection = constraints[i].findCollections();                                    SecurityCollection[] collection = constraints[i].findCollections();                                 
// If collection is null, continue to avoid an NPE                                                     // If collection is null, continue to avoid an NPE                                                  
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (collection == null) {                                                                              if (collection == null) {                                                                           
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
if (log.isDebugEnabled()) {                                                                            if (log.isDebugEnabled()) {                                                                         
log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt;    log.debug("  Checking constraint '" + constraints[i] + "' against " + method + " " + uri + " --&gt; 
}                                                                                                      }                                                                                                   
for (SecurityCollection securityCollection : collection) {                                             for (SecurityCollection securityCollection : collection) {                                          
String[] patterns = securityCollection.findPatterns();                                                 String[] patterns = securityCollection.findPatterns();                                              
// If patterns is null, continue to avoid an NPE                                                       // If patterns is null, continue to avoid an NPE                                                    
// See Bugzilla 30624                                                                                  // See Bugzilla 30624                                                                               
if (patterns == null) {                                                                                if (patterns == null) {                                                                             
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
boolean matched = false;                                                                               boolean matched = false;                                                                            
for (String pattern : patterns) {                                                                      for (String pattern : patterns) {                                                                   
if (pattern.equals("/")) {                                                                             if (pattern.equals("/")) {                                                                          
matched = true;                                                                                        matched = true;                                                                                     
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (matched) {                                                                                         if (matched) {                                                                                      
if (results == null) {                                                                                 if (results == null) {                                                                              
results = new ArrayList&lt;&gt;();                                                                     results = new ArrayList&lt;&gt;();                                                                  
}                                                                                                      }                                                                                                   
results.add(constraints[i]);                                                                           results.add(constraints[i]);                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (results == null) {                                                                                 if (results == null) {                                                                              
// No applicable security constraint was found                                                         // No applicable security constraint was found                                                      
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("  No applicable constraint located");                                                       log.debug("  No applicable constraint located");                                                    
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
return resultsToArray(results);                                                                        return resultsToArray(results);                                                                     
}                                                                                                      }                                                                                                   
