/**                                                                                                    /**                                                                                                 
* Starts up the channel. This can be called multiple times for individual services to start            * Starts up the channel. This can be called multiple times for individual services to start         
* The svc parameter can be the logical or value of any constants                                       * The svc parameter can be the logical or value of any constants                                    
* @param svc int value of &lt;BR&gt;                                                                   * @param svc int value of &lt;BR&gt;                                                                
* DEFAULT - will start all services &lt;BR&gt;                                                         * DEFAULT - will start all services &lt;BR&gt;                                                      
* MBR_RX_SEQ - starts the membership receiver &lt;BR&gt;                                               * MBR_RX_SEQ - starts the membership receiver &lt;BR&gt;                                            
* MBR_TX_SEQ - starts the membership broadcaster &lt;BR&gt;                                            * MBR_TX_SEQ - starts the membership broadcaster &lt;BR&gt;                                         
* SND_TX_SEQ - starts the replication transmitter&lt;BR&gt;                                            * SND_TX_SEQ - starts the replication transmitter&lt;BR&gt;                                         
* SND_RX_SEQ - starts the replication receiver&lt;BR&gt;                                               * SND_RX_SEQ - starts the replication receiver&lt;BR&gt;                                            
* @throws ChannelException if a startup error occurs or the service is already started.                * @throws ChannelException if a startup error occurs or the service is already started.             
*/                                                                                                     */                                                                                                  
protected synchronized void internalStart(int svc) throws ChannelException {                           protected synchronized void internalStart(int svc) throws ChannelException {                        
try {                                                                                                  try {                                                                                               
boolean valid = false;                                                                                 boolean valid = false;                                                                              
// make sure we don't pass down any flags that are unrelated to the bottom layer                       // make sure we don't pass down any flags that are unrelated to the bottom layer                    
svc = svc & Channel.DEFAULT;                                                                           svc = svc & Channel.DEFAULT;                                                                        
                                                                                                     | if (startLevel == Channel.DEFAULT) {                                                                
// we have already started up all components                                                           // we have already started up all components                                                        
if (startLevel == Channel.DEFAULT)                                                                   |                                                                                                     
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
                                                                                                     | if (svc == 0) {                                                                                     
// nothing to start                                                                                    // nothing to start                                                                                 
if (svc == 0)                                                                                        |                                                                                                     
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
if (svc == (svc & startLevel)) {                                                                       if (svc == (svc & startLevel)) {                                                                    
throw new ChannelException(sm.getString("channelCoordinator.alreadyStarted", Integer.toString(svc)))   throw new ChannelException(sm.getString("channelCoordinator.alreadyStarted", Integer.toString(svc)))
}                                                                                                      }                                                                                                   
// must start the receiver first so that we can coordinate the port it                                 // must start the receiver first so that we can coordinate the port it                              
// listens to with the local membership settings                                                       // listens to with the local membership settings                                                    
if (Channel.SND_RX_SEQ == (svc & Channel.SND_RX_SEQ)) {                                                if (Channel.SND_RX_SEQ == (svc & Channel.SND_RX_SEQ)) {                                             
clusterReceiver.setMessageListener(this);                                                              clusterReceiver.setMessageListener(this);                                                           
clusterReceiver.setChannel(getChannel());                                                              clusterReceiver.setChannel(getChannel());                                                           
clusterReceiver.start();                                                                               clusterReceiver.start();                                                                            
// synchronize, big time FIXME                                                                         // synchronize, big time FIXME                                                                      
Member localMember = getChannel().getLocalMember(false);                                               Member localMember = getChannel().getLocalMember(false);                                            
if (localMember instanceof StaticMember) {                                                             if (localMember instanceof StaticMember) {                                                          
// static member                                                                                       // static member                                                                                    
StaticMember staticMember = (StaticMember) localMember;                                                StaticMember staticMember = (StaticMember) localMember;                                             
staticMember.setHost(getClusterReceiver().getHost());                                                  staticMember.setHost(getClusterReceiver().getHost());                                               
staticMember.setPort(getClusterReceiver().getPort());                                                  staticMember.setPort(getClusterReceiver().getPort());                                               
staticMember.setSecurePort(getClusterReceiver().getSecurePort());                                      staticMember.setSecurePort(getClusterReceiver().getSecurePort());                                   
} else {                                                                                               } else {                                                                                            
// multicast member                                                                                    // multicast member                                                                                 
membershipService.setLocalMemberProperties(getClusterReceiver().getHost(), getClusterReceiver().getP   membershipService.setLocalMemberProperties(getClusterReceiver().getHost(), getClusterReceiver().getP
}                                                                                                      }                                                                                                   
valid = true;                                                                                          valid = true;                                                                                       
}                                                                                                      }                                                                                                   
if (Channel.SND_TX_SEQ == (svc & Channel.SND_TX_SEQ)) {                                                if (Channel.SND_TX_SEQ == (svc & Channel.SND_TX_SEQ)) {                                             
clusterSender.setChannel(getChannel());                                                                clusterSender.setChannel(getChannel());                                                             
clusterSender.start();                                                                                 clusterSender.start();                                                                              
valid = true;                                                                                          valid = true;                                                                                       
}                                                                                                      }                                                                                                   
if (Channel.MBR_RX_SEQ == (svc & Channel.MBR_RX_SEQ)) {                                                if (Channel.MBR_RX_SEQ == (svc & Channel.MBR_RX_SEQ)) {                                             
membershipService.setMembershipListener(this);                                                         membershipService.setMembershipListener(this);                                                      
membershipService.setChannel(getChannel());                                                            membershipService.setChannel(getChannel());                                                         
if (membershipService instanceof McastService) {                                                       if (membershipService instanceof McastService) {                                                    
((McastService) membershipService).setMessageListener(this);                                           ((McastService) membershipService).setMessageListener(this);                                        
}                                                                                                      }                                                                                                   
membershipService.start(MembershipService.MBR_RX);                                                     membershipService.start(MembershipService.MBR_RX);                                                  
valid = true;                                                                                          valid = true;                                                                                       
}                                                                                                      }                                                                                                   
if (Channel.MBR_TX_SEQ == (svc & Channel.MBR_TX_SEQ)) {                                                if (Channel.MBR_TX_SEQ == (svc & Channel.MBR_TX_SEQ)) {                                             
membershipService.setChannel(getChannel());                                                            membershipService.setChannel(getChannel());                                                         
membershipService.start(MembershipService.MBR_TX);                                                     membershipService.start(MembershipService.MBR_TX);                                                  
valid = true;                                                                                          valid = true;                                                                                       
}                                                                                                      }                                                                                                   
if (!valid) {                                                                                          if (!valid) {                                                                                       
throw new IllegalArgumentException(sm.getString("channelCoordinator.invalid.startLevel"));             throw new IllegalArgumentException(sm.getString("channelCoordinator.invalid.startLevel"));          
}                                                                                                      }                                                                                                   
startLevel = (startLevel | svc);                                                                       startLevel = (startLevel | svc);                                                                    
} catch (ChannelException cx) {                                                                        } catch (ChannelException cx) {                                                                     
throw cx;                                                                                              throw cx;                                                                                           
} catch (Exception x) {                                                                                } catch (Exception x) {                                                                             
throw new ChannelException(x);                                                                         throw new ChannelException(x);                                                                      
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
