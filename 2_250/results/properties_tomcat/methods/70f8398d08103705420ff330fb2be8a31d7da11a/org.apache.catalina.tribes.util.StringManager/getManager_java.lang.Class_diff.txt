/**
 * The StringManager will be returned for the package in which the class is
 * located. If a manager for that package already exists, it will be reused,
 * else a new StringManager will be created and returned.
 *
 * @param clazz The class for which to retrieve the StringManager
 *
 * @return The StringManager for the given class.
 */
public static final StringManager getManager(Class<?> clazz) {
    return getManager(clazz.getPackage().getName());
}