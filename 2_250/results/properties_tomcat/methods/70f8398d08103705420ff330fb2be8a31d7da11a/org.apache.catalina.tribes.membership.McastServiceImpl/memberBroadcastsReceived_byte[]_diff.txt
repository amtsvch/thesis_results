private void memberBroadcastsReceived(final byte[] b) {                                                private void memberBroadcastsReceived(final byte[] b) {                                             
if (log.isTraceEnabled())                                                                            | if (log.isTraceEnabled()) {                                                                         
log.trace("Mcast received broadcasts.");                                                               log.trace("Mcast received broadcasts.");                                                            
                                                                                                     | }                                                                                                   
XByteBuffer buffer = new XByteBuffer(b, true);                                                         XByteBuffer buffer = new XByteBuffer(b, true);                                                      
if (buffer.countPackages(true) &gt; 0) {                                                               if (buffer.countPackages(true) &gt; 0) {                                                            
int count = buffer.countPackages();                                                                    int count = buffer.countPackages();                                                                 
final ChannelData[] data = new ChannelData[count];                                                     final ChannelData[] data = new ChannelData[count];                                                  
for (int i = 0; i &lt; count; i++) {                                                                   for (int i = 0; i &lt; count; i++) {                                                                
try {                                                                                                  try {                                                                                               
data[i] = buffer.extractPackage(true);                                                                 data[i] = buffer.extractPackage(true);                                                              
} catch (IllegalStateException ise) {                                                                  } catch (IllegalStateException ise) {                                                               
log.debug("Unable to decode message.", ise);                                                           log.debug("Unable to decode message.", ise);                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
Runnable t = () -&gt; {                                                                                Runnable t = () -&gt; {                                                                             
String name = Thread.currentThread().getName();                                                        String name = Thread.currentThread().getName();                                                     
try {                                                                                                  try {                                                                                               
Thread.currentThread().setName("Membership-MemberAdded");                                              Thread.currentThread().setName("Membership-MemberAdded");                                           
for (ChannelData datum : data) {                                                                       for (ChannelData datum : data) {                                                                    
try {                                                                                                  try {                                                                                               
if (datum != null && !member.equals(datum.getAddress())) {                                             if (datum != null && !member.equals(datum.getAddress())) {                                          
msgservice.messageReceived(datum);                                                                     msgservice.messageReceived(datum);                                                                  
}                                                                                                      }                                                                                                   
} catch (Throwable t1) {                                                                               } catch (Throwable t1) {                                                                            
if (t1 instanceof ThreadDeath) {                                                                       if (t1 instanceof ThreadDeath) {                                                                    
throw (ThreadDeath) t1;                                                                                throw (ThreadDeath) t1;                                                                             
}                                                                                                      }                                                                                                   
if (t1 instanceof VirtualMachineError) {                                                               if (t1 instanceof VirtualMachineError) {                                                            
throw (VirtualMachineError) t1;                                                                        throw (VirtualMachineError) t1;                                                                     
}                                                                                                      }                                                                                                   
log.error(sm.getString("mcastServiceImpl.unableReceive.broadcastMessage"), t1);                        log.error(sm.getString("mcastServiceImpl.unableReceive.broadcastMessage"), t1);                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
Thread.currentThread().setName(name);                                                                  Thread.currentThread().setName(name);                                                               
}                                                                                                      }                                                                                                   
};                                                                                                     };                                                                                                  
executor.execute(t);                                                                                   executor.execute(t);                                                                                
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
