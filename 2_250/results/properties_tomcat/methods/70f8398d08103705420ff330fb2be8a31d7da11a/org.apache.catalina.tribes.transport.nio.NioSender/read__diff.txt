protected boolean read() throws IOException {                                                          protected boolean read() throws IOException {                                                       
// if there is no message here, we are done                                                            // if there is no message here, we are done                                                         
if (current == null)                                                                                 | if (current == null) {                                                                              
return true;                                                                                           return true;                                                                                        
                                                                                                     | }                                                                                                   
int read = isUdpBased() ? dataChannel.read(readbuf) : socketChannel.read(readbuf);                     int read = isUdpBased() ? dataChannel.read(readbuf) : socketChannel.read(readbuf);                  
// end of stream                                                                                       // end of stream                                                                                    
if (read == -1)                                                                                      | if (read == -1) {                                                                                   
throw new IOException(sm.getString("nioSender.unable.receive.ack"));                                   throw new IOException(sm.getString("nioSender.unable.receive.ack"));                                
else // no data read                                                                                 | } else if (read == 0) {                                                                             
if (read == 0)                                                                                       |                                                                                                     
return false;                                                                                          return false;                                                                                       
                                                                                                     | }                                                                                                   
readbuf.flip();                                                                                        readbuf.flip();                                                                                     
ackbuf.append(readbuf, read);                                                                          ackbuf.append(readbuf, read);                                                                       
readbuf.clear();                                                                                       readbuf.clear();                                                                                    
if (ackbuf.doesPackageExist()) {                                                                       if (ackbuf.doesPackageExist()) {                                                                    
byte[] ackcmd = ackbuf.extractDataPackage(true).getBytes();                                            byte[] ackcmd = ackbuf.extractDataPackage(true).getBytes();                                         
boolean ack = Arrays.equals(ackcmd, org.apache.catalina.tribes.transport.Constants.ACK_DATA);          boolean ack = Arrays.equals(ackcmd, org.apache.catalina.tribes.transport.Constants.ACK_DATA);       
boolean fack = Arrays.equals(ackcmd, org.apache.catalina.tribes.transport.Constants.FAIL_ACK_DATA);    boolean fack = Arrays.equals(ackcmd, org.apache.catalina.tribes.transport.Constants.FAIL_ACK_DATA); 
if (fack && getThrowOnFailedAck())                                                                   | if (fack && getThrowOnFailedAck()) {                                                                
throw new RemoteProcessException(sm.getString("nioSender.receive.failedAck"));                         throw new RemoteProcessException(sm.getString("nioSender.receive.failedAck"));                      
                                                                                                     | }                                                                                                   
return ack || fack;                                                                                    return ack || fack;                                                                                 
} else {                                                                                               } else {                                                                                            
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
