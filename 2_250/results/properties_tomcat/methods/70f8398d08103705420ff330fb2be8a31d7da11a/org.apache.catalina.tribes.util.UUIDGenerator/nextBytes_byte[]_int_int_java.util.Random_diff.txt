/**                                                                                                    /**                                                                                                 
* Same as java.util.Random.nextBytes except this one we don't have to allocate a new byte array        * Same as java.util.Random.nextBytes except this one we don't have to allocate a new byte array     
* @param into byte[]                                                                                   * @param into byte[]                                                                                
* @param offset int                                                                                    * @param offset int                                                                                 
* @param length int                                                                                    * @param length int                                                                                 
* @param r Random                                                                                      * @param r Random                                                                                   
*/                                                                                                     */                                                                                                  
public static void nextBytes(byte[] into, int offset, int length, Random r) {                          public static void nextBytes(byte[] into, int offset, int length, Random r) {                       
int numRequested = length;                                                                             int numRequested = length;                                                                          
int numGot = 0, rnd = 0;                                                                               int numGot = 0, rnd = 0;                                                                            
while (true) {                                                                                         while (true) {                                                                                      
for (int i = 0; i &lt; BYTES_PER_INT; i++) {                                                           for (int i = 0; i &lt; BYTES_PER_INT; i++) {                                                        
if (numGot == numRequested)                                                                          | if (numGot == numRequested) {                                                                       
return;                                                                                                return;                                                                                             
                                                                                                     | }                                                                                                   
rnd = (i == 0 ? r.nextInt() : rnd &gt;&gt; BITS_PER_BYTE);                                             rnd = (i == 0 ? r.nextInt() : rnd &gt;&gt; BITS_PER_BYTE);                                          
into[offset + numGot] = (byte) rnd;                                                                    into[offset + numGot] = (byte) rnd;                                                                 
numGot++;                                                                                              numGot++;                                                                                           
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
