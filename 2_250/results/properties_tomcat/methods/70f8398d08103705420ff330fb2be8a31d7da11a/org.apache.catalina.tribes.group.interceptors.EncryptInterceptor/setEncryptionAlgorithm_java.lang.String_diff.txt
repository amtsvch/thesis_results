/**                                                                                                    /**                                                                                                 
* Sets the encryption algorithm to be used for encrypting and decrypting                               * Sets the encryption algorithm to be used for encrypting and decrypting                            
* channel messages. You must specify the &lt;code&gt;algorithm/mode/padding&lt;/code&gt;.              * channel messages. You must specify the &lt;code&gt;algorithm/mode/padding&lt;/code&gt;.           
* Information on standard algorithm names may be found in the                                          * Information on standard algorithm names may be found in the                                       
* &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html"&gt   * &lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html"&gt
* documentation&lt;/a&gt;.                                                                             * documentation&lt;/a&gt;.                                                                          
*                                                                                                      *                                                                                                   
* Default is &lt;code&gt;AES/CBC/PKCS5Padding&lt;/code&gt;.                                            * Default is &lt;code&gt;AES/CBC/PKCS5Padding&lt;/code&gt;.                                         
*                                                                                                      *                                                                                                   
* @param algorithm The algorithm to use.                                                               * @param algorithm The algorithm to use.                                                            
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public void setEncryptionAlgorithm(String algorithm) {                                                 public void setEncryptionAlgorithm(String algorithm) {                                              
if (null == getEncryptionAlgorithm())                                                                | if (null == getEncryptionAlgorithm()) {                                                             
throw new IllegalStateException(sm.getString("encryptInterceptor.algorithm.required"));                throw new IllegalStateException(sm.getString("encryptInterceptor.algorithm.required"));             
                                                                                                     | }                                                                                                   
int pos = algorithm.indexOf('/');                                                                      int pos = algorithm.indexOf('/');                                                                   
if (pos &lt; 0)                                                                                      | if (pos &lt; 0) {                                                                                   
throw new IllegalArgumentException(sm.getString("encryptInterceptor.algorithm.required"));             throw new IllegalArgumentException(sm.getString("encryptInterceptor.algorithm.required"));          
                                                                                                     | }                                                                                                   
pos = algorithm.indexOf('/', pos + 1);                                                                 pos = algorithm.indexOf('/', pos + 1);                                                              
if (pos &lt; 0)                                                                                      | if (pos &lt; 0) {                                                                                   
throw new IllegalArgumentException(sm.getString("encryptInterceptor.algorithm.required"));             throw new IllegalArgumentException(sm.getString("encryptInterceptor.algorithm.required"));          
                                                                                                     | }                                                                                                   
encryptionAlgorithm = algorithm;                                                                       encryptionAlgorithm = algorithm;                                                                    
}                                                                                                      }                                                                                                   
