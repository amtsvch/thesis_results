private NioSender[] setupForSend(Member[] destination) throws ChannelException {                       private NioSender[] setupForSend(Member[] destination) throws ChannelException {                    
ChannelException cx = null;                                                                            ChannelException cx = null;                                                                         
NioSender[] result = new NioSender[destination.length];                                                NioSender[] result = new NioSender[destination.length];                                             
for (int i = 0; i &lt; destination.length; i++) {                                                      for (int i = 0; i &lt; destination.length; i++) {                                                   
NioSender sender = nioSenders.get(destination[i]);                                                     NioSender sender = nioSenders.get(destination[i]);                                                  
try {                                                                                                  try {                                                                                               
if (sender == null) {                                                                                  if (sender == null) {                                                                               
sender = new NioSender();                                                                              sender = new NioSender();                                                                           
AbstractSender.transferProperties(this, sender);                                                       AbstractSender.transferProperties(this, sender);                                                    
nioSenders.put(destination[i], sender);                                                                nioSenders.put(destination[i], sender);                                                             
}                                                                                                      }                                                                                                   
sender.reset();                                                                                        sender.reset();                                                                                     
sender.setDestination(destination[i]);                                                                 sender.setDestination(destination[i]);                                                              
sender.setSelector(selector);                                                                          sender.setSelector(selector);                                                                       
sender.setUdpBased(isUdpBased());                                                                      sender.setUdpBased(isUdpBased());                                                                   
result[i] = sender;                                                                                    result[i] = sender;                                                                                 
} catch (UnknownHostException x) {                                                                     } catch (UnknownHostException x) {                                                                  
if (cx == null)                                                                                      | if (cx == null) {                                                                                   
cx = new ChannelException(sm.getString("parallelNioSender.unable.setup.NioSender"), x);                cx = new ChannelException(sm.getString("parallelNioSender.unable.setup.NioSender"), x);             
                                                                                                     | }                                                                                                   
cx.addFaultyMember(destination[i], x);                                                                 cx.addFaultyMember(destination[i], x);                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (cx != null)                                                                                      | if (cx != null) {                                                                                   
throw cx;                                                                                              throw cx;                                                                                           
else                                                                                                 | } else {                                                                                            
return result;                                                                                         return result;                                                                                      
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
