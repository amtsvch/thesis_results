/**                                                                                                    /**                                                                                                 
* Similar to a String.IndexOf, but uses pure bytes.                                                    * Similar to a String.IndexOf, but uses pure bytes.                                                 
* @param src - the source bytes to be searched                                                         * @param src - the source bytes to be searched                                                      
* @param srcOff - offset on the source buffer                                                          * @param srcOff - offset on the source buffer                                                       
* @param find - the string to be found within src                                                      * @param find - the string to be found within src                                                   
* @return - the index of the first matching byte. -1 if the find array is not found                    * @return - the index of the first matching byte. -1 if the find array is not found                 
*/                                                                                                     */                                                                                                  
public static int firstIndexOf(byte[] src, int srcOff, byte[] find) {                                  public static int firstIndexOf(byte[] src, int srcOff, byte[] find) {                               
int result = -1;                                                                                       int result = -1;                                                                                    
if (find.length &gt; src.length)                                                                     | if (find.length &gt; src.length) {                                                                  
return result;                                                                                         return result;                                                                                      
if (find.length == 0 || src.length == 0)                                                             | }                                                                                                   
                                                                                                     | if (find.length == 0 || src.length == 0) {                                                          
return result;                                                                                         return result;                                                                                      
if (srcOff &gt;= src.length)                                                                         | }                                                                                                   
                                                                                                     | if (srcOff &gt;= src.length) {                                                                      
throw new java.lang.ArrayIndexOutOfBoundsException();                                                  throw new java.lang.ArrayIndexOutOfBoundsException();                                               
                                                                                                     | }                                                                                                   
boolean found = false;                                                                                 boolean found = false;                                                                              
int srclen = src.length;                                                                               int srclen = src.length;                                                                            
int findlen = find.length;                                                                             int findlen = find.length;                                                                          
byte first = find[0];                                                                                  byte first = find[0];                                                                               
int pos = srcOff;                                                                                      int pos = srcOff;                                                                                   
while (!found) {                                                                                       while (!found) {                                                                                    
// find the first byte                                                                                 // find the first byte                                                                              
while (pos &lt; srclen) {                                                                              while (pos &lt; srclen) {                                                                           
if (first == src[pos])                                                                               | if (first == src[pos]) {                                                                            
break;                                                                                                 break;                                                                                              
                                                                                                     | }                                                                                                   
pos++;                                                                                                 pos++;                                                                                              
}                                                                                                      }                                                                                                   
if (pos &gt;= srclen)                                                                                | if (pos &gt;= srclen) {                                                                             
return -1;                                                                                             return -1;                                                                                          
                                                                                                     | }                                                                                                   
// we found the first character                                                                        // we found the first character                                                                     
// match the rest of the bytes - they have to match                                                    // match the rest of the bytes - they have to match                                                 
if ((srclen - pos) &lt; findlen)                                                                     | if ((srclen - pos) &lt; findlen) {                                                                  
return -1;                                                                                             return -1;                                                                                          
                                                                                                     | }                                                                                                   
// assume it does exist                                                                                // assume it does exist                                                                             
found = true;                                                                                          found = true;                                                                                       
for (int i = 1; ((i &lt; findlen) && found); i++) {                                                    for (int i = 1; ((i &lt; findlen) && found); i++) {                                                 
found = (find[i] == src[pos + i]);                                                                     found = (find[i] == src[pos + i]);                                                                  
}                                                                                                      }                                                                                                   
if (found) {                                                                                           if (found) {                                                                                        
result = pos;                                                                                          result = pos;                                                                                       
} else if ((srclen - pos) &lt; findlen) {                                                              } else if ((srclen - pos) &lt; findlen) {                                                           
// no more matches possible                                                                            // no more matches possible                                                                         
return -1;                                                                                             return -1;                                                                                          
} else {                                                                                               } else {                                                                                            
pos++;                                                                                                 pos++;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return result;                                                                                         return result;                                                                                      
}                                                                                                      }                                                                                                   
