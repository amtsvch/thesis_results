public int countPackages(boolean first) {
    int cnt = 0;
    int pos = START_DATA.length;
    int start = 0;
    while (start < bufSize) {
        // first check start header
        int index = XByteBuffer.firstIndexOf(buf, start, START_DATA);
        // if the header (START_DATA) isn't the first thing or
        // the buffer isn't even 14 bytes
        if (index != start || ((bufSize - start) < 14))
            break;
        // next 4 bytes are compress flag not needed for count packages
        // then get the size 4 bytes
        int size = toInt(buf, pos);
        // now the total buffer has to be long enough to hold
        // START_DATA.length+4+size+END_DATA.length
        pos = start + START_DATA.length + 4 + size;
        if ((pos + END_DATA.length) > bufSize)
            break;
        // and finally check the footer of the package END_DATA
        int newpos = firstIndexOf(buf, pos, END_DATA);
        // mismatch, there is no package
        if (newpos != pos)
            break;
        // increase the packet count
        cnt++;
        // reset the values
        start = pos + END_DATA.length;
        pos = start + START_DATA.length;
        // we only want to verify that we have at least one package
        if (first)
            break;
    }
    return cnt;
}