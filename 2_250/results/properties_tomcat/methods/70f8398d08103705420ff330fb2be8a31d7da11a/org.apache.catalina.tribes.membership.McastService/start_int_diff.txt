@Override                                                                                              @Override                                                                                           
public void start(int level) throws java.lang.Exception {                                              public void start(int level) throws java.lang.Exception {                                           
hasProperty(properties, "mcastPort");                                                                  hasProperty(properties, "mcastPort");                                                               
hasProperty(properties, "mcastAddress");                                                               hasProperty(properties, "mcastAddress");                                                            
hasProperty(properties, "memberDropTime");                                                             hasProperty(properties, "memberDropTime");                                                          
hasProperty(properties, "mcastFrequency");                                                             hasProperty(properties, "mcastFrequency");                                                          
hasProperty(properties, "tcpListenPort");                                                              hasProperty(properties, "tcpListenPort");                                                           
hasProperty(properties, "tcpListenHost");                                                              hasProperty(properties, "tcpListenHost");                                                           
hasProperty(properties, "tcpSecurePort");                                                              hasProperty(properties, "tcpSecurePort");                                                           
hasProperty(properties, "udpListenPort");                                                              hasProperty(properties, "udpListenPort");                                                           
if (impl != null) {                                                                                    if (impl != null) {                                                                                 
impl.start(level);                                                                                     impl.start(level);                                                                                  
return;                                                                                                return;                                                                                             
}                                                                                                      }                                                                                                   
String host = getProperties().getProperty("tcpListenHost");                                            String host = getProperties().getProperty("tcpListenHost");                                         
int port = Integer.parseInt(getProperties().getProperty("tcpListenPort"));                             int port = Integer.parseInt(getProperties().getProperty("tcpListenPort"));                          
int securePort = Integer.parseInt(getProperties().getProperty("tcpSecurePort"));                       int securePort = Integer.parseInt(getProperties().getProperty("tcpSecurePort"));                    
int udpPort = Integer.parseInt(getProperties().getProperty("udpListenPort"));                          int udpPort = Integer.parseInt(getProperties().getProperty("udpListenPort"));                       
if (localMember == null) {                                                                             if (localMember == null) {                                                                          
localMember = new MemberImpl(host, port, 100);                                                         localMember = new MemberImpl(host, port, 100);                                                      
localMember.setUniqueId(UUIDGenerator.randomUUID(true));                                               localMember.setUniqueId(UUIDGenerator.randomUUID(true));                                            
localMember.setLocal(true);                                                                            localMember.setLocal(true);                                                                         
} else {                                                                                               } else {                                                                                            
localMember.setHostname(host);                                                                         localMember.setHostname(host);                                                                      
localMember.setPort(port);                                                                             localMember.setPort(port);                                                                          
localMember.setMemberAliveTime(100);                                                                   localMember.setMemberAliveTime(100);                                                                
}                                                                                                      }                                                                                                   
localMember.setSecurePort(securePort);                                                                 localMember.setSecurePort(securePort);                                                              
localMember.setUdpPort(udpPort);                                                                       localMember.setUdpPort(udpPort);                                                                    
if (this.payload != null)                                                                            | if (this.payload != null) {                                                                         
localMember.setPayload(payload);                                                                       localMember.setPayload(payload);                                                                    
if (this.domain != null)                                                                             | }                                                                                                   
                                                                                                     | if (this.domain != null) {                                                                          
localMember.setDomain(domain);                                                                         localMember.setDomain(domain);                                                                      
                                                                                                     | }                                                                                                   
localMember.setServiceStartTime(System.currentTimeMillis());                                           localMember.setServiceStartTime(System.currentTimeMillis());                                        
java.net.InetAddress bind = null;                                                                      java.net.InetAddress bind = null;                                                                   
if (properties.getProperty("mcastBindAddress") != null) {                                              if (properties.getProperty("mcastBindAddress") != null) {                                           
bind = java.net.InetAddress.getByName(properties.getProperty("mcastBindAddress"));                     bind = java.net.InetAddress.getByName(properties.getProperty("mcastBindAddress"));                  
}                                                                                                      }                                                                                                   
int ttl = -1;                                                                                          int ttl = -1;                                                                                       
int soTimeout = -1;                                                                                    int soTimeout = -1;                                                                                 
if (properties.getProperty("mcastTTL") != null) {                                                      if (properties.getProperty("mcastTTL") != null) {                                                   
try {                                                                                                  try {                                                                                               
ttl = Integer.parseInt(properties.getProperty("mcastTTL"));                                            ttl = Integer.parseInt(properties.getProperty("mcastTTL"));                                         
} catch (Exception x) {                                                                                } catch (Exception x) {                                                                             
log.error(sm.getString("McastService.parseTTL", properties.getProperty("mcastTTL")), x);               log.error(sm.getString("McastService.parseTTL", properties.getProperty("mcastTTL")), x);            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (properties.getProperty("mcastSoTimeout") != null) {                                                if (properties.getProperty("mcastSoTimeout") != null) {                                             
try {                                                                                                  try {                                                                                               
soTimeout = Integer.parseInt(properties.getProperty("mcastSoTimeout"));                                soTimeout = Integer.parseInt(properties.getProperty("mcastSoTimeout"));                             
} catch (Exception x) {                                                                                } catch (Exception x) {                                                                             
log.error(sm.getString("McastService.parseSoTimeout", properties.getProperty("mcastSoTimeout")), x);   log.error(sm.getString("McastService.parseSoTimeout", properties.getProperty("mcastSoTimeout")), x);
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
impl = new McastServiceImpl(localMember, Long.parseLong(properties.getProperty("mcastFrequency")), L   impl = new McastServiceImpl(localMember, Long.parseLong(properties.getProperty("mcastFrequency")), L
impl.setMembershipService(this);                                                                       impl.setMembershipService(this);                                                                    
String value = properties.getProperty("recoveryEnabled");                                              String value = properties.getProperty("recoveryEnabled");                                           
boolean recEnabled = Boolean.parseBoolean(value);                                                      boolean recEnabled = Boolean.parseBoolean(value);                                                   
impl.setRecoveryEnabled(recEnabled);                                                                   impl.setRecoveryEnabled(recEnabled);                                                                
int recCnt = Integer.parseInt(properties.getProperty("recoveryCounter"));                              int recCnt = Integer.parseInt(properties.getProperty("recoveryCounter"));                           
impl.setRecoveryCounter(recCnt);                                                                       impl.setRecoveryCounter(recCnt);                                                                    
long recSlpTime = Long.parseLong(properties.getProperty("recoverySleepTime"));                         long recSlpTime = Long.parseLong(properties.getProperty("recoverySleepTime"));                      
impl.setRecoverySleepTime(recSlpTime);                                                                 impl.setRecoverySleepTime(recSlpTime);                                                              
impl.setChannel(channel);                                                                              impl.setChannel(channel);                                                                           
impl.start(level);                                                                                     impl.start(level);                                                                                  
// register jmx                                                                                        // register jmx                                                                                     
JmxRegistry jmxRegistry = JmxRegistry.getRegistry(channel);                                            JmxRegistry jmxRegistry = JmxRegistry.getRegistry(channel);                                         
if (jmxRegistry != null) {                                                                             if (jmxRegistry != null) {                                                                          
this.oname = jmxRegistry.registerJmx(",component=Membership", this);                                   this.oname = jmxRegistry.registerJmx(",component=Membership", this);                                
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
