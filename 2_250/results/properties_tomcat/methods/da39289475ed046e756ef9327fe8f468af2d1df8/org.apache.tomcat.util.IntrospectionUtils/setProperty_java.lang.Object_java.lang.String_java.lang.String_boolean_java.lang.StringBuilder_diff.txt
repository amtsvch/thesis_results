// setPropertyMethodVoid is not null when used                                                         // setPropertyMethodVoid is not null when used                                                      
@SuppressWarnings("null")                                                                              @SuppressWarnings("null")                                                                           
public static boolean setProperty(Object o, String name, String value, boolean invokeSetProperty, St   public static boolean setProperty(Object o, String name, String value, boolean invokeSetProperty, St
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("IntrospectionUtils: setProperty(" + o.getClass() + " " + name + "=" + value + ")");         log.debug("IntrospectionUtils: setProperty(" + o.getClass() + " " + name + "=" + value + ")");      
                                                                                                     | }                                                                                                   
if (actualMethod == null && XReflectionIntrospectionUtils.isEnabled()) {                               if (actualMethod == null && XReflectionIntrospectionUtils.isEnabled()) {                            
return XReflectionIntrospectionUtils.setPropertyInternal(o, name, value, invokeSetProperty);           return XReflectionIntrospectionUtils.setPropertyInternal(o, name, value, invokeSetProperty);        
}                                                                                                      }                                                                                                   
String setter = "set" + capitalize(name);                                                              String setter = "set" + capitalize(name);                                                           
try {                                                                                                  try {                                                                                               
Method[] methods = findMethods(o.getClass());                                                          Method[] methods = findMethods(o.getClass());                                                       
Method setPropertyMethodVoid = null;                                                                   Method setPropertyMethodVoid = null;                                                                
Method setPropertyMethodBool = null;                                                                   Method setPropertyMethodBool = null;                                                                
// First, the ideal case - a setFoo( String ) method                                                   // First, the ideal case - a setFoo( String ) method                                                
for (Method item : methods) {                                                                          for (Method item : methods) {                                                                       
Class&lt;?&gt;[] paramT = item.getParameterTypes();                                                    Class&lt;?&gt;[] paramT = item.getParameterTypes();                                                 
if (setter.equals(item.getName()) && paramT.length == 1 && "java.lang.String".equals(paramT[0].getNa   if (setter.equals(item.getName()) && paramT.length == 1 && "java.lang.String".equals(paramT[0].getNa
item.invoke(o, new Object[] { value });                                                                item.invoke(o, new Object[] { value });                                                             
if (actualMethod != null) {                                                                            if (actualMethod != null) {                                                                         
actualMethod.append(item.getName()).append("(\"").append(escape(value)).append("\")");                 actualMethod.append(item.getName()).append("(\"").append(escape(value)).append("\")");              
}                                                                                                      }                                                                                                   
return true;                                                                                           return true;                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// Try a setFoo ( int ) or ( boolean )                                                                 // Try a setFoo ( int ) or ( boolean )                                                              
for (Method method : methods) {                                                                        for (Method method : methods) {                                                                     
boolean ok = true;                                                                                     boolean ok = true;                                                                                  
if (setter.equals(method.getName()) && method.getParameterTypes().length == 1) {                       if (setter.equals(method.getName()) && method.getParameterTypes().length == 1) {                    
// match - find the type and invoke it                                                                 // match - find the type and invoke it                                                              
Class&lt;?&gt; paramType = method.getParameterTypes()[0];                                              Class&lt;?&gt; paramType = method.getParameterTypes()[0];                                           
Object[] params = new Object[1];                                                                       Object[] params = new Object[1];                                                                    
// Try a setFoo ( int )                                                                                // Try a setFoo ( int )                                                                             
if ("java.lang.Integer".equals(paramType.getName()) || "int".equals(paramType.getName())) {            if ("java.lang.Integer".equals(paramType.getName()) || "int".equals(paramType.getName())) {         
try {                                                                                                  try {                                                                                               
params[0] = Integer.valueOf(value);                                                                    params[0] = Integer.valueOf(value);                                                                 
} catch (NumberFormatException ex) {                                                                   } catch (NumberFormatException ex) {                                                                
ok = false;                                                                                            ok = false;                                                                                         
}                                                                                                      }                                                                                                   
if (actualMethod != null) {                                                                            if (actualMethod != null) {                                                                         
actualMethod.append(method.getName()).append("(Integer.valueOf(\"").append(value).append("\"))");      actualMethod.append(method.getName()).append("(Integer.valueOf(\"").append(value).append("\"))");   
}                                                                                                      }                                                                                                   
// Try a setFoo ( long )                                                                               // Try a setFoo ( long )                                                                            
} else if ("java.lang.Long".equals(paramType.getName()) || "long".equals(paramType.getName())) {       } else if ("java.lang.Long".equals(paramType.getName()) || "long".equals(paramType.getName())) {    
try {                                                                                                  try {                                                                                               
params[0] = Long.valueOf(value);                                                                       params[0] = Long.valueOf(value);                                                                    
} catch (NumberFormatException ex) {                                                                   } catch (NumberFormatException ex) {                                                                
ok = false;                                                                                            ok = false;                                                                                         
}                                                                                                      }                                                                                                   
if (actualMethod != null) {                                                                            if (actualMethod != null) {                                                                         
actualMethod.append(method.getName()).append("(Long.valueOf(\"").append(value).append("\"))");         actualMethod.append(method.getName()).append("(Long.valueOf(\"").append(value).append("\"))");      
}                                                                                                      }                                                                                                   
// Try a setFoo ( boolean )                                                                            // Try a setFoo ( boolean )                                                                         
} else if ("java.lang.Boolean".equals(paramType.getName()) || "boolean".equals(paramType.getName()))   } else if ("java.lang.Boolean".equals(paramType.getName()) || "boolean".equals(paramType.getName()))
params[0] = Boolean.valueOf(value);                                                                    params[0] = Boolean.valueOf(value);                                                                 
if (actualMethod != null) {                                                                            if (actualMethod != null) {                                                                         
actualMethod.append(method.getName()).append("(Boolean.valueOf(\"").append(value).append("\"))");      actualMethod.append(method.getName()).append("(Boolean.valueOf(\"").append(value).append("\"))");   
}                                                                                                      }                                                                                                   
// Try a setFoo ( InetAddress )                                                                        // Try a setFoo ( InetAddress )                                                                     
} else if ("java.net.InetAddress".equals(paramType.getName())) {                                       } else if ("java.net.InetAddress".equals(paramType.getName())) {                                    
try {                                                                                                  try {                                                                                               
params[0] = InetAddress.getByName(value);                                                              params[0] = InetAddress.getByName(value);                                                           
} catch (UnknownHostException exc) {                                                                   } catch (UnknownHostException exc) {                                                                
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("IntrospectionUtils: Unable to resolve host name:" + value);                                 log.debug("IntrospectionUtils: Unable to resolve host name:" + value);                              
                                                                                                     | }                                                                                                   
ok = false;                                                                                            ok = false;                                                                                         
}                                                                                                      }                                                                                                   
if (actualMethod != null) {                                                                            if (actualMethod != null) {                                                                         
actualMethod.append(method.getName()).append("(InetAddress.getByName(\"").append(value).append("\"))   actualMethod.append(method.getName()).append("(InetAddress.getByName(\"").append(value).append("\"))
}                                                                                                      }                                                                                                   
// Unknown type                                                                                        // Unknown type                                                                                     
} else {                                                                                               } else {                                                                                            
if (log.isDebugEnabled())                                                                            | if (log.isDebugEnabled()) {                                                                         
log.debug("IntrospectionUtils: Unknown type " + paramType.getName());                                  log.debug("IntrospectionUtils: Unknown type " + paramType.getName());                               
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
if (ok) {                                                                                              if (ok) {                                                                                           
method.invoke(o, params);                                                                              method.invoke(o, params);                                                                           
return true;                                                                                           return true;                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// save "setProperty" for later                                                                        // save "setProperty" for later                                                                     
if ("setProperty".equals(method.getName())) {                                                          if ("setProperty".equals(method.getName())) {                                                       
if (method.getReturnType() == Boolean.TYPE) {                                                          if (method.getReturnType() == Boolean.TYPE) {                                                       
setPropertyMethodBool = method;                                                                        setPropertyMethodBool = method;                                                                     
} else {                                                                                               } else {                                                                                            
setPropertyMethodVoid = method;                                                                        setPropertyMethodVoid = method;                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// Ok, no setXXX found, try a setProperty("name", "value")                                             // Ok, no setXXX found, try a setProperty("name", "value")                                          
if (invokeSetProperty && (setPropertyMethodBool != null || setPropertyMethodVoid != null)) {           if (invokeSetProperty && (setPropertyMethodBool != null || setPropertyMethodVoid != null)) {        
if (actualMethod != null) {                                                                            if (actualMethod != null) {                                                                         
actualMethod.append("setProperty(\"").append(name).append("\", \"").append(escape(value)).append("\"   actualMethod.append("setProperty(\"").append(name).append("\", \"").append(escape(value)).append("\"
}                                                                                                      }                                                                                                   
Object[] params = new Object[2];                                                                       Object[] params = new Object[2];                                                                    
params[0] = name;                                                                                      params[0] = name;                                                                                   
params[1] = value;                                                                                     params[1] = value;                                                                                  
if (setPropertyMethodBool != null) {                                                                   if (setPropertyMethodBool != null) {                                                                
try {                                                                                                  try {                                                                                               
return ((Boolean) setPropertyMethodBool.invoke(o, params)).booleanValue();                             return ((Boolean) setPropertyMethodBool.invoke(o, params)).booleanValue();                          
} catch (IllegalArgumentException biae) {                                                              } catch (IllegalArgumentException biae) {                                                           
// the boolean method had the wrong                                                                    // the boolean method had the wrong                                                                 
// parameter types. lets try the other                                                                 // parameter types. lets try the other                                                              
if (setPropertyMethodVoid != null) {                                                                   if (setPropertyMethodVoid != null) {                                                                
setPropertyMethodVoid.invoke(o, params);                                                               setPropertyMethodVoid.invoke(o, params);                                                            
return true;                                                                                           return true;                                                                                        
} else {                                                                                               } else {                                                                                            
throw biae;                                                                                            throw biae;                                                                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
setPropertyMethodVoid.invoke(o, params);                                                               setPropertyMethodVoid.invoke(o, params);                                                            
return true;                                                                                           return true;                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} catch (IllegalArgumentException | SecurityException | IllegalAccessException e) {                    } catch (IllegalArgumentException | SecurityException | IllegalAccessException e) {                 
log.warn(sm.getString("introspectionUtils.setPropertyError", name, value, o.getClass()), e);           log.warn(sm.getString("introspectionUtils.setPropertyError", name, value, o.getClass()), e);        
} catch (InvocationTargetException e) {                                                                } catch (InvocationTargetException e) {                                                             
ExceptionUtils.handleThrowable(e.getCause());                                                          ExceptionUtils.handleThrowable(e.getCause());                                                       
log.warn(sm.getString("introspectionUtils.setPropertyError", name, value, o.getClass()), e);           log.warn(sm.getString("introspectionUtils.setPropertyError", name, value, o.getClass()), e);        
}                                                                                                      }                                                                                                   
return false;                                                                                          return false;                                                                                       
}                                                                                                      }                                                                                                   
