private void addEntryToHeaderTable(Hpack.HeaderField entry) {                                          private void addEntryToHeaderTable(Hpack.HeaderField entry) {                                       
if (entry.size &gt; maxMemorySizeSoft) {                                                               if (entry.size &gt; maxMemorySizeSoft) {                                                            
                                                                                                     | if (log.isDebugEnabled()) {                                                                         
                                                                                                     | log.debug(sm.getString("hpackdecoder.clearDynamic"));                                               
                                                                                                     | }                                                                                                   
// it is to big to fit, so we just completely clear the table.                                         // it is to big to fit, so we just completely clear the table.                                      
while (filledTableSlots &gt; 0) {                                                                      while (filledTableSlots &gt; 0) {                                                                   
headerTable[firstSlotPosition] = null;                                                                 headerTable[firstSlotPosition] = null;                                                              
firstSlotPosition++;                                                                                   firstSlotPosition++;                                                                                
if (firstSlotPosition == headerTable.length) {                                                         if (firstSlotPosition == headerTable.length) {                                                      
firstSlotPosition = 0;                                                                                 firstSlotPosition = 0;                                                                              
}                                                                                                      }                                                                                                   
filledTableSlots--;                                                                                    filledTableSlots--;                                                                                 
}                                                                                                      }                                                                                                   
currentMemorySize = 0;                                                                                 currentMemorySize = 0;                                                                              
return;                                                                                                return;                                                                                             
}                                                                                                      }                                                                                                   
resizeIfRequired();                                                                                    resizeIfRequired();                                                                                 
int newTableSlots = filledTableSlots + 1;                                                              int newTableSlots = filledTableSlots + 1;                                                           
int tableLength = headerTable.length;                                                                  int tableLength = headerTable.length;                                                               
int index = (firstSlotPosition + filledTableSlots) % tableLength;                                      int index = (firstSlotPosition + filledTableSlots) % tableLength;                                   
                                                                                                     | if (log.isDebugEnabled()) {                                                                         
                                                                                                     | log.debug(sm.getString("hpackdecoder.addDynamic", Integer.valueOf(index), entry.name, entry.value));
                                                                                                     | }                                                                                                   
headerTable[index] = entry;                                                                            headerTable[index] = entry;                                                                         
int newSize = currentMemorySize + entry.size;                                                          int newSize = currentMemorySize + entry.size;                                                       
while (newSize &gt; maxMemorySizeSoft) {                                                               while (newSize &gt; maxMemorySizeSoft) {                                                            
int clearIndex = firstSlotPosition;                                                                    int clearIndex = firstSlotPosition;                                                                 
firstSlotPosition++;                                                                                   firstSlotPosition++;                                                                                
if (firstSlotPosition == tableLength) {                                                                if (firstSlotPosition == tableLength) {                                                             
firstSlotPosition = 0;                                                                                 firstSlotPosition = 0;                                                                              
}                                                                                                      }                                                                                                   
Hpack.HeaderField oldData = headerTable[clearIndex];                                                   Hpack.HeaderField oldData = headerTable[clearIndex];                                                
headerTable[clearIndex] = null;                                                                        headerTable[clearIndex] = null;                                                                     
newSize -= oldData.size;                                                                               newSize -= oldData.size;                                                                            
newTableSlots--;                                                                                       newTableSlots--;                                                                                    
}                                                                                                      }                                                                                                   
this.filledTableSlots = newTableSlots;                                                                 this.filledTableSlots = newTableSlots;                                                              
currentMemorySize = newSize;                                                                           currentMemorySize = newSize;                                                                        
}                                                                                                      }                                                                                                   
