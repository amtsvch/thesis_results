/**                                                                                                    /**                                                                                                 
* Normalize a relative URI path that may have relative values ("/./",                                  * Normalize a relative URI path that may have relative values ("/./",                               
* "/../", and so on ) it it.  &lt;strong&gt;WARNING&lt;/strong&gt; - This method is                    * "/../", and so on ) it it.  &lt;strong&gt;WARNING&lt;/strong&gt; - This method is                 
* useful only for normalizing application-generated paths.  It does not                                * useful only for normalizing application-generated paths.  It does not                             
* try to perform security checks for malicious input.                                                  * try to perform security checks for malicious input.                                               
*                                                                                                      *                                                                                                   
* @param path Relative path to be normalized                                                           * @param path Relative path to be normalized                                                        
* @param replaceBackSlash Should '\\' be replaced with '/'                                             * @param replaceBackSlash Should '\\' be replaced with '/'                                          
*                                                                                                      *                                                                                                   
* @return The normalized path or &lt;code&gt;null&lt;/code&gt; if the path cannot be                   * @return The normalized path or &lt;code&gt;null&lt;/code&gt; if the path cannot be                
*         normalized                                                                                   *         normalized                                                                                
*/                                                                                                     */                                                                                                  
public static String normalize(String path, boolean replaceBackSlash) {                                public static String normalize(String path, boolean replaceBackSlash) {                             
if (path == null) {                                                                                    if (path == null) {                                                                                 
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
// Create a place for the normalized path                                                              // Create a place for the normalized path                                                           
String normalized = path;                                                                              String normalized = path;                                                                           
if (replaceBackSlash && normalized.indexOf('\\') &gt;= 0)                                            | if (replaceBackSlash && normalized.indexOf('\\') &gt;= 0) {                                         
normalized = normalized.replace('\\', '/');                                                            normalized = normalized.replace('\\', '/');                                                         
                                                                                                     | }                                                                                                   
// Add a leading "/" if necessary                                                                      // Add a leading "/" if necessary                                                                   
if (!normalized.startsWith("/"))                                                                     | if (!normalized.startsWith("/")) {                                                                  
normalized = "/" + normalized;                                                                         normalized = "/" + normalized;                                                                      
                                                                                                     | }                                                                                                   
boolean addedTrailingSlash = false;                                                                    boolean addedTrailingSlash = false;                                                                 
if (normalized.endsWith("/.") || normalized.endsWith("/..")) {                                         if (normalized.endsWith("/.") || normalized.endsWith("/..")) {                                      
normalized = normalized + "/";                                                                         normalized = normalized + "/";                                                                      
addedTrailingSlash = true;                                                                             addedTrailingSlash = true;                                                                          
}                                                                                                      }                                                                                                   
// Resolve occurrences of "//" in the normalized path                                                  // Resolve occurrences of "//" in the normalized path                                               
while (true) {                                                                                         while (true) {                                                                                      
int index = normalized.indexOf("//");                                                                  int index = normalized.indexOf("//");                                                               
if (index &lt; 0) {                                                                                    if (index &lt; 0) {                                                                                 
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
normalized = normalized.substring(0, index) + normalized.substring(index + 1);                         normalized = normalized.substring(0, index) + normalized.substring(index + 1);                      
}                                                                                                      }                                                                                                   
// Resolve occurrences of "/./" in the normalized path                                                 // Resolve occurrences of "/./" in the normalized path                                              
while (true) {                                                                                         while (true) {                                                                                      
int index = normalized.indexOf("/./");                                                                 int index = normalized.indexOf("/./");                                                              
if (index &lt; 0) {                                                                                    if (index &lt; 0) {                                                                                 
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
normalized = normalized.substring(0, index) + normalized.substring(index + 2);                         normalized = normalized.substring(0, index) + normalized.substring(index + 2);                      
}                                                                                                      }                                                                                                   
// Resolve occurrences of "/../" in the normalized path                                                // Resolve occurrences of "/../" in the normalized path                                             
while (true) {                                                                                         while (true) {                                                                                      
int index = normalized.indexOf("/../");                                                                int index = normalized.indexOf("/../");                                                             
if (index &lt; 0) {                                                                                    if (index &lt; 0) {                                                                                 
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
if (index == 0) {                                                                                      if (index == 0) {                                                                                   
// Trying to go outside our context                                                                    // Trying to go outside our context                                                                 
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
int index2 = normalized.lastIndexOf('/', index - 1);                                                   int index2 = normalized.lastIndexOf('/', index - 1);                                                
normalized = normalized.substring(0, index2) + normalized.substring(index + 3);                        normalized = normalized.substring(0, index2) + normalized.substring(index + 3);                     
}                                                                                                      }                                                                                                   
if (normalized.length() &gt; 1 && addedTrailingSlash) {                                                if (normalized.length() &gt; 1 && addedTrailingSlash) {                                             
// Remove the trailing '/' we added to that input and output are                                       // Remove the trailing '/' we added to that input and output are                                    
// consistent w.r.t. to the presence of the trailing '/'.                                              // consistent w.r.t. to the presence of the trailing '/'.                                           
normalized = normalized.substring(0, normalized.length() - 1);                                         normalized = normalized.substring(0, normalized.length() - 1);                                      
}                                                                                                      }                                                                                                   
// Return the normalized path that we have completed                                                   // Return the normalized path that we have completed                                                
return normalized;                                                                                     return normalized;                                                                                  
}                                                                                                      }                                                                                                   
