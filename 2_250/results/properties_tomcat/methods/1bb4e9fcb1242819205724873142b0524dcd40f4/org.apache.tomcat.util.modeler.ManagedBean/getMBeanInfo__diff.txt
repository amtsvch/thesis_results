/**                                                                                                    /**                                                                                                 
* Create and return a &lt;code&gt;ModelMBeanInfo&lt;/code&gt; object that                              * Create and return a &lt;code&gt;ModelMBeanInfo&lt;/code&gt; object that                           
* describes this entire managed bean.                                                                  * describes this entire managed bean.                                                               
* @return the MBean info                                                                               * @return the MBean info                                                                            
*/                                                                                                     */                                                                                                  
MBeanInfo getMBeanInfo() {                                                                             MBeanInfo getMBeanInfo() {                                                                          
// Return our cached information (if any)                                                              // Return our cached information (if any)                                                           
mBeanInfoLock.readLock().lock();                                                                       mBeanInfoLock.readLock().lock();                                                                    
try {                                                                                                  try {                                                                                               
if (info != null) {                                                                                    if (info != null) {                                                                                 
return info;                                                                                           return info;                                                                                        
}                                                                                                      }                                                                                                   
} finally {                                                                                            } finally {                                                                                         
mBeanInfoLock.readLock().unlock();                                                                     mBeanInfoLock.readLock().unlock();                                                                  
}                                                                                                      }                                                                                                   
mBeanInfoLock.writeLock().lock();                                                                      mBeanInfoLock.writeLock().lock();                                                                   
try {                                                                                                  try {                                                                                               
if (info == null) {                                                                                    if (info == null) {                                                                                 
// Create subordinate information descriptors as required                                              // Create subordinate information descriptors as required                                           
AttributeInfo[] attrs = getAttributes();                                                               AttributeInfo[] attrs = getAttributes();                                                            
MBeanAttributeInfo[] attributes = new MBeanAttributeInfo[attrs.length];                                MBeanAttributeInfo[] attributes = new MBeanAttributeInfo[attrs.length];                             
for (int i = 0; i &lt; attrs.length; i++) attributes[i] = attrs[i].createAttributeInfo();            | for (int i = 0; i &lt; attrs.length; i++) {                                                         
                                                                                                     | attributes[i] = attrs[i].createAttributeInfo();                                                     
                                                                                                     | }                                                                                                   
OperationInfo[] opers = getOperations();                                                               OperationInfo[] opers = getOperations();                                                            
MBeanOperationInfo[] operations = new MBeanOperationInfo[opers.length];                                MBeanOperationInfo[] operations = new MBeanOperationInfo[opers.length];                             
for (int i = 0; i &lt; opers.length; i++) operations[i] = opers[i].createOperationInfo();            | for (int i = 0; i &lt; opers.length; i++) {                                                         
                                                                                                     | operations[i] = opers[i].createOperationInfo();                                                     
                                                                                                     | }                                                                                                   
NotificationInfo[] notifs = getNotifications();                                                        NotificationInfo[] notifs = getNotifications();                                                     
MBeanNotificationInfo[] notifications = new MBeanNotificationInfo[notifs.length];                      MBeanNotificationInfo[] notifications = new MBeanNotificationInfo[notifs.length];                   
for (int i = 0; i &lt; notifs.length; i++) notifications[i] = notifs[i].createNotificationInfo();    | for (int i = 0; i &lt; notifs.length; i++) {                                                        
                                                                                                     | notifications[i] = notifs[i].createNotificationInfo();                                              
                                                                                                     | }                                                                                                   
// Construct and return a new ModelMBeanInfo object                                                    // Construct and return a new ModelMBeanInfo object                                                 
info = new MBeanInfo(getClassName(), getDescription(), attributes, new MBeanConstructorInfo[] {}, op   info = new MBeanInfo(getClassName(), getDescription(), attributes, new MBeanConstructorInfo[] {}, op
}                                                                                                      }                                                                                                   
return info;                                                                                           return info;                                                                                        
} finally {                                                                                            } finally {                                                                                         
mBeanInfoLock.writeLock().unlock();                                                                    mBeanInfoLock.writeLock().unlock();                                                                 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
