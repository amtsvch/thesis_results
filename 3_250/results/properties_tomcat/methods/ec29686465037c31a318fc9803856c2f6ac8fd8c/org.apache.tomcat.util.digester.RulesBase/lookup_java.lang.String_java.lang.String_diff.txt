// ------------------------------------------------------ Protected Methods
/**
 * Return a List of Rule instances for the specified pattern that also
 * match the specified namespace URI (if any).  If there are no such
 * rules, return <code>null</code>.
 *
 * @param namespaceURI Namespace URI to match, or <code>null</code> to
 *  select matching rules regardless of namespace URI
 * @param pattern Pattern to be matched
 * @return a rules list
 */
protected List<Rule> lookup(String namespaceURI, String pattern) {
    // Optimize when no namespace URI is specified
    List<Rule> list = this.cache.get(pattern);
    if (list == null) {
        return null;
    }
    if ((namespaceURI == null) || (namespaceURI.length() == 0)) {
        return list;
    }
    // Select only Rules that match on the specified namespace URI
    List<Rule> results = new ArrayList<>();
    for (Rule item : list) {
        if ((namespaceURI.equals(item.getNamespaceURI())) || (item.getNamespaceURI() == null)) {
            results.add(item);
        }
    }
    return results;
}