/**                                                                                                    /**                                                                                                 
* Return a User object containing information about the user                                           * Return a User object containing information about the user                                        
* with the specified username, if found in the directory;                                              * with the specified username, if found in the directory;                                           
* otherwise return &lt;code&gt;null&lt;/code&gt;.                                                      * otherwise return &lt;code&gt;null&lt;/code&gt;.                                                   
*                                                                                                      *                                                                                                   
* If the &lt;code&gt;userPassword&lt;/code&gt; configuration attribute is                              * If the &lt;code&gt;userPassword&lt;/code&gt; configuration attribute is                           
* specified, the value of that attribute is retrieved from the                                         * specified, the value of that attribute is retrieved from the                                      
* user's directory entry. If the &lt;code&gt;userRoleName&lt;/code&gt;                                 * user's directory entry. If the &lt;code&gt;userRoleName&lt;/code&gt;                              
* configuration attribute is specified, all values of that                                             * configuration attribute is specified, all values of that                                          
* attribute are retrieved from the directory entry.                                                    * attribute are retrieved from the directory entry.                                                 
*                                                                                                      *                                                                                                   
* @param connection The directory context                                                              * @param connection The directory context                                                           
* @param username Username to be looked up                                                             * @param username Username to be looked up                                                          
* @param credentials User credentials (optional)                                                       * @param credentials User credentials (optional)                                                    
* @param curUserPattern Index into userPatternFormatArray                                              * @param curUserPattern Index into userPatternFormatArray                                           
* @return the User object                                                                              * @return the User object                                                                           
* @exception NamingException if a directory server error occurs                                        * @exception NamingException if a directory server error occurs                                     
*/                                                                                                     */                                                                                                  
protected User getUser(JNDIConnection connection, String username, String credentials, int curUserPa   protected User getUser(JNDIConnection connection, String username, String credentials, int curUserPa
User user = null;                                                                                      User user = null;                                                                                   
// Get attributes to retrieve from user entry                                                          // Get attributes to retrieve from user entry                                                       
List&lt;String&gt; list = new ArrayList&lt;&gt;();                                                     List&lt;String&gt; list = new ArrayList&lt;&gt;();                                                  
if (userPassword != null)                                                                            | if (userPassword != null) {                                                                         
list.add(userPassword);                                                                                list.add(userPassword);                                                                             
if (userRoleName != null)                                                                            | }                                                                                                   
                                                                                                     | if (userRoleName != null) {                                                                         
list.add(userRoleName);                                                                                list.add(userRoleName);                                                                             
                                                                                                     | }                                                                                                   
if (userRoleAttribute != null) {                                                                       if (userRoleAttribute != null) {                                                                    
list.add(userRoleAttribute);                                                                           list.add(userRoleAttribute);                                                                        
}                                                                                                      }                                                                                                   
String[] attrIds = new String[list.size()];                                                            String[] attrIds = new String[list.size()];                                                         
list.toArray(attrIds);                                                                                 list.toArray(attrIds);                                                                              
// Use pattern or search for user entry                                                                // Use pattern or search for user entry                                                             
if (userPatternArray != null && curUserPattern &gt;= 0) {                                              if (userPatternArray != null && curUserPattern &gt;= 0) {                                           
user = getUserByPattern(connection, username, credentials, attrIds, curUserPattern);                   user = getUserByPattern(connection, username, credentials, attrIds, curUserPattern);                
if (containerLog.isDebugEnabled()) {                                                                   if (containerLog.isDebugEnabled()) {                                                                
containerLog.debug("Found user by pattern [" + user + "]");                                            containerLog.debug("Found user by pattern [" + user + "]");                                         
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
boolean thisUserSearchAsUser = isUserSearchAsUser();                                                   boolean thisUserSearchAsUser = isUserSearchAsUser();                                                
try {                                                                                                  try {                                                                                               
if (thisUserSearchAsUser) {                                                                            if (thisUserSearchAsUser) {                                                                         
userCredentialsAdd(connection.context, username, credentials);                                         userCredentialsAdd(connection.context, username, credentials);                                      
}                                                                                                      }                                                                                                   
user = getUserBySearch(connection, username, attrIds);                                                 user = getUserBySearch(connection, username, attrIds);                                              
} finally {                                                                                            } finally {                                                                                         
if (thisUserSearchAsUser) {                                                                            if (thisUserSearchAsUser) {                                                                         
userCredentialsRemove(connection.context);                                                             userCredentialsRemove(connection.context);                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (containerLog.isDebugEnabled()) {                                                                   if (containerLog.isDebugEnabled()) {                                                                
containerLog.debug("Found user by search [" + user + "]");                                             containerLog.debug("Found user by search [" + user + "]");                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (userPassword == null && credentials != null && user != null) {                                     if (userPassword == null && credentials != null && user != null) {                                  
// The password is available. Insert it since it may be required for                                   // The password is available. Insert it since it may be required for                                
// role searches.                                                                                      // role searches.                                                                                   
return new User(user.getUserName(), user.getDN(), credentials, user.getRoles(), user.getUserRoleId()   return new User(user.getUserName(), user.getDN(), credentials, user.getRoles(), user.getUserRoleId()
}                                                                                                      }                                                                                                   
return user;                                                                                           return user;                                                                                        
}                                                                                                      }                                                                                                   
