/**
 * Remove this Session from the active Sessions for this Manager,
 * and from the Store.
 *
 * @param id Session's id to be removed
 */
protected void removeSession(String id) {
    try {
        if (SecurityUtil.isPackageProtectionEnabled()) {
            try {
                AccessController.doPrivileged(new PrivilegedStoreRemove(id));
            } catch (PrivilegedActionException e) {
                log.error(sm.getString("persistentManager.removeError"), e.getException());
            }
        } else {
            store.remove(id);
        }
    } catch (IOException e) {
        log.error(sm.getString("persistentManager.removeError"), e);
    }
}