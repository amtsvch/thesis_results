@Before
public void setup() {
    foo = new Foo();
    beanELResolver = new BeanELResolver();
    elContext = new ELContext() {

        private VariableMapper variableMapper = new VariableMapper() {

            private Map<String, ValueExpression> vars = new HashMap<>();

            @Override
            public ValueExpression setVariable(String arg0, ValueExpression arg1) {
                if (arg1 == null) {
                    return vars.remove(arg0);
                } else {
                    return vars.put(arg0, arg1);
                }
            }

            @Override
            public ValueExpression resolveVariable(String arg0) {
                return vars.get(arg0);
            }
        };

        private FunctionMapper functionMapper = new FunctionMapper() {

            @Override
            public Method resolveFunction(String arg0, String arg1) {
                return null;
            }
        };

        @Override
        public VariableMapper getVariableMapper() {
            return variableMapper;
        }

        @Override
        public FunctionMapper getFunctionMapper() {
            return functionMapper;
        }

        @Override
        public ELResolver getELResolver() {
            return beanELResolver;
        }
    };
}