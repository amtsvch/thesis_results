/**
 * Try to authenticate with the specified username, which
 * matches the digest calculated using the given parameters using the
 * method described in RFC 2617 (which is a superset of RFC 2069).
 *
 * @param username Username of the Principal to look up
 * @param clientDigest Digest which has been submitted by the client
 * @param nonce Unique (or supposedly unique) token which has been used
 * for this request
 * @param nc the nonce counter
 * @param cnonce the client chosen nonce
 * @param qop the "quality of protection" (<code>nc</code> and <code>cnonce</code>
 *        will only be used, if <code>qop</code> is not <code>null</code>).
 * @param realm Realm name
 * @param md5a2 Second MD5 digest used to calculate the digest :
 * MD5(Method + ":" + uri)
 * @return the associated principal, or <code>null</code> if there is none.
 */
@Override
public Principal authenticate(String username, String clientDigest, String nonce, String nc, String cnonce, String qop, String realm, String md5a2) {
    // In digest auth, digests are always lower case
    String md5a1 = getDigest(username, realm);
    if (md5a1 == null)
        return null;
    md5a1 = md5a1.toLowerCase(Locale.ENGLISH);
    String serverDigestValue;
    if (qop == null) {
        serverDigestValue = md5a1 + ":" + nonce + ":" + md5a2;
    } else {
        serverDigestValue = md5a1 + ":" + nonce + ":" + nc + ":" + cnonce + ":" + qop + ":" + md5a2;
    }
    byte[] valueBytes = null;
    try {
        valueBytes = serverDigestValue.getBytes(getDigestCharset());
    } catch (UnsupportedEncodingException uee) {
        throw new IllegalArgumentException(sm.getString("realmBase.invalidDigestEncoding", getDigestEncoding()), uee);
    }
    String serverDigest = MD5Encoder.encode(ConcurrentMessageDigest.digestMD5(valueBytes));
    if (log.isDebugEnabled()) {
        log.debug("Digest : " + clientDigest + " Username:" + username + " ClientDigest:" + clientDigest + " nonce:" + nonce + " nc:" + nc + " cnonce:" + cnonce + " qop:" + qop + " realm:" + realm + "md5a2:" + md5a2 + " Server digest:" + serverDigest);
    }
    if (serverDigest.equals(clientDigest)) {
        return getPrincipal(username);
    }
    return null;
}