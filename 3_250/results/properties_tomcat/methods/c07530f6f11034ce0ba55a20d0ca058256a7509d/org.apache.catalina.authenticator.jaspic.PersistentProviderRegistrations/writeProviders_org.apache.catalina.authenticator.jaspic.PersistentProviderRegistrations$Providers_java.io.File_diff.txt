static void writeProviders(Providers providers, File configFile) {
    File configFileOld = new File(configFile.getAbsolutePath() + ".old");
    File configFileNew = new File(configFile.getAbsolutePath() + ".new");
    // Remove left over temporary files if present
    if (configFileOld.exists()) {
        if (configFileOld.delete()) {
            throw new SecurityException(sm.getString("persistentProviderRegistrations.existsDeleteFail", configFileOld.getAbsolutePath()));
        }
    }
    if (configFileNew.exists()) {
        if (configFileNew.delete()) {
            throw new SecurityException(sm.getString("persistentProviderRegistrations.existsDeleteFail", configFileNew.getAbsolutePath()));
        }
    }
    // Write out the providers to the temporary new file
    try (OutputStream fos = new FileOutputStream(configFileNew);
        Writer writer = new OutputStreamWriter(fos, StandardCharsets.UTF_8)) {
        writer.write("<?xml version='1.0' encoding='utf-8'?>\n" + "<jaspic-providers\n" + "    xmlns=\"http://tomcat.apache.org/xml\"\n" + "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n" + "    xsi:schemaLocation=\"http://tomcat.apache.org/xml jaspic-providers.xsd\"\n" + "    version=\"1.0\">\n");
        for (Provider provider : providers.providers) {
            writer.write("  <provider");
            writeOptional("className", provider.getClassName(), writer);
            writeOptional("layer", provider.getLayer(), writer);
            writeOptional("appContext", provider.getAppContext(), writer);
            writeOptional("description", provider.getDescription(), writer);
            writer.write(">\n");
            for (Entry<String, String> entry : provider.getProperties().entrySet()) {
                writer.write("    <property name=\"");
                writer.write(entry.getKey());
                writer.write("\" value=\"");
                writer.write(entry.getValue());
                writer.write("\"/>\n");
            }
            writer.write("  </provider>\n");
        }
        writer.write("</jaspic-providers>\n");
    } catch (IOException e) {
        if (!configFileNew.delete()) {
            Log log = LogFactory.getLog(PersistentProviderRegistrations.class);
            log.warn(sm.getString("persistentProviderRegistrations.deleteFail", configFileNew.getAbsolutePath()));
        }
        throw new SecurityException(e);
    }
    // Move the current file out of the way
    if (configFile.isFile()) {
        if (!configFile.renameTo(configFileOld)) {
            throw new SecurityException(sm.getString("persistentProviderRegistrations.moveFail", configFile.getAbsolutePath(), configFileOld.getAbsolutePath()));
        }
    }
    // Move the new file into place
    if (!configFileNew.renameTo(configFile)) {
        throw new SecurityException(sm.getString("persistentProviderRegistrations.moveFail", configFileNew.getAbsolutePath(), configFile.getAbsolutePath()));
    }
    // Remove the old file
    if (configFileOld.exists() && !configFileOld.delete()) {
        Log log = LogFactory.getLog(PersistentProviderRegistrations.class);
        log.warn(sm.getString("persistentProviderRegistrations.deleteFail", configFileOld.getAbsolutePath()));
    }
}