/**                                                                                                    /**                                                                                                 
* Given an LDAP search string, returns the string with certain characters                              * Given an LDAP search string, returns the string with certain characters                           
* escaped according to RFC 2254 guidelines.                                                            * escaped according to RFC 2254 guidelines.                                                         
* The character mapping is as follows:                                                                 * The character mapping is as follows:                                                              
*     char -&gt;  Replacement                                                                          *     char -&gt;  Replacement                                                                       
*    ---------------------------                                                                       *    ---------------------------                                                                    
*     *  -&gt; \2a                                                                                     *     *  -&gt; \2a                                                                                  
*     (  -&gt; \28                                                                                     *     (  -&gt; \28                                                                                  
*     )  -&gt; \29                                                                                     *     )  -&gt; \29                                                                                  
*     \  -&gt; \5c                                                                                     *     \  -&gt; \5c                                                                                  
*     \0 -&gt; \00                                                                                     *     \0 -&gt; \00                                                                                  
*                                                                                                      *                                                                                                   
* @param inString string to escape according to RFC 2254 guidelines                                    * @param inString string to escape according to RFC 2254 guidelines                                 
*                                                                                                      *                                                                                                   
* @return String the escaped/encoded result                                                            * @return String the escaped/encoded result                                                         
*/                                                                                                     */                                                                                                  
protected String doFilterEscaping(String inString) {                                                   protected String doFilterEscaping(String inString) {                                                
                                                                                                     | if (inString == null) {                                                                             
                                                                                                     | return null;                                                                                        
                                                                                                     | }                                                                                                   
StringBuilder buf = new StringBuilder(inString.length());                                              StringBuilder buf = new StringBuilder(inString.length());                                           
for (int i = 0; i &lt; inString.length(); i++) {                                                       for (int i = 0; i &lt; inString.length(); i++) {                                                    
char c = inString.charAt(i);                                                                           char c = inString.charAt(i);                                                                        
switch(c) {                                                                                            switch(c) {                                                                                         
case '\\':                                                                                             case '\\':                                                                                          
buf.append("\\5c");                                                                                    buf.append("\\5c");                                                                                 
break;                                                                                                 break;                                                                                              
case '*':                                                                                              case '*':                                                                                           
buf.append("\\2a");                                                                                    buf.append("\\2a");                                                                                 
break;                                                                                                 break;                                                                                              
case '(':                                                                                              case '(':                                                                                           
buf.append("\\28");                                                                                    buf.append("\\28");                                                                                 
break;                                                                                                 break;                                                                                              
case ')':                                                                                              case ')':                                                                                           
buf.append("\\29");                                                                                    buf.append("\\29");                                                                                 
break;                                                                                                 break;                                                                                              
case '\0':                                                                                             case '\0':                                                                                          
buf.append("\\00");                                                                                    buf.append("\\00");                                                                                 
break;                                                                                                 break;                                                                                              
default:                                                                                               default:                                                                                            
buf.append(c);                                                                                         buf.append(c);                                                                                      
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
return buf.toString();                                                                                 return buf.toString();                                                                              
}                                                                                                      }                                                                                                   
