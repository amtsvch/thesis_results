// -------------------------------------------------------- Private Methods
/**
 * Wrap the incoming value with double quotes (") and escape any double
 * quotes appearing in the value using two double quotes ("").
 *
 *  @param value - The value to wrap
 *  @return '-' if null. Otherwise, toString() will
 *     be called on the object and the value will be wrapped
 *     in quotes and any quotes will be escaped with 2
 *     sets of quotes.
 */
static String wrap(Object value) {
    String svalue;
    // Does the value contain a " ? If so must encode it
    if (value == null || "-".equals(value)) {
        return "-";
    }
    try {
        svalue = value.toString();
    } catch (Throwable e) {
        ExceptionUtils.handleThrowable(e);
        /* Log error */
        return "-";
    }
    /* Wrap all values in double quotes. */
    StringBuilder buffer = new StringBuilder(svalue.length() + 2);
    buffer.append('\"');
    int i = 0;
    while (i < svalue.length()) {
        int j = svalue.indexOf('\"', i);
        if (j == -1) {
            buffer.append(svalue.substring(i));
            i = svalue.length();
        } else {
            buffer.append(svalue.substring(i, j + 1));
            buffer.append('"');
            i = j + 1;
        }
    }
    buffer.append('\"');
    return buffer.toString();
}