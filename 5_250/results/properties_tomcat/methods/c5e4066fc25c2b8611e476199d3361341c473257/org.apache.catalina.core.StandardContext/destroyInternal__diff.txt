/**
 * Destroy needs to clean up the context completely.
 *
 * The problem is that undoing all the config in start() and restoring
 * a 'fresh' state is impossible. After stop()/destroy()/init()/start()
 * we should have the same state as if a fresh start was done - i.e
 * read modified web.xml, etc. This can only be done by completely
 * removing the context object and remapping a new one, or by cleaning
 * up everything.
 */
@Override
protected void destroyInternal() throws LifecycleException {
    // If in state NEW when destroy is called, the object name will never
    // have been set so the notification can't be created
    if (getObjectName() != null) {
        // Send j2ee.object.deleted notification
        Notification notification = new Notification("j2ee.object.deleted", this.getObjectName(), sequenceNumber.getAndIncrement());
        broadcaster.sendNotification(notification);
    }
    if (namingResources != null) {
        namingResources.destroy();
    }
    Loader loader = getLoader();
    if (loader instanceof Lifecycle) {
        ((Lifecycle) loader).destroy();
    }
    Manager manager = getManager();
    if (manager instanceof Lifecycle) {
        ((Lifecycle) manager).destroy();
    }
    if (resources != null) {
        resources.destroy();
    }
    super.destroyInternal();
}