/**
 * URL encodes the provided path using the given character set.
 *
 * @param path      The path to encode
 * @param charset   The character set to use to convert the path to bytes
 *
 * @return The encoded path
 */
public String encode(String path, Charset charset) {
    int maxBytesPerChar = 10;
    StringBuilder rewrittenPath = new StringBuilder(path.length());
    ByteArrayOutputStream buf = new ByteArrayOutputStream(maxBytesPerChar);
    OutputStreamWriter writer = new OutputStreamWriter(buf, charset);
    for (int i = 0; i < path.length(); i++) {
        int c = path.charAt(i);
        if (safeCharacters.get(c)) {
            rewrittenPath.append((char) c);
        } else if (encodeSpaceAsPlus && c == ' ') {
            rewrittenPath.append('+');
        } else {
            // convert to external encoding before hex conversion
            try {
                writer.write((char) c);
                writer.flush();
            } catch (IOException e) {
                buf.reset();
                continue;
            }
            byte[] ba = buf.toByteArray();
            for (byte toEncode : ba) {
                // Converting each byte in the buffer
                rewrittenPath.append('%');
                int low = toEncode & 0x0f;
                int high = (toEncode & 0xf0) >> 4;
                rewrittenPath.append(hexadecimal[high]);
                rewrittenPath.append(hexadecimal[low]);
            }
            buf.reset();
        }
    }
    return rewrittenPath.toString();
}