Stream(Integer identifier, Http2UpgradeHandler handler, Request coyoteRequest) {                       Stream(Integer identifier, Http2UpgradeHandler handler, Request coyoteRequest) {                    
super(identifier);                                                                                     super(identifier);                                                                                  
this.handler = handler;                                                                                this.handler = handler;                                                                             
handler.addChild(this);                                                                                handler.addChild(this);                                                                             
setWindowSize(handler.getRemoteSettings().getInitialWindowSize());                                     setWindowSize(handler.getRemoteSettings().getInitialWindowSize());                                  
state = new StreamStateMachine(this);                                                                | state = new StreamStateMachine(getConnectionId(), getIdAsString());                                 
if (coyoteRequest == null) {                                                                           if (coyoteRequest == null) {                                                                        
// HTTP/2 new request                                                                                  // HTTP/2 new request                                                                               
this.coyoteRequest = new Request();                                                                    this.coyoteRequest = new Request();                                                                 
this.inputBuffer = new StreamInputBuffer();                                                            this.inputBuffer = new StreamInputBuffer();                                                         
this.coyoteRequest.setInputBuffer(inputBuffer);                                                        this.coyoteRequest.setInputBuffer(inputBuffer);                                                     
} else {                                                                                               } else {                                                                                            
// HTTP/2 Push or HTTP/1.1 upgrade                                                                     // HTTP/2 Push or HTTP/1.1 upgrade                                                                  
this.coyoteRequest = coyoteRequest;                                                                    this.coyoteRequest = coyoteRequest;                                                                 
this.inputBuffer = null;                                                                               this.inputBuffer = null;                                                                            
// Headers have been read by this point                                                                // Headers have been read by this point                                                             
state.receivedStartOfHeaders();                                                                        state.receivedStartOfHeaders();                                                                     
if (HTTP_UPGRADE_STREAM.equals(identifier)) {                                                          if (HTTP_UPGRADE_STREAM.equals(identifier)) {                                                       
// Populate coyoteRequest from headers (HTTP/1.1 only)                                                 // Populate coyoteRequest from headers (HTTP/1.1 only)                                              
try {                                                                                                  try {                                                                                               
prepareRequest();                                                                                      prepareRequest();                                                                                   
} catch (IllegalArgumentException iae) {                                                               } catch (IllegalArgumentException iae) {                                                            
// Something in the headers is invalid                                                                 // Something in the headers is invalid                                                              
// Set correct return status                                                                           // Set correct return status                                                                        
coyoteResponse.setStatus(400);                                                                         coyoteResponse.setStatus(400);                                                                      
// Set error flag. This triggers error processing rather than                                          // Set error flag. This triggers error processing rather than                                       
// the normal mapping                                                                                  // the normal mapping                                                                               
coyoteResponse.setError();                                                                             coyoteResponse.setError();                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// TODO Assuming the body has been read at this point is not valid                                     // TODO Assuming the body has been read at this point is not valid                                  
state.receivedEndOfStream();                                                                           state.receivedEndOfStream();                                                                        
}                                                                                                      }                                                                                                   
this.coyoteRequest.setSendfile(handler.hasAsyncIO() && handler.getProtocol().getUseSendfile());        this.coyoteRequest.setSendfile(handler.hasAsyncIO() && handler.getProtocol().getUseSendfile());     
this.coyoteResponse.setOutputBuffer(http2OutputBuffer);                                                this.coyoteResponse.setOutputBuffer(http2OutputBuffer);                                             
this.coyoteRequest.setResponse(coyoteResponse);                                                        this.coyoteRequest.setResponse(coyoteResponse);                                                     
this.coyoteRequest.protocol().setString("HTTP/2.0");                                                   this.coyoteRequest.protocol().setString("HTTP/2.0");                                                
if (this.coyoteRequest.getStartTimeNanos() &lt; 0) {                                                   if (this.coyoteRequest.getStartTimeNanos() &lt; 0) {                                                
this.coyoteRequest.setStartTimeNanos(System.nanoTime());                                               this.coyoteRequest.setStartTimeNanos(System.nanoTime());                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
