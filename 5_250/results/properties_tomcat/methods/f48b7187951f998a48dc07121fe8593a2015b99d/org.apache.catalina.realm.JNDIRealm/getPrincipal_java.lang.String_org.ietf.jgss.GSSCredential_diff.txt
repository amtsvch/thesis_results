protected Principal getPrincipal(String username, GSSCredential gssCredential) {                       protected Principal getPrincipal(String username, GSSCredential gssCredential) {                    
JNDIConnection connection = null;                                                                      JNDIConnection connection = null;                                                                   
Principal principal = null;                                                                            Principal principal = null;                                                                         
try {                                                                                                  try {                                                                                               
// Ensure that we have a directory context available                                                   // Ensure that we have a directory context available                                                
connection = get();                                                                                    connection = get();                                                                                 
// Occasionally the directory context will timeout.  Try one more                                      // Occasionally the directory context will timeout.  Try one more                                   
// time before giving up.                                                                              // time before giving up.                                                                           
try {                                                                                                  try {                                                                                               
// Authenticate the specified username if possible                                                     // Authenticate the specified username if possible                                                  
principal = getPrincipal(connection, username, gssCredential);                                         principal = getPrincipal(connection, username, gssCredential);                                      
} catch (CommunicationException | ServiceUnavailableException e) {                                     } catch (CommunicationException | ServiceUnavailableException e) {                                  
// log the exception so we know it's there.                                                            // log the exception so we know it's there.                                                         
containerLog.info(sm.getString("jndiRealm.exception.retry"), e);                                       containerLog.info(sm.getString("jndiRealm.exception.retry"), e);                                    
// close the connection so we know it will be reopened.                                                // close the connection so we know it will be reopened.                                             
close(connection);                                                                                     close(connection);                                                                                  
                                                                                                     | closePooledConnections();                                                                           
// open a new directory context.                                                                       // open a new directory context.                                                                    
connection = get();                                                                                    connection = get();                                                                                 
// Try the authentication again.                                                                       // Try the authentication again.                                                                    
principal = getPrincipal(connection, username, gssCredential);                                         principal = getPrincipal(connection, username, gssCredential);                                      
}                                                                                                      }                                                                                                   
// Release this context                                                                                // Release this context                                                                             
release(connection);                                                                                   release(connection);                                                                                
// Return the authenticated Principal (if any)                                                         // Return the authenticated Principal (if any)                                                      
return principal;                                                                                      return principal;                                                                                   
} catch (NamingException e) {                                                                          } catch (NamingException e) {                                                                       
// Log the problem for posterity                                                                       // Log the problem for posterity                                                                    
containerLog.error(sm.getString("jndiRealm.exception"), e);                                            containerLog.error(sm.getString("jndiRealm.exception"), e);                                         
// Return "not authenticated" for this request                                                         // Return "not authenticated" for this request                                                      
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
