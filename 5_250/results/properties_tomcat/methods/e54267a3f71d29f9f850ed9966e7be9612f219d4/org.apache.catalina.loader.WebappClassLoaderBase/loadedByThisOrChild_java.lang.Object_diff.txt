/**
 * @param o object to test, may be null
 * @return <code>true</code> if o has been loaded by the current classloader
 * or one of its descendants.
 */
private boolean loadedByThisOrChild(Object o) {
    if (o == null) {
        return false;
    }
    Class<?> clazz;
    if (o instanceof Class) {
        clazz = (Class<?>) o;
    } else {
        clazz = o.getClass();
    }
    ClassLoader cl = clazz.getClassLoader();
    while (cl != null) {
        if (cl == this) {
            return true;
        }
        cl = cl.getParent();
    }
    if (o instanceof Collection<?>) {
        Iterator<?> iter = ((Collection<?>) o).iterator();
        try {
            while (iter.hasNext()) {
                Object entry = iter.next();
                if (loadedByThisOrChild(entry)) {
                    return true;
                }
            }
        } catch (ConcurrentModificationException e) {
            log.warn(sm.getString("webappClassLoader.loadedByThisOrChildFail", clazz.getName(), getContextName()), e);
        }
    }
    return false;
}