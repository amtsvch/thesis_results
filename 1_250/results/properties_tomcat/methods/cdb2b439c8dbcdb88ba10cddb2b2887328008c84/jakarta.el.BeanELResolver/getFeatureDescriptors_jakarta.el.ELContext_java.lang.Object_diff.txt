                                                                                                     | @Deprecated(forRemoval = true, since = "EL 5.0")                                                    
@Override                                                                                              @Override                                                                                           
public Iterator&lt;FeatureDescriptor&gt; getFeatureDescriptors(ELContext context, Object base) {       public Iterator&lt;FeatureDescriptor&gt; getFeatureDescriptors(ELContext context, Object base) {    
if (base == null) {                                                                                    if (base == null) {                                                                                 
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
try {                                                                                                  try {                                                                                               
BeanInfo info = Introspector.getBeanInfo(base.getClass());                                             BeanInfo info = Introspector.getBeanInfo(base.getClass());                                          
PropertyDescriptor[] pds = info.getPropertyDescriptors();                                              PropertyDescriptor[] pds = info.getPropertyDescriptors();                                           
for (PropertyDescriptor pd : pds) {                                                                    for (PropertyDescriptor pd : pds) {                                                                 
pd.setValue(RESOLVABLE_AT_DESIGN_TIME, Boolean.TRUE);                                                  pd.setValue(RESOLVABLE_AT_DESIGN_TIME, Boolean.TRUE);                                               
pd.setValue(TYPE, pd.getPropertyType());                                                               pd.setValue(TYPE, pd.getPropertyType());                                                            
}                                                                                                      }                                                                                                   
return Arrays.asList((FeatureDescriptor[]) pds).iterator();                                            return Arrays.asList((FeatureDescriptor[]) pds).iterator();                                         
} catch (IntrospectionException e) {                                                                   } catch (IntrospectionException e) {                                                                
//                                                                                                     //                                                                                                  
}                                                                                                      }                                                                                                   
return null;                                                                                           return null;                                                                                        
}                                                                                                      }                                                                                                   
