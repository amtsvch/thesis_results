public BeanProperties(Class&lt;?&gt; type) throws ELException {                                        public BeanProperties(Class&lt;?&gt; type) throws ELException {                                     
this.type = type;                                                                                      this.type = type;                                                                                   
this.properties = new HashMap&lt;&gt;();                                                               this.properties = new HashMap&lt;&gt;();                                                            
try {                                                                                                  try {                                                                                               
BeanInfo info = Introspector.getBeanInfo(this.type);                                                   BeanInfo info = Introspector.getBeanInfo(this.type);                                                
PropertyDescriptor[] pds = info.getPropertyDescriptors();                                              PropertyDescriptor[] pds = info.getPropertyDescriptors();                                           
for (PropertyDescriptor pd : pds) {                                                                    for (PropertyDescriptor pd : pds) {                                                                 
this.properties.put(pd.getName(), new BeanProperty(type, pd));                                         this.properties.put(pd.getName(), new BeanProperty(type, pd));                                      
}                                                                                                      }                                                                                                   
if (System.getSecurityManager() != null) {                                                           | /**                                                                                                 
// When running with SecurityManager, some classes may be                                            | * Populating from any interfaces solves two distinct problems:                                      
// not accessible, but have accessible interfaces.                                                   | * 1. When running under a security manager, classes may be                                          
                                                                                                     | *    unaccessible but have accessible interfaces.                                                   
                                                                                                     | * 2. It causes default methods to be included.                                                      
                                                                                                     | */                                                                                                  
populateFromInterfaces(type);                                                                          populateFromInterfaces(type);                                                                       
}                                                                                                    |                                                                                                     
} catch (IntrospectionException ie) {                                                                  } catch (IntrospectionException ie) {                                                               
throw new ELException(ie);                                                                             throw new ELException(ie);                                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
