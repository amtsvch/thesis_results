/**
 * Sets the value for the given cookie attribute. When a value is set via
 * this method, the value returned by the attribute specific getter (if any)
 * must be consistent with the value set via this method.
 *
 * @param name  Name of attribute to set
 * @param value Value of attribute
 *
 * @throws IllegalArgumentException If the attribute name is null or
 *         contains any characters not permitted for use in Cookie names.
 *
 * @throws NumberFormatException If the attribute is known to be numerical
 *         but the provided value cannot be parsed to a number.
 *
 * @since Servlet 6.0
 */
public void setAttribute(String name, String value) {
    if (name == null) {
        throw new IllegalArgumentException(LSTRINGS.getString("cookie.attribute.invalidName.null"));
    }
    if (!validation.isToken(name)) {
        String msg = LSTRINGS.getString("cookie.attribute.invalidName.notToken");
        throw new IllegalArgumentException(MessageFormat.format(msg, name));
    }
    if (name.equalsIgnoreCase(MAX_AGE)) {
        if (value == null) {
            setAttributeInternal(MAX_AGE, null);
        } else {
            // Integer.parseInt throws NFE if required
            setMaxAge(Integer.parseInt(value));
        }
    } else {
        setAttributeInternal(name, value);
    }
}