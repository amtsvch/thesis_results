/**                                                                                                    /**                                                                                                 
* Generate a web.xml in String form that matches the representation stored                             * Generate a web.xml in String form that matches the representation stored                          
* in this object.                                                                                      * in this object.                                                                                   
*                                                                                                      *                                                                                                   
* @return The complete contents of web.xml as a String                                                 * @return The complete contents of web.xml as a String                                              
*/                                                                                                     */                                                                                                  
public String toXml() {                                                                                public String toXml() {                                                                             
StringBuilder sb = new StringBuilder(2048);                                                            StringBuilder sb = new StringBuilder(2048);                                                         
// TODO - Various, icon, description etc elements are skipped - mainly                                 // TODO - Various, icon, description etc elements are skipped - mainly                              
// because they are ignored when web.xml is parsed - see above                                         // because they are ignored when web.xml is parsed - see above                                      
// NOTE - Elements need to be written in the order defined in the 2.3                                  // NOTE - Elements need to be written in the order defined in the 2.3                               
// DTD else validation of the merged web.xml will fail                                                 // DTD else validation of the merged web.xml will fail                                              
// NOTE - Some elements need to be skipped based on the version of the                                 // NOTE - Some elements need to be skipped based on the version of the                              
// specification being used. Version is validated and starts at                                        // specification being used. Version is validated and starts at                                     
// 2.2. The version tests used in this method take advantage of                                        // 2.2. The version tests used in this method take advantage of                                     
// this.                                                                                               // this.                                                                                            
// Declaration                                                                                         // Declaration                                                                                      
sb.append("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n");                                       sb.append("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n");                                    
// Root element                                                                                        // Root element                                                                                     
if (publicId != null) {                                                                                if (publicId != null) {                                                                             
sb.append("&lt;!DOCTYPE web-app PUBLIC\n");                                                            sb.append("&lt;!DOCTYPE web-app PUBLIC\n");                                                         
sb.append("  \"");                                                                                     sb.append("  \"");                                                                                  
sb.append(publicId);                                                                                   sb.append(publicId);                                                                                
sb.append("\"\n");                                                                                     sb.append("\"\n");                                                                                  
sb.append("  \"");                                                                                     sb.append("  \"");                                                                                  
if (XmlIdentifiers.WEB_22_PUBLIC.equals(publicId)) {                                                   if (XmlIdentifiers.WEB_22_PUBLIC.equals(publicId)) {                                                
sb.append(XmlIdentifiers.WEB_22_SYSTEM);                                                               sb.append(XmlIdentifiers.WEB_22_SYSTEM);                                                            
} else {                                                                                               } else {                                                                                            
sb.append(XmlIdentifiers.WEB_23_SYSTEM);                                                               sb.append(XmlIdentifiers.WEB_23_SYSTEM);                                                            
}                                                                                                      }                                                                                                   
sb.append("\"&gt;\n");                                                                                 sb.append("\"&gt;\n");                                                                              
sb.append("&lt;web-app&gt;");                                                                          sb.append("&lt;web-app&gt;");                                                                       
} else {                                                                                               } else {                                                                                            
String javaeeNamespace = null;                                                                         String javaeeNamespace = null;                                                                      
String webXmlSchemaLocation = null;                                                                    String webXmlSchemaLocation = null;                                                                 
String version = getVersion();                                                                         String version = getVersion();                                                                      
if ("2.4".equals(version)) {                                                                           if ("2.4".equals(version)) {                                                                        
javaeeNamespace = XmlIdentifiers.JAVAEE_1_4_NS;                                                        javaeeNamespace = XmlIdentifiers.JAVAEE_1_4_NS;                                                     
webXmlSchemaLocation = XmlIdentifiers.WEB_24_XSD;                                                      webXmlSchemaLocation = XmlIdentifiers.WEB_24_XSD;                                                   
} else if ("2.5".equals(version)) {                                                                    } else if ("2.5".equals(version)) {                                                                 
javaeeNamespace = XmlIdentifiers.JAVAEE_5_NS;                                                          javaeeNamespace = XmlIdentifiers.JAVAEE_5_NS;                                                       
webXmlSchemaLocation = XmlIdentifiers.WEB_25_XSD;                                                      webXmlSchemaLocation = XmlIdentifiers.WEB_25_XSD;                                                   
} else if ("3.0".equals(version)) {                                                                    } else if ("3.0".equals(version)) {                                                                 
javaeeNamespace = XmlIdentifiers.JAVAEE_6_NS;                                                          javaeeNamespace = XmlIdentifiers.JAVAEE_6_NS;                                                       
webXmlSchemaLocation = XmlIdentifiers.WEB_30_XSD;                                                      webXmlSchemaLocation = XmlIdentifiers.WEB_30_XSD;                                                   
} else if ("3.1".equals(version)) {                                                                    } else if ("3.1".equals(version)) {                                                                 
javaeeNamespace = XmlIdentifiers.JAVAEE_7_NS;                                                          javaeeNamespace = XmlIdentifiers.JAVAEE_7_NS;                                                       
webXmlSchemaLocation = XmlIdentifiers.WEB_31_XSD;                                                      webXmlSchemaLocation = XmlIdentifiers.WEB_31_XSD;                                                   
} else if ("4.0".equals(version)) {                                                                    } else if ("4.0".equals(version)) {                                                                 
javaeeNamespace = XmlIdentifiers.JAVAEE_8_NS;                                                          javaeeNamespace = XmlIdentifiers.JAVAEE_8_NS;                                                       
webXmlSchemaLocation = XmlIdentifiers.WEB_40_XSD;                                                      webXmlSchemaLocation = XmlIdentifiers.WEB_40_XSD;                                                   
                                                                                                     | } else if ("5.0".equals(version)) {                                                                 
                                                                                                     | javaeeNamespace = XmlIdentifiers.JAKARTAEE_9_NS;                                                    
                                                                                                     | webXmlSchemaLocation = XmlIdentifiers.WEB_50_XSD;                                                   
}                                                                                                      }                                                                                                   
sb.append("&lt;web-app xmlns=\"");                                                                     sb.append("&lt;web-app xmlns=\"");                                                                  
sb.append(javaeeNamespace);                                                                            sb.append(javaeeNamespace);                                                                         
sb.append("\"\n");                                                                                     sb.append("\"\n");                                                                                  
sb.append("         xmlns:xsi=");                                                                      sb.append("         xmlns:xsi=");                                                                   
sb.append("\"http://www.w3.org/2001/XMLSchema-instance\"\n");                                          sb.append("\"http://www.w3.org/2001/XMLSchema-instance\"\n");                                       
sb.append("         xsi:schemaLocation=\"");                                                           sb.append("         xsi:schemaLocation=\"");                                                        
sb.append(javaeeNamespace);                                                                            sb.append(javaeeNamespace);                                                                         
sb.append(' ');                                                                                        sb.append(' ');                                                                                     
sb.append(webXmlSchemaLocation);                                                                       sb.append(webXmlSchemaLocation);                                                                    
sb.append("\"\n");                                                                                     sb.append("\"\n");                                                                                  
sb.append("         version=\"");                                                                      sb.append("         version=\"");                                                                   
sb.append(getVersion());                                                                               sb.append(getVersion());                                                                            
sb.append("\"");                                                                                       sb.append("\"");                                                                                    
if ("2.4".equals(version)) {                                                                           if ("2.4".equals(version)) {                                                                        
sb.append("&gt;\n\n");                                                                                 sb.append("&gt;\n\n");                                                                              
} else {                                                                                               } else {                                                                                            
sb.append("\n         metadata-complete=\"true\"&gt;\n\n");                                            sb.append("\n         metadata-complete=\"true\"&gt;\n\n");                                         
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT2, "display-name", displayName);                                               appendElement(sb, INDENT2, "display-name", displayName);                                            
if (isDistributable()) {                                                                               if (isDistributable()) {                                                                            
sb.append("  &lt;distributable/&gt;\n\n");                                                             sb.append("  &lt;distributable/&gt;\n\n");                                                          
}                                                                                                      }                                                                                                   
for (Map.Entry&lt;String, String&gt; entry : contextParams.entrySet()) {                               for (Map.Entry&lt;String, String&gt; entry : contextParams.entrySet()) {                            
sb.append("  &lt;context-param&gt;\n");                                                                sb.append("  &lt;context-param&gt;\n");                                                             
appendElement(sb, INDENT4, "param-name", entry.getKey());                                              appendElement(sb, INDENT4, "param-name", entry.getKey());                                           
appendElement(sb, INDENT4, "param-value", entry.getValue());                                           appendElement(sb, INDENT4, "param-value", entry.getValue());                                        
sb.append("  &lt;/context-param&gt;\n");                                                               sb.append("  &lt;/context-param&gt;\n");                                                            
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
// Filters were introduced in Servlet 2.3                                                              // Filters were introduced in Servlet 2.3                                                           
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
for (Map.Entry&lt;String, FilterDef&gt; entry : filters.entrySet()) {                                  for (Map.Entry&lt;String, FilterDef&gt; entry : filters.entrySet()) {                               
FilterDef filterDef = entry.getValue();                                                                FilterDef filterDef = entry.getValue();                                                             
sb.append("  &lt;filter&gt;\n");                                                                       sb.append("  &lt;filter&gt;\n");                                                                    
appendElement(sb, INDENT4, "description", filterDef.getDescription());                                 appendElement(sb, INDENT4, "description", filterDef.getDescription());                              
appendElement(sb, INDENT4, "display-name", filterDef.getDisplayName());                                appendElement(sb, INDENT4, "display-name", filterDef.getDisplayName());                             
appendElement(sb, INDENT4, "filter-name", filterDef.getFilterName());                                  appendElement(sb, INDENT4, "filter-name", filterDef.getFilterName());                               
appendElement(sb, INDENT4, "filter-class", filterDef.getFilterClass());                                appendElement(sb, INDENT4, "filter-class", filterDef.getFilterClass());                             
// Async support was introduced for Servlet 3.0 onwards                                                // Async support was introduced for Servlet 3.0 onwards                                             
if (getMajorVersion() != 2) {                                                                          if (getMajorVersion() != 2) {                                                                       
appendElement(sb, INDENT4, "async-supported", filterDef.getAsyncSupported());                          appendElement(sb, INDENT4, "async-supported", filterDef.getAsyncSupported());                       
}                                                                                                      }                                                                                                   
for (Map.Entry&lt;String, String&gt; param : filterDef.getParameterMap().entrySet()) {                 for (Map.Entry&lt;String, String&gt; param : filterDef.getParameterMap().entrySet()) {              
sb.append("    &lt;init-param&gt;\n");                                                                 sb.append("    &lt;init-param&gt;\n");                                                              
appendElement(sb, INDENT6, "param-name", param.getKey());                                              appendElement(sb, INDENT6, "param-name", param.getKey());                                           
appendElement(sb, INDENT6, "param-value", param.getValue());                                           appendElement(sb, INDENT6, "param-value", param.getValue());                                        
sb.append("    &lt;/init-param&gt;\n");                                                                sb.append("    &lt;/init-param&gt;\n");                                                             
}                                                                                                      }                                                                                                   
sb.append("  &lt;/filter&gt;\n");                                                                      sb.append("  &lt;/filter&gt;\n");                                                                   
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
for (FilterMap filterMap : filterMaps) {                                                               for (FilterMap filterMap : filterMaps) {                                                            
sb.append("  &lt;filter-mapping&gt;\n");                                                               sb.append("  &lt;filter-mapping&gt;\n");                                                            
appendElement(sb, INDENT4, "filter-name", filterMap.getFilterName());                                  appendElement(sb, INDENT4, "filter-name", filterMap.getFilterName());                               
if (filterMap.getMatchAllServletNames()) {                                                             if (filterMap.getMatchAllServletNames()) {                                                          
sb.append("    &lt;servlet-name&gt;*&lt;/servlet-name&gt;\n");                                         sb.append("    &lt;servlet-name&gt;*&lt;/servlet-name&gt;\n");                                      
} else {                                                                                               } else {                                                                                            
for (String servletName : filterMap.getServletNames()) {                                               for (String servletName : filterMap.getServletNames()) {                                            
appendElement(sb, INDENT4, "servlet-name", servletName);                                               appendElement(sb, INDENT4, "servlet-name", servletName);                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
if (filterMap.getMatchAllUrlPatterns()) {                                                              if (filterMap.getMatchAllUrlPatterns()) {                                                           
sb.append("    &lt;url-pattern&gt;*&lt;/url-pattern&gt;\n");                                           sb.append("    &lt;url-pattern&gt;*&lt;/url-pattern&gt;\n");                                        
} else {                                                                                               } else {                                                                                            
for (String urlPattern : filterMap.getURLPatterns()) {                                                 for (String urlPattern : filterMap.getURLPatterns()) {                                              
appendElement(sb, INDENT4, "url-pattern", encodeUrl(urlPattern));                                      appendElement(sb, INDENT4, "url-pattern", encodeUrl(urlPattern));                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// dispatcher was added in Servlet 2.4                                                                 // dispatcher was added in Servlet 2.4                                                              
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                         
for (String dispatcher : filterMap.getDispatcherNames()) {                                             for (String dispatcher : filterMap.getDispatcherNames()) {                                          
if (getMajorVersion() == 2 && DispatcherType.ASYNC.name().equals(dispatcher)) {                        if (getMajorVersion() == 2 && DispatcherType.ASYNC.name().equals(dispatcher)) {                     
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "dispatcher", dispatcher);                                                  appendElement(sb, INDENT4, "dispatcher", dispatcher);                                               
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
sb.append("  &lt;/filter-mapping&gt;\n");                                                              sb.append("  &lt;/filter-mapping&gt;\n");                                                           
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
// Listeners were introduced in Servlet 2.3                                                            // Listeners were introduced in Servlet 2.3                                                         
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
for (String listener : listeners) {                                                                    for (String listener : listeners) {                                                                 
sb.append("  &lt;listener&gt;\n");                                                                     sb.append("  &lt;listener&gt;\n");                                                                  
appendElement(sb, INDENT4, "listener-class", listener);                                                appendElement(sb, INDENT4, "listener-class", listener);                                             
sb.append("  &lt;/listener&gt;\n");                                                                    sb.append("  &lt;/listener&gt;\n");                                                                 
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
for (Map.Entry&lt;String, ServletDef&gt; entry : servlets.entrySet()) {                                for (Map.Entry&lt;String, ServletDef&gt; entry : servlets.entrySet()) {                             
ServletDef servletDef = entry.getValue();                                                              ServletDef servletDef = entry.getValue();                                                           
sb.append("  &lt;servlet&gt;\n");                                                                      sb.append("  &lt;servlet&gt;\n");                                                                   
appendElement(sb, INDENT4, "description", servletDef.getDescription());                                appendElement(sb, INDENT4, "description", servletDef.getDescription());                             
appendElement(sb, INDENT4, "display-name", servletDef.getDisplayName());                               appendElement(sb, INDENT4, "display-name", servletDef.getDisplayName());                            
appendElement(sb, INDENT4, "servlet-name", entry.getKey());                                            appendElement(sb, INDENT4, "servlet-name", entry.getKey());                                         
appendElement(sb, INDENT4, "servlet-class", servletDef.getServletClass());                             appendElement(sb, INDENT4, "servlet-class", servletDef.getServletClass());                          
appendElement(sb, INDENT4, "jsp-file", servletDef.getJspFile());                                       appendElement(sb, INDENT4, "jsp-file", servletDef.getJspFile());                                    
for (Map.Entry&lt;String, String&gt; param : servletDef.getParameterMap().entrySet()) {                for (Map.Entry&lt;String, String&gt; param : servletDef.getParameterMap().entrySet()) {             
sb.append("    &lt;init-param&gt;\n");                                                                 sb.append("    &lt;init-param&gt;\n");                                                              
appendElement(sb, INDENT6, "param-name", param.getKey());                                              appendElement(sb, INDENT6, "param-name", param.getKey());                                           
appendElement(sb, INDENT6, "param-value", param.getValue());                                           appendElement(sb, INDENT6, "param-value", param.getValue());                                        
sb.append("    &lt;/init-param&gt;\n");                                                                sb.append("    &lt;/init-param&gt;\n");                                                             
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "load-on-startup", servletDef.getLoadOnStartup());                          appendElement(sb, INDENT4, "load-on-startup", servletDef.getLoadOnStartup());                       
appendElement(sb, INDENT4, "enabled", servletDef.getEnabled());                                        appendElement(sb, INDENT4, "enabled", servletDef.getEnabled());                                     
// Async support was introduced for Servlet 3.0 onwards                                                // Async support was introduced for Servlet 3.0 onwards                                             
if (getMajorVersion() != 2) {                                                                          if (getMajorVersion() != 2) {                                                                       
appendElement(sb, INDENT4, "async-supported", servletDef.getAsyncSupported());                         appendElement(sb, INDENT4, "async-supported", servletDef.getAsyncSupported());                      
}                                                                                                      }                                                                                                   
// servlet/run-as was introduced in Servlet 2.3                                                        // servlet/run-as was introduced in Servlet 2.3                                                     
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
if (servletDef.getRunAs() != null) {                                                                   if (servletDef.getRunAs() != null) {                                                                
sb.append("    &lt;run-as&gt;\n");                                                                     sb.append("    &lt;run-as&gt;\n");                                                                  
appendElement(sb, INDENT6, "role-name", servletDef.getRunAs());                                        appendElement(sb, INDENT6, "role-name", servletDef.getRunAs());                                     
sb.append("    &lt;/run-as&gt;\n");                                                                    sb.append("    &lt;/run-as&gt;\n");                                                                 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
for (SecurityRoleRef roleRef : servletDef.getSecurityRoleRefs()) {                                     for (SecurityRoleRef roleRef : servletDef.getSecurityRoleRefs()) {                                  
sb.append("    &lt;security-role-ref&gt;\n");                                                          sb.append("    &lt;security-role-ref&gt;\n");                                                       
appendElement(sb, INDENT6, "role-name", roleRef.getName());                                            appendElement(sb, INDENT6, "role-name", roleRef.getName());                                         
appendElement(sb, INDENT6, "role-link", roleRef.getLink());                                            appendElement(sb, INDENT6, "role-link", roleRef.getLink());                                         
sb.append("    &lt;/security-role-ref&gt;\n");                                                         sb.append("    &lt;/security-role-ref&gt;\n");                                                      
}                                                                                                      }                                                                                                   
// multipart-config was added in Servlet 3.0                                                           // multipart-config was added in Servlet 3.0                                                        
if (getMajorVersion() != 2) {                                                                          if (getMajorVersion() != 2) {                                                                       
MultipartDef multipartDef = servletDef.getMultipartDef();                                              MultipartDef multipartDef = servletDef.getMultipartDef();                                           
if (multipartDef != null) {                                                                            if (multipartDef != null) {                                                                         
sb.append("    &lt;multipart-config&gt;\n");                                                           sb.append("    &lt;multipart-config&gt;\n");                                                        
appendElement(sb, INDENT6, "location", multipartDef.getLocation());                                    appendElement(sb, INDENT6, "location", multipartDef.getLocation());                                 
appendElement(sb, INDENT6, "max-file-size", multipartDef.getMaxFileSize());                            appendElement(sb, INDENT6, "max-file-size", multipartDef.getMaxFileSize());                         
appendElement(sb, INDENT6, "max-request-size", multipartDef.getMaxRequestSize());                      appendElement(sb, INDENT6, "max-request-size", multipartDef.getMaxRequestSize());                   
appendElement(sb, INDENT6, "file-size-threshold", multipartDef.getFileSizeThreshold());                appendElement(sb, INDENT6, "file-size-threshold", multipartDef.getFileSizeThreshold());             
sb.append("    &lt;/multipart-config&gt;\n");                                                          sb.append("    &lt;/multipart-config&gt;\n");                                                       
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
sb.append("  &lt;/servlet&gt;\n");                                                                     sb.append("  &lt;/servlet&gt;\n");                                                                  
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
for (Map.Entry&lt;String, String&gt; entry : servletMappings.entrySet()) {                             for (Map.Entry&lt;String, String&gt; entry : servletMappings.entrySet()) {                          
sb.append("  &lt;servlet-mapping&gt;\n");                                                              sb.append("  &lt;servlet-mapping&gt;\n");                                                           
appendElement(sb, INDENT4, "servlet-name", entry.getValue());                                          appendElement(sb, INDENT4, "servlet-name", entry.getValue());                                       
appendElement(sb, INDENT4, "url-pattern", encodeUrl(entry.getKey()));                                  appendElement(sb, INDENT4, "url-pattern", encodeUrl(entry.getKey()));                               
sb.append("  &lt;/servlet-mapping&gt;\n");                                                             sb.append("  &lt;/servlet-mapping&gt;\n");                                                          
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
if (sessionConfig != null) {                                                                           if (sessionConfig != null) {                                                                        
sb.append("  &lt;session-config&gt;\n");                                                               sb.append("  &lt;session-config&gt;\n");                                                            
appendElement(sb, INDENT4, "session-timeout", sessionConfig.getSessionTimeout());                      appendElement(sb, INDENT4, "session-timeout", sessionConfig.getSessionTimeout());                   
if (majorVersion &gt;= 3) {                                                                            if (majorVersion &gt;= 3) {                                                                         
sb.append("    &lt;cookie-config&gt;\n");                                                              sb.append("    &lt;cookie-config&gt;\n");                                                           
appendElement(sb, INDENT6, "name", sessionConfig.getCookieName());                                     appendElement(sb, INDENT6, "name", sessionConfig.getCookieName());                                  
appendElement(sb, INDENT6, "domain", sessionConfig.getCookieDomain());                                 appendElement(sb, INDENT6, "domain", sessionConfig.getCookieDomain());                              
appendElement(sb, INDENT6, "path", sessionConfig.getCookiePath());                                     appendElement(sb, INDENT6, "path", sessionConfig.getCookiePath());                                  
appendElement(sb, INDENT6, "comment", sessionConfig.getCookieComment());                               appendElement(sb, INDENT6, "comment", sessionConfig.getCookieComment());                            
appendElement(sb, INDENT6, "http-only", sessionConfig.getCookieHttpOnly());                            appendElement(sb, INDENT6, "http-only", sessionConfig.getCookieHttpOnly());                         
appendElement(sb, INDENT6, "secure", sessionConfig.getCookieSecure());                                 appendElement(sb, INDENT6, "secure", sessionConfig.getCookieSecure());                              
appendElement(sb, INDENT6, "max-age", sessionConfig.getCookieMaxAge());                                appendElement(sb, INDENT6, "max-age", sessionConfig.getCookieMaxAge());                             
sb.append("    &lt;/cookie-config&gt;\n");                                                             sb.append("    &lt;/cookie-config&gt;\n");                                                          
for (SessionTrackingMode stm : sessionConfig.getSessionTrackingModes()) {                              for (SessionTrackingMode stm : sessionConfig.getSessionTrackingModes()) {                           
appendElement(sb, INDENT4, "tracking-mode", stm.name());                                               appendElement(sb, INDENT4, "tracking-mode", stm.name());                                            
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
sb.append("  &lt;/session-config&gt;\n\n");                                                            sb.append("  &lt;/session-config&gt;\n\n");                                                         
}                                                                                                      }                                                                                                   
for (Map.Entry&lt;String, String&gt; entry : mimeMappings.entrySet()) {                                for (Map.Entry&lt;String, String&gt; entry : mimeMappings.entrySet()) {                             
sb.append("  &lt;mime-mapping&gt;\n");                                                                 sb.append("  &lt;mime-mapping&gt;\n");                                                              
appendElement(sb, INDENT4, "extension", entry.getKey());                                               appendElement(sb, INDENT4, "extension", entry.getKey());                                            
appendElement(sb, INDENT4, "mime-type", entry.getValue());                                             appendElement(sb, INDENT4, "mime-type", entry.getValue());                                          
sb.append("  &lt;/mime-mapping&gt;\n");                                                                sb.append("  &lt;/mime-mapping&gt;\n");                                                             
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
if (welcomeFiles.size() &gt; 0) {                                                                      if (welcomeFiles.size() &gt; 0) {                                                                   
sb.append("  &lt;welcome-file-list&gt;\n");                                                            sb.append("  &lt;welcome-file-list&gt;\n");                                                         
for (String welcomeFile : welcomeFiles) {                                                              for (String welcomeFile : welcomeFiles) {                                                           
appendElement(sb, INDENT4, "welcome-file", welcomeFile);                                               appendElement(sb, INDENT4, "welcome-file", welcomeFile);                                            
}                                                                                                      }                                                                                                   
sb.append("  &lt;/welcome-file-list&gt;\n\n");                                                         sb.append("  &lt;/welcome-file-list&gt;\n\n");                                                      
}                                                                                                      }                                                                                                   
for (ErrorPage errorPage : errorPages.values()) {                                                      for (ErrorPage errorPage : errorPages.values()) {                                                   
String exceptionType = errorPage.getExceptionType();                                                   String exceptionType = errorPage.getExceptionType();                                                
int errorCode = errorPage.getErrorCode();                                                              int errorCode = errorPage.getErrorCode();                                                           
if (exceptionType == null && errorCode == 0 && getMajorVersion() == 2) {                               if (exceptionType == null && errorCode == 0 && getMajorVersion() == 2) {                            
// Default error pages are only supported from 3.0 onwards                                             // Default error pages are only supported from 3.0 onwards                                          
continue;                                                                                              continue;                                                                                           
}                                                                                                      }                                                                                                   
sb.append("  &lt;error-page&gt;\n");                                                                   sb.append("  &lt;error-page&gt;\n");                                                                
if (errorPage.getExceptionType() != null) {                                                            if (errorPage.getExceptionType() != null) {                                                         
appendElement(sb, INDENT4, "exception-type", exceptionType);                                           appendElement(sb, INDENT4, "exception-type", exceptionType);                                        
} else if (errorPage.getErrorCode() &gt; 0) {                                                          } else if (errorPage.getErrorCode() &gt; 0) {                                                       
appendElement(sb, INDENT4, "error-code", Integer.toString(errorCode));                                 appendElement(sb, INDENT4, "error-code", Integer.toString(errorCode));                              
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "location", errorPage.getLocation());                                       appendElement(sb, INDENT4, "location", errorPage.getLocation());                                    
sb.append("  &lt;/error-page&gt;\n");                                                                  sb.append("  &lt;/error-page&gt;\n");                                                               
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
// jsp-config was added in Servlet 2.4. Prior to that, tag-libs was used                               // jsp-config was added in Servlet 2.4. Prior to that, tag-libs was used                            
// directly and jsp-property-group did not exist                                                       // directly and jsp-property-group did not exist                                                    
if (taglibs.size() &gt; 0 || jspPropertyGroups.size() &gt; 0) {                                        if (taglibs.size() &gt; 0 || jspPropertyGroups.size() &gt; 0) {                                     
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                         
sb.append("  &lt;jsp-config&gt;\n");                                                                   sb.append("  &lt;jsp-config&gt;\n");                                                                
}                                                                                                      }                                                                                                   
for (Map.Entry&lt;String, String&gt; entry : taglibs.entrySet()) {                                     for (Map.Entry&lt;String, String&gt; entry : taglibs.entrySet()) {                                  
sb.append("    &lt;taglib&gt;\n");                                                                     sb.append("    &lt;taglib&gt;\n");                                                                  
appendElement(sb, INDENT6, "taglib-uri", entry.getKey());                                              appendElement(sb, INDENT6, "taglib-uri", entry.getKey());                                           
appendElement(sb, INDENT6, "taglib-location", entry.getValue());                                       appendElement(sb, INDENT6, "taglib-location", entry.getValue());                                    
sb.append("    &lt;/taglib&gt;\n");                                                                    sb.append("    &lt;/taglib&gt;\n");                                                                 
}                                                                                                      }                                                                                                   
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                         
for (JspPropertyGroup jpg : jspPropertyGroups) {                                                       for (JspPropertyGroup jpg : jspPropertyGroups) {                                                    
sb.append("    &lt;jsp-property-group&gt;\n");                                                         sb.append("    &lt;jsp-property-group&gt;\n");                                                      
for (String urlPattern : jpg.getUrlPatterns()) {                                                       for (String urlPattern : jpg.getUrlPatterns()) {                                                    
appendElement(sb, INDENT6, "url-pattern", encodeUrl(urlPattern));                                      appendElement(sb, INDENT6, "url-pattern", encodeUrl(urlPattern));                                   
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT6, "el-ignored", jpg.getElIgnored());                                          appendElement(sb, INDENT6, "el-ignored", jpg.getElIgnored());                                       
appendElement(sb, INDENT6, "page-encoding", jpg.getPageEncoding());                                    appendElement(sb, INDENT6, "page-encoding", jpg.getPageEncoding());                                 
appendElement(sb, INDENT6, "scripting-invalid", jpg.getScriptingInvalid());                            appendElement(sb, INDENT6, "scripting-invalid", jpg.getScriptingInvalid());                         
appendElement(sb, INDENT6, "is-xml", jpg.getIsXml());                                                  appendElement(sb, INDENT6, "is-xml", jpg.getIsXml());                                               
for (String prelude : jpg.getIncludePreludes()) {                                                      for (String prelude : jpg.getIncludePreludes()) {                                                   
appendElement(sb, INDENT6, "include-prelude", prelude);                                                appendElement(sb, INDENT6, "include-prelude", prelude);                                             
}                                                                                                      }                                                                                                   
for (String coda : jpg.getIncludeCodas()) {                                                            for (String coda : jpg.getIncludeCodas()) {                                                         
appendElement(sb, INDENT6, "include-coda", coda);                                                      appendElement(sb, INDENT6, "include-coda", coda);                                                   
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT6, "deferred-syntax-allowed-as-literal", jpg.getDeferredSyntax());             appendElement(sb, INDENT6, "deferred-syntax-allowed-as-literal", jpg.getDeferredSyntax());          
appendElement(sb, INDENT6, "trim-directive-whitespaces", jpg.getTrimWhitespace());                     appendElement(sb, INDENT6, "trim-directive-whitespaces", jpg.getTrimWhitespace());                  
appendElement(sb, INDENT6, "default-content-type", jpg.getDefaultContentType());                       appendElement(sb, INDENT6, "default-content-type", jpg.getDefaultContentType());                    
appendElement(sb, INDENT6, "buffer", jpg.getBuffer());                                                 appendElement(sb, INDENT6, "buffer", jpg.getBuffer());                                              
appendElement(sb, INDENT6, "error-on-undeclared-namespace", jpg.getErrorOnUndeclaredNamespace());      appendElement(sb, INDENT6, "error-on-undeclared-namespace", jpg.getErrorOnUndeclaredNamespace());   
sb.append("    &lt;/jsp-property-group&gt;\n");                                                        sb.append("    &lt;/jsp-property-group&gt;\n");                                                     
}                                                                                                      }                                                                                                   
sb.append("  &lt;/jsp-config&gt;\n\n");                                                                sb.append("  &lt;/jsp-config&gt;\n\n");                                                             
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// resource-env-ref was introduced in Servlet 2.3                                                      // resource-env-ref was introduced in Servlet 2.3                                                   
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
for (ContextResourceEnvRef resourceEnvRef : resourceEnvRefs.values()) {                                for (ContextResourceEnvRef resourceEnvRef : resourceEnvRefs.values()) {                             
sb.append("  &lt;resource-env-ref&gt;\n");                                                             sb.append("  &lt;resource-env-ref&gt;\n");                                                          
appendElement(sb, INDENT4, "description", resourceEnvRef.getDescription());                            appendElement(sb, INDENT4, "description", resourceEnvRef.getDescription());                         
appendElement(sb, INDENT4, "resource-env-ref-name", resourceEnvRef.getName());                         appendElement(sb, INDENT4, "resource-env-ref-name", resourceEnvRef.getName());                      
appendElement(sb, INDENT4, "resource-env-ref-type", resourceEnvRef.getType());                         appendElement(sb, INDENT4, "resource-env-ref-type", resourceEnvRef.getType());                      
appendElement(sb, INDENT4, "mapped-name", resourceEnvRef.getProperty("mappedName"));                   appendElement(sb, INDENT4, "mapped-name", resourceEnvRef.getProperty("mappedName"));                
for (InjectionTarget target : resourceEnvRef.getInjectionTargets()) {                                  for (InjectionTarget target : resourceEnvRef.getInjectionTargets()) {                               
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", resourceEnvRef.getLookupName());                             appendElement(sb, INDENT4, "lookup-name", resourceEnvRef.getLookupName());                          
sb.append("  &lt;/resource-env-ref&gt;\n");                                                            sb.append("  &lt;/resource-env-ref&gt;\n");                                                         
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
for (ContextResource resourceRef : resourceRefs.values()) {                                            for (ContextResource resourceRef : resourceRefs.values()) {                                         
sb.append("  &lt;resource-ref&gt;\n");                                                                 sb.append("  &lt;resource-ref&gt;\n");                                                              
appendElement(sb, INDENT4, "description", resourceRef.getDescription());                               appendElement(sb, INDENT4, "description", resourceRef.getDescription());                            
appendElement(sb, INDENT4, "res-ref-name", resourceRef.getName());                                     appendElement(sb, INDENT4, "res-ref-name", resourceRef.getName());                                  
appendElement(sb, INDENT4, "res-type", resourceRef.getType());                                         appendElement(sb, INDENT4, "res-type", resourceRef.getType());                                      
appendElement(sb, INDENT4, "res-auth", resourceRef.getAuth());                                         appendElement(sb, INDENT4, "res-auth", resourceRef.getAuth());                                      
// resource-ref/res-sharing-scope was introduced in Servlet 2.3                                        // resource-ref/res-sharing-scope was introduced in Servlet 2.3                                     
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
appendElement(sb, INDENT4, "res-sharing-scope", resourceRef.getScope());                               appendElement(sb, INDENT4, "res-sharing-scope", resourceRef.getScope());                            
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "mapped-name", resourceRef.getProperty("mappedName"));                      appendElement(sb, INDENT4, "mapped-name", resourceRef.getProperty("mappedName"));                   
for (InjectionTarget target : resourceRef.getInjectionTargets()) {                                     for (InjectionTarget target : resourceRef.getInjectionTargets()) {                                  
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", resourceRef.getLookupName());                                appendElement(sb, INDENT4, "lookup-name", resourceRef.getLookupName());                             
sb.append("  &lt;/resource-ref&gt;\n");                                                                sb.append("  &lt;/resource-ref&gt;\n");                                                             
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
for (SecurityConstraint constraint : securityConstraints) {                                            for (SecurityConstraint constraint : securityConstraints) {                                         
sb.append("  &lt;security-constraint&gt;\n");                                                          sb.append("  &lt;security-constraint&gt;\n");                                                       
// security-constraint/display-name was introduced in Servlet 2.3                                      // security-constraint/display-name was introduced in Servlet 2.3                                   
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
appendElement(sb, INDENT4, "display-name", constraint.getDisplayName());                               appendElement(sb, INDENT4, "display-name", constraint.getDisplayName());                            
}                                                                                                      }                                                                                                   
for (SecurityCollection collection : constraint.findCollections()) {                                   for (SecurityCollection collection : constraint.findCollections()) {                                
sb.append("    &lt;web-resource-collection&gt;\n");                                                    sb.append("    &lt;web-resource-collection&gt;\n");                                                 
appendElement(sb, INDENT6, "web-resource-name", collection.getName());                                 appendElement(sb, INDENT6, "web-resource-name", collection.getName());                              
appendElement(sb, INDENT6, "description", collection.getDescription());                                appendElement(sb, INDENT6, "description", collection.getDescription());                             
for (String urlPattern : collection.findPatterns()) {                                                  for (String urlPattern : collection.findPatterns()) {                                               
appendElement(sb, INDENT6, "url-pattern", encodeUrl(urlPattern));                                      appendElement(sb, INDENT6, "url-pattern", encodeUrl(urlPattern));                                   
}                                                                                                      }                                                                                                   
for (String method : collection.findMethods()) {                                                       for (String method : collection.findMethods()) {                                                    
appendElement(sb, INDENT6, "http-method", method);                                                     appendElement(sb, INDENT6, "http-method", method);                                                  
}                                                                                                      }                                                                                                   
for (String method : collection.findOmittedMethods()) {                                                for (String method : collection.findOmittedMethods()) {                                             
appendElement(sb, INDENT6, "http-method-omission", method);                                            appendElement(sb, INDENT6, "http-method-omission", method);                                         
}                                                                                                      }                                                                                                   
sb.append("    &lt;/web-resource-collection&gt;\n");                                                   sb.append("    &lt;/web-resource-collection&gt;\n");                                                
}                                                                                                      }                                                                                                   
if (constraint.findAuthRoles().length &gt; 0) {                                                        if (constraint.findAuthRoles().length &gt; 0) {                                                     
sb.append("    &lt;auth-constraint&gt;\n");                                                            sb.append("    &lt;auth-constraint&gt;\n");                                                         
for (String role : constraint.findAuthRoles()) {                                                       for (String role : constraint.findAuthRoles()) {                                                    
appendElement(sb, INDENT6, "role-name", role);                                                         appendElement(sb, INDENT6, "role-name", role);                                                      
}                                                                                                      }                                                                                                   
sb.append("    &lt;/auth-constraint&gt;\n");                                                           sb.append("    &lt;/auth-constraint&gt;\n");                                                        
}                                                                                                      }                                                                                                   
if (constraint.getUserConstraint() != null) {                                                          if (constraint.getUserConstraint() != null) {                                                       
sb.append("    &lt;user-data-constraint&gt;\n");                                                       sb.append("    &lt;user-data-constraint&gt;\n");                                                    
appendElement(sb, INDENT6, "transport-guarantee", constraint.getUserConstraint());                     appendElement(sb, INDENT6, "transport-guarantee", constraint.getUserConstraint());                  
sb.append("    &lt;/user-data-constraint&gt;\n");                                                      sb.append("    &lt;/user-data-constraint&gt;\n");                                                   
}                                                                                                      }                                                                                                   
sb.append("  &lt;/security-constraint&gt;\n");                                                         sb.append("  &lt;/security-constraint&gt;\n");                                                      
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
if (loginConfig != null) {                                                                             if (loginConfig != null) {                                                                          
sb.append("  &lt;login-config&gt;\n");                                                                 sb.append("  &lt;login-config&gt;\n");                                                              
appendElement(sb, INDENT4, "auth-method", loginConfig.getAuthMethod());                                appendElement(sb, INDENT4, "auth-method", loginConfig.getAuthMethod());                             
appendElement(sb, INDENT4, "realm-name", loginConfig.getRealmName());                                  appendElement(sb, INDENT4, "realm-name", loginConfig.getRealmName());                               
if (loginConfig.getErrorPage() != null || loginConfig.getLoginPage() != null) {                        if (loginConfig.getErrorPage() != null || loginConfig.getLoginPage() != null) {                     
sb.append("    &lt;form-login-config&gt;\n");                                                          sb.append("    &lt;form-login-config&gt;\n");                                                       
appendElement(sb, INDENT6, "form-login-page", loginConfig.getLoginPage());                             appendElement(sb, INDENT6, "form-login-page", loginConfig.getLoginPage());                          
appendElement(sb, INDENT6, "form-error-page", loginConfig.getErrorPage());                             appendElement(sb, INDENT6, "form-error-page", loginConfig.getErrorPage());                          
sb.append("    &lt;/form-login-config&gt;\n");                                                         sb.append("    &lt;/form-login-config&gt;\n");                                                      
}                                                                                                      }                                                                                                   
sb.append("  &lt;/login-config&gt;\n\n");                                                              sb.append("  &lt;/login-config&gt;\n\n");                                                           
}                                                                                                      }                                                                                                   
for (String roleName : securityRoles) {                                                                for (String roleName : securityRoles) {                                                             
sb.append("  &lt;security-role&gt;\n");                                                                sb.append("  &lt;security-role&gt;\n");                                                             
appendElement(sb, INDENT4, "role-name", roleName);                                                     appendElement(sb, INDENT4, "role-name", roleName);                                                  
sb.append("  &lt;/security-role&gt;\n");                                                               sb.append("  &lt;/security-role&gt;\n");                                                            
}                                                                                                      }                                                                                                   
for (ContextEnvironment envEntry : envEntries.values()) {                                              for (ContextEnvironment envEntry : envEntries.values()) {                                           
sb.append("  &lt;env-entry&gt;\n");                                                                    sb.append("  &lt;env-entry&gt;\n");                                                                 
appendElement(sb, INDENT4, "description", envEntry.getDescription());                                  appendElement(sb, INDENT4, "description", envEntry.getDescription());                               
appendElement(sb, INDENT4, "env-entry-name", envEntry.getName());                                      appendElement(sb, INDENT4, "env-entry-name", envEntry.getName());                                   
appendElement(sb, INDENT4, "env-entry-type", envEntry.getType());                                      appendElement(sb, INDENT4, "env-entry-type", envEntry.getType());                                   
appendElement(sb, INDENT4, "env-entry-value", envEntry.getValue());                                    appendElement(sb, INDENT4, "env-entry-value", envEntry.getValue());                                 
appendElement(sb, INDENT4, "mapped-name", envEntry.getProperty("mappedName"));                         appendElement(sb, INDENT4, "mapped-name", envEntry.getProperty("mappedName"));                      
for (InjectionTarget target : envEntry.getInjectionTargets()) {                                        for (InjectionTarget target : envEntry.getInjectionTargets()) {                                     
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", envEntry.getLookupName());                                   appendElement(sb, INDENT4, "lookup-name", envEntry.getLookupName());                                
sb.append("  &lt;/env-entry&gt;\n");                                                                   sb.append("  &lt;/env-entry&gt;\n");                                                                
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
for (ContextEjb ejbRef : ejbRefs.values()) {                                                           for (ContextEjb ejbRef : ejbRefs.values()) {                                                        
sb.append("  &lt;ejb-ref&gt;\n");                                                                      sb.append("  &lt;ejb-ref&gt;\n");                                                                   
appendElement(sb, INDENT4, "description", ejbRef.getDescription());                                    appendElement(sb, INDENT4, "description", ejbRef.getDescription());                                 
appendElement(sb, INDENT4, "ejb-ref-name", ejbRef.getName());                                          appendElement(sb, INDENT4, "ejb-ref-name", ejbRef.getName());                                       
appendElement(sb, INDENT4, "ejb-ref-type", ejbRef.getType());                                          appendElement(sb, INDENT4, "ejb-ref-type", ejbRef.getType());                                       
appendElement(sb, INDENT4, "home", ejbRef.getHome());                                                  appendElement(sb, INDENT4, "home", ejbRef.getHome());                                               
appendElement(sb, INDENT4, "remote", ejbRef.getRemote());                                              appendElement(sb, INDENT4, "remote", ejbRef.getRemote());                                           
appendElement(sb, INDENT4, "ejb-link", ejbRef.getLink());                                              appendElement(sb, INDENT4, "ejb-link", ejbRef.getLink());                                           
appendElement(sb, INDENT4, "mapped-name", ejbRef.getProperty("mappedName"));                           appendElement(sb, INDENT4, "mapped-name", ejbRef.getProperty("mappedName"));                        
for (InjectionTarget target : ejbRef.getInjectionTargets()) {                                          for (InjectionTarget target : ejbRef.getInjectionTargets()) {                                       
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", ejbRef.getLookupName());                                     appendElement(sb, INDENT4, "lookup-name", ejbRef.getLookupName());                                  
sb.append("  &lt;/ejb-ref&gt;\n");                                                                     sb.append("  &lt;/ejb-ref&gt;\n");                                                                  
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
// ejb-local-ref was introduced in Servlet 2.3                                                         // ejb-local-ref was introduced in Servlet 2.3                                                      
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 2) {                                         
for (ContextLocalEjb ejbLocalRef : ejbLocalRefs.values()) {                                            for (ContextLocalEjb ejbLocalRef : ejbLocalRefs.values()) {                                         
sb.append("  &lt;ejb-local-ref&gt;\n");                                                                sb.append("  &lt;ejb-local-ref&gt;\n");                                                             
appendElement(sb, INDENT4, "description", ejbLocalRef.getDescription());                               appendElement(sb, INDENT4, "description", ejbLocalRef.getDescription());                            
appendElement(sb, INDENT4, "ejb-ref-name", ejbLocalRef.getName());                                     appendElement(sb, INDENT4, "ejb-ref-name", ejbLocalRef.getName());                                  
appendElement(sb, INDENT4, "ejb-ref-type", ejbLocalRef.getType());                                     appendElement(sb, INDENT4, "ejb-ref-type", ejbLocalRef.getType());                                  
appendElement(sb, INDENT4, "local-home", ejbLocalRef.getHome());                                       appendElement(sb, INDENT4, "local-home", ejbLocalRef.getHome());                                    
appendElement(sb, INDENT4, "local", ejbLocalRef.getLocal());                                           appendElement(sb, INDENT4, "local", ejbLocalRef.getLocal());                                        
appendElement(sb, INDENT4, "ejb-link", ejbLocalRef.getLink());                                         appendElement(sb, INDENT4, "ejb-link", ejbLocalRef.getLink());                                      
appendElement(sb, INDENT4, "mapped-name", ejbLocalRef.getProperty("mappedName"));                      appendElement(sb, INDENT4, "mapped-name", ejbLocalRef.getProperty("mappedName"));                   
for (InjectionTarget target : ejbLocalRef.getInjectionTargets()) {                                     for (InjectionTarget target : ejbLocalRef.getInjectionTargets()) {                                  
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", ejbLocalRef.getLookupName());                                appendElement(sb, INDENT4, "lookup-name", ejbLocalRef.getLookupName());                             
sb.append("  &lt;/ejb-local-ref&gt;\n");                                                               sb.append("  &lt;/ejb-local-ref&gt;\n");                                                            
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
// service-ref was introduced in Servlet 2.4                                                           // service-ref was introduced in Servlet 2.4                                                        
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                         
for (ContextService serviceRef : serviceRefs.values()) {                                               for (ContextService serviceRef : serviceRefs.values()) {                                            
sb.append("  &lt;service-ref&gt;\n");                                                                  sb.append("  &lt;service-ref&gt;\n");                                                               
appendElement(sb, INDENT4, "description", serviceRef.getDescription());                                appendElement(sb, INDENT4, "description", serviceRef.getDescription());                             
appendElement(sb, INDENT4, "display-name", serviceRef.getDisplayname());                               appendElement(sb, INDENT4, "display-name", serviceRef.getDisplayname());                            
appendElement(sb, INDENT4, "service-ref-name", serviceRef.getName());                                  appendElement(sb, INDENT4, "service-ref-name", serviceRef.getName());                               
appendElement(sb, INDENT4, "service-interface", serviceRef.getInterface());                            appendElement(sb, INDENT4, "service-interface", serviceRef.getInterface());                         
appendElement(sb, INDENT4, "service-ref-type", serviceRef.getType());                                  appendElement(sb, INDENT4, "service-ref-type", serviceRef.getType());                               
appendElement(sb, INDENT4, "wsdl-file", serviceRef.getWsdlfile());                                     appendElement(sb, INDENT4, "wsdl-file", serviceRef.getWsdlfile());                                  
appendElement(sb, INDENT4, "jaxrpc-mapping-file", serviceRef.getJaxrpcmappingfile());                  appendElement(sb, INDENT4, "jaxrpc-mapping-file", serviceRef.getJaxrpcmappingfile());               
String qname = serviceRef.getServiceqnameNamespaceURI();                                               String qname = serviceRef.getServiceqnameNamespaceURI();                                            
if (qname != null) {                                                                                   if (qname != null) {                                                                                
qname = qname + ":";                                                                                   qname = qname + ":";                                                                                
}                                                                                                      }                                                                                                   
qname = qname + serviceRef.getServiceqnameLocalpart();                                                 qname = qname + serviceRef.getServiceqnameLocalpart();                                              
appendElement(sb, INDENT4, "service-qname", qname);                                                    appendElement(sb, INDENT4, "service-qname", qname);                                                 
Iterator&lt;String&gt; endpointIter = serviceRef.getServiceendpoints();                                Iterator&lt;String&gt; endpointIter = serviceRef.getServiceendpoints();                             
while (endpointIter.hasNext()) {                                                                       while (endpointIter.hasNext()) {                                                                    
String endpoint = endpointIter.next();                                                                 String endpoint = endpointIter.next();                                                              
sb.append("    &lt;port-component-ref&gt;\n");                                                         sb.append("    &lt;port-component-ref&gt;\n");                                                      
appendElement(sb, INDENT6, "service-endpoint-interface", endpoint);                                    appendElement(sb, INDENT6, "service-endpoint-interface", endpoint);                                 
appendElement(sb, INDENT6, "port-component-link", serviceRef.getProperty(endpoint));                   appendElement(sb, INDENT6, "port-component-link", serviceRef.getProperty(endpoint));                
sb.append("    &lt;/port-component-ref&gt;\n");                                                        sb.append("    &lt;/port-component-ref&gt;\n");                                                     
}                                                                                                      }                                                                                                   
Iterator&lt;String&gt; handlerIter = serviceRef.getHandlers();                                         Iterator&lt;String&gt; handlerIter = serviceRef.getHandlers();                                      
while (handlerIter.hasNext()) {                                                                        while (handlerIter.hasNext()) {                                                                     
String handler = handlerIter.next();                                                                   String handler = handlerIter.next();                                                                
sb.append("    &lt;handler&gt;\n");                                                                    sb.append("    &lt;handler&gt;\n");                                                                 
ContextHandler ch = serviceRef.getHandler(handler);                                                    ContextHandler ch = serviceRef.getHandler(handler);                                                 
appendElement(sb, INDENT6, "handler-name", ch.getName());                                              appendElement(sb, INDENT6, "handler-name", ch.getName());                                           
appendElement(sb, INDENT6, "handler-class", ch.getHandlerclass());                                     appendElement(sb, INDENT6, "handler-class", ch.getHandlerclass());                                  
sb.append("    &lt;/handler&gt;\n");                                                                   sb.append("    &lt;/handler&gt;\n");                                                                
}                                                                                                      }                                                                                                   
// TODO handler-chains                                                                                 // TODO handler-chains                                                                              
appendElement(sb, INDENT4, "mapped-name", serviceRef.getProperty("mappedName"));                       appendElement(sb, INDENT4, "mapped-name", serviceRef.getProperty("mappedName"));                    
for (InjectionTarget target : serviceRef.getInjectionTargets()) {                                      for (InjectionTarget target : serviceRef.getInjectionTargets()) {                                   
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", serviceRef.getLookupName());                                 appendElement(sb, INDENT4, "lookup-name", serviceRef.getLookupName());                              
sb.append("  &lt;/service-ref&gt;\n");                                                                 sb.append("  &lt;/service-ref&gt;\n");                                                              
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
if (!postConstructMethods.isEmpty()) {                                                                 if (!postConstructMethods.isEmpty()) {                                                              
for (Entry&lt;String, String&gt; entry : postConstructMethods.entrySet()) {                            for (Entry&lt;String, String&gt; entry : postConstructMethods.entrySet()) {                         
sb.append("  &lt;post-construct&gt;\n");                                                               sb.append("  &lt;post-construct&gt;\n");                                                            
appendElement(sb, INDENT4, "lifecycle-callback-class", entry.getKey());                                appendElement(sb, INDENT4, "lifecycle-callback-class", entry.getKey());                             
appendElement(sb, INDENT4, "lifecycle-callback-method", entry.getValue());                             appendElement(sb, INDENT4, "lifecycle-callback-method", entry.getValue());                          
sb.append("  &lt;/post-construct&gt;\n");                                                              sb.append("  &lt;/post-construct&gt;\n");                                                           
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
if (!preDestroyMethods.isEmpty()) {                                                                    if (!preDestroyMethods.isEmpty()) {                                                                 
for (Entry&lt;String, String&gt; entry : preDestroyMethods.entrySet()) {                               for (Entry&lt;String, String&gt; entry : preDestroyMethods.entrySet()) {                            
sb.append("  &lt;pre-destroy&gt;\n");                                                                  sb.append("  &lt;pre-destroy&gt;\n");                                                               
appendElement(sb, INDENT4, "lifecycle-callback-class", entry.getKey());                                appendElement(sb, INDENT4, "lifecycle-callback-class", entry.getKey());                             
appendElement(sb, INDENT4, "lifecycle-callback-method", entry.getValue());                             appendElement(sb, INDENT4, "lifecycle-callback-method", entry.getValue());                          
sb.append("  &lt;/pre-destroy&gt;\n");                                                                 sb.append("  &lt;/pre-destroy&gt;\n");                                                              
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
// message-destination-ref, message-destination were introduced in                                     // message-destination-ref, message-destination were introduced in                                  
// Servlet 2.4                                                                                         // Servlet 2.4                                                                                      
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                         
for (MessageDestinationRef mdr : messageDestinationRefs.values()) {                                    for (MessageDestinationRef mdr : messageDestinationRefs.values()) {                                 
sb.append("  &lt;message-destination-ref&gt;\n");                                                      sb.append("  &lt;message-destination-ref&gt;\n");                                                   
appendElement(sb, INDENT4, "description", mdr.getDescription());                                       appendElement(sb, INDENT4, "description", mdr.getDescription());                                    
appendElement(sb, INDENT4, "message-destination-ref-name", mdr.getName());                             appendElement(sb, INDENT4, "message-destination-ref-name", mdr.getName());                          
appendElement(sb, INDENT4, "message-destination-type", mdr.getType());                                 appendElement(sb, INDENT4, "message-destination-type", mdr.getType());                              
appendElement(sb, INDENT4, "message-destination-usage", mdr.getUsage());                               appendElement(sb, INDENT4, "message-destination-usage", mdr.getUsage());                            
appendElement(sb, INDENT4, "message-destination-link", mdr.getLink());                                 appendElement(sb, INDENT4, "message-destination-link", mdr.getLink());                              
appendElement(sb, INDENT4, "mapped-name", mdr.getProperty("mappedName"));                              appendElement(sb, INDENT4, "mapped-name", mdr.getProperty("mappedName"));                           
for (InjectionTarget target : mdr.getInjectionTargets()) {                                             for (InjectionTarget target : mdr.getInjectionTargets()) {                                          
sb.append("    &lt;injection-target&gt;\n");                                                           sb.append("    &lt;injection-target&gt;\n");                                                        
appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                         appendElement(sb, INDENT6, "injection-target-class", target.getTargetClass());                      
appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                           appendElement(sb, INDENT6, "injection-target-name", target.getTargetName());                        
sb.append("    &lt;/injection-target&gt;\n");                                                          sb.append("    &lt;/injection-target&gt;\n");                                                       
}                                                                                                      }                                                                                                   
appendElement(sb, INDENT4, "lookup-name", mdr.getLookupName());                                        appendElement(sb, INDENT4, "lookup-name", mdr.getLookupName());                                     
sb.append("  &lt;/message-destination-ref&gt;\n");                                                     sb.append("  &lt;/message-destination-ref&gt;\n");                                                  
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
for (MessageDestination md : messageDestinations.values()) {                                           for (MessageDestination md : messageDestinations.values()) {                                        
sb.append("  &lt;message-destination&gt;\n");                                                          sb.append("  &lt;message-destination&gt;\n");                                                       
appendElement(sb, INDENT4, "description", md.getDescription());                                        appendElement(sb, INDENT4, "description", md.getDescription());                                     
appendElement(sb, INDENT4, "display-name", md.getDisplayName());                                       appendElement(sb, INDENT4, "display-name", md.getDisplayName());                                    
appendElement(sb, INDENT4, "message-destination-name", md.getName());                                  appendElement(sb, INDENT4, "message-destination-name", md.getName());                               
appendElement(sb, INDENT4, "mapped-name", md.getProperty("mappedName"));                               appendElement(sb, INDENT4, "mapped-name", md.getProperty("mappedName"));                            
appendElement(sb, INDENT4, "lookup-name", md.getLookupName());                                         appendElement(sb, INDENT4, "lookup-name", md.getLookupName());                                      
sb.append("  &lt;/message-destination&gt;\n");                                                         sb.append("  &lt;/message-destination&gt;\n");                                                      
}                                                                                                      }                                                                                                   
sb.append('\n');                                                                                       sb.append('\n');                                                                                    
}                                                                                                      }                                                                                                   
// locale-encoding-mapping-list was introduced in Servlet 2.4                                          // locale-encoding-mapping-list was introduced in Servlet 2.4                                       
if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                            if (getMajorVersion() &gt; 2 || getMinorVersion() &gt; 3) {                                         
if (localeEncodingMappings.size() &gt; 0) {                                                            if (localeEncodingMappings.size() &gt; 0) {                                                         
sb.append("  &lt;locale-encoding-mapping-list&gt;\n");                                                 sb.append("  &lt;locale-encoding-mapping-list&gt;\n");                                              
for (Map.Entry&lt;String, String&gt; entry : localeEncodingMappings.entrySet()) {                      for (Map.Entry&lt;String, String&gt; entry : localeEncodingMappings.entrySet()) {                   
sb.append("    &lt;locale-encoding-mapping&gt;\n");                                                    sb.append("    &lt;locale-encoding-mapping&gt;\n");                                                 
appendElement(sb, INDENT6, "locale", entry.getKey());                                                  appendElement(sb, INDENT6, "locale", entry.getKey());                                               
appendElement(sb, INDENT6, "encoding", entry.getValue());                                              appendElement(sb, INDENT6, "encoding", entry.getValue());                                           
sb.append("    &lt;/locale-encoding-mapping&gt;\n");                                                   sb.append("    &lt;/locale-encoding-mapping&gt;\n");                                                
}                                                                                                      }                                                                                                   
sb.append("  &lt;/locale-encoding-mapping-list&gt;\n");                                                sb.append("  &lt;/locale-encoding-mapping-list&gt;\n");                                             
sb.append("\n");                                                                                       sb.append("\n");                                                                                    
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// deny-uncovered-http-methods was introduced in Servlet 3.1                                           // deny-uncovered-http-methods was introduced in Servlet 3.1                                        
if (getMajorVersion() &gt; 3 || (getMajorVersion() == 3 && getMinorVersion() &gt; 0)) {                if (getMajorVersion() &gt; 3 || (getMajorVersion() == 3 && getMinorVersion() &gt; 0)) {             
if (denyUncoveredHttpMethods) {                                                                        if (denyUncoveredHttpMethods) {                                                                     
sb.append("  &lt;deny-uncovered-http-methods/&gt;");                                                   sb.append("  &lt;deny-uncovered-http-methods/&gt;");                                                
sb.append("\n");                                                                                       sb.append("\n");                                                                                    
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
// request-encoding and response-encoding was introduced in Servlet 4.0                                // request-encoding and response-encoding was introduced in Servlet 4.0                             
if (getMajorVersion() &gt;= 4) {                                                                       if (getMajorVersion() &gt;= 4) {                                                                    
appendElement(sb, INDENT2, "request-character-encoding", requestCharacterEncoding);                    appendElement(sb, INDENT2, "request-character-encoding", requestCharacterEncoding);                 
appendElement(sb, INDENT2, "response-character-encoding", responseCharacterEncoding);                  appendElement(sb, INDENT2, "response-character-encoding", responseCharacterEncoding);               
}                                                                                                      }                                                                                                   
sb.append("&lt;/web-app&gt;");                                                                         sb.append("&lt;/web-app&gt;");                                                                      
return sb.toString();                                                                                  return sb.toString();                                                                               
}                                                                                                      }                                                                                                   
