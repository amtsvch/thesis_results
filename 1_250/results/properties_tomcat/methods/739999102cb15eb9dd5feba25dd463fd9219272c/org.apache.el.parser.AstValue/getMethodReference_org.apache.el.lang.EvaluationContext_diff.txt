@Override
public MethodReference getMethodReference(EvaluationContext ctx) {
    Target t = getTarget(ctx);
    Method m = null;
    Object[] values = null;
    Class<?>[] types = null;
    if (isParametersProvided()) {
        values = ((AstMethodParameters) this.jjtGetChild(this.jjtGetNumChildren() - 1)).getParameters(ctx);
        types = getTypesFromValues(values);
    }
    m = ReflectionUtil.getMethod(ctx, t.base, t.property, types, values);
    // Handle varArgs and any coercion required
    values = convertArgs(ctx, values, m);
    return new MethodReference(t.base, getMethodInfo(ctx, types), m.getAnnotations(), values);
}