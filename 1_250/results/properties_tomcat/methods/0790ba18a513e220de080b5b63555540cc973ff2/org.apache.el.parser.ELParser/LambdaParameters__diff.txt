/*
 * Lambda parameters
 */
final public void LambdaParameters() throws ParseException {
    /*@bgen(jjtree) LambdaParameters */
    AstLambdaParameters jjtn000 = new AstLambdaParameters(JJTLAMBDAPARAMETERS);
    boolean jjtc000 = true;
    jjtree.openNodeScope(jjtn000);
    try {
        switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case IDENTIFIER:
                {
                    Identifier();
                    break;
                }
            case LPAREN:
                {
                    jj_consume_token(LPAREN);
                    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                        case IDENTIFIER:
                            {
                                Identifier();
                                label_4: while (true) {
                                    switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                                        case COMMA:
                                            {
                                                ;
                                                break;
                                            }
                                        default:
                                            jj_la1[5] = jj_gen;
                                            break label_4;
                                    }
                                    jj_consume_token(COMMA);
                                    Identifier();
                                }
                                break;
                            }
                        default:
                            jj_la1[6] = jj_gen;
                            ;
                    }
                    jj_consume_token(RPAREN);
                    break;
                }
            default:
                jj_la1[7] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
    } catch (Throwable jjte000) {
        if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
        } else {
            jjtree.popNode();
        }
        if (jjte000 instanceof RuntimeException) {
            {
                if (true) {
                    throw (RuntimeException) jjte000;
                }
            }
        }
        if (jjte000 instanceof ParseException) {
            {
                if (true) {
                    throw (ParseException) jjte000;
                }
            }
        }
        {
            if (true) {
                throw (Error) jjte000;
            }
        }
    } finally {
        if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
        }
    }
}