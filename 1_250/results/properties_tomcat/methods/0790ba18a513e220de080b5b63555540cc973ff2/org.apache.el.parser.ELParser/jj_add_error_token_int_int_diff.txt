private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) {
        return;
    }
    if (pos == jj_endpos + 1) {
        jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
        jj_expentry = new int[jj_endpos];
        for (int i = 0; i < jj_endpos; i++) {
            jj_expentry[i] = jj_lasttokens[i];
        }
        for (int[] oldentry : jj_expentries) {
            if (oldentry.length == jj_expentry.length) {
                boolean isMatched = true;
                for (int i = 0; i < jj_expentry.length; i++) {
                    if (oldentry[i] != jj_expentry[i]) {
                        isMatched = false;
                        break;
                    }
                }
                if (isMatched) {
                    jj_expentries.add(jj_expentry);
                    break;
                }
            }
        }
        if (pos != 0) {
            jj_lasttokens[(jj_endpos = pos) - 1] = kind;
        }
    }
}