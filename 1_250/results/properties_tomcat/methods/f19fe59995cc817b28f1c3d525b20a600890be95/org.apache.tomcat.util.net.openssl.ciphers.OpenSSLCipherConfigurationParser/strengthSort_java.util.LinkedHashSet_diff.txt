static LinkedHashSet<Cipher> strengthSort(final LinkedHashSet<Cipher> ciphers) {
    /*
         * This routine sorts the ciphers with descending strength. The sorting
         * must keep the pre-sorted sequence, so we apply the normal sorting
         * routine as '+' movement to the end of the list.
         */
    Set<Integer> keySizes = new HashSet<>();
    for (Cipher cipher : ciphers) {
        keySizes.add(Integer.valueOf(cipher.getStrength_bits()));
    }
    List<Integer> strength_bits = new ArrayList<>(keySizes);
    Collections.sort(strength_bits);
    Collections.reverse(strength_bits);
    final LinkedHashSet<Cipher> result = new LinkedHashSet<>(ciphers);
    for (int strength : strength_bits) {
        moveToEnd(result, filterByStrengthBits(ciphers, strength));
    }
    return result;
}