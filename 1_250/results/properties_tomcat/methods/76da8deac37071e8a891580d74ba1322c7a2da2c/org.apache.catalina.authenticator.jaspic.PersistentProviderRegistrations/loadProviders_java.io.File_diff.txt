static Providers loadProviders(File configFile) {                                                      static Providers loadProviders(File configFile) {                                                   
try (InputStream is = new FileInputStream(configFile)) {                                               try (InputStream is = new FileInputStream(configFile)) {                                            
// Construct a digester to read the XML input file                                                     // Construct a digester to read the XML input file                                                  
Digester digester = new Digester();                                                                    Digester digester = new Digester();                                                                 
try {                                                                                                  try {                                                                                               
digester.setFeature("http://apache.org/xml/features/allow-java-encodings", true);                      digester.setFeature("http://apache.org/xml/features/allow-java-encodings", true);                   
                                                                                                     | } catch (SAXException se) {                                                                         
                                                                                                     | log.warn(sm.getString("persistentProviderRegistrations.xmlFeatureEncoding"), se);                   
                                                                                                     | }                                                                                                   
digester.setValidating(true);                                                                          digester.setValidating(true);                                                                       
digester.setNamespaceAware(true);                                                                      digester.setNamespaceAware(true);                                                                   
} catch (Exception e) {                                                                              |                                                                                                     
throw new SecurityException(e);                                                                      |                                                                                                     
}                                                                                                    |                                                                                                     
// Create an object to hold the parse results and put it on the top                                    // Create an object to hold the parse results and put it on the top                                 
// of the digester's stack                                                                             // of the digester's stack                                                                          
Providers result = new Providers();                                                                    Providers result = new Providers();                                                                 
digester.push(result);                                                                                 digester.push(result);                                                                              
// Configure the digester                                                                              // Configure the digester                                                                           
digester.addObjectCreate("jaspic-providers/provider", Provider.class.getName());                       digester.addObjectCreate("jaspic-providers/provider", Provider.class.getName());                    
digester.addSetProperties("jaspic-providers/provider");                                                digester.addSetProperties("jaspic-providers/provider");                                             
digester.addSetNext("jaspic-providers/provider", "addProvider", Provider.class.getName());             digester.addSetNext("jaspic-providers/provider", "addProvider", Provider.class.getName());          
digester.addObjectCreate("jaspic-providers/provider/property", Property.class.getName());              digester.addObjectCreate("jaspic-providers/provider/property", Property.class.getName());           
digester.addSetProperties("jaspic-providers/provider/property");                                       digester.addSetProperties("jaspic-providers/provider/property");                                    
digester.addSetNext("jaspic-providers/provider/property", "addProperty", Property.class.getName());    digester.addSetNext("jaspic-providers/provider/property", "addProperty", Property.class.getName()); 
// Parse the input                                                                                     // Parse the input                                                                                  
digester.parse(is);                                                                                    digester.parse(is);                                                                                 
return result;                                                                                         return result;                                                                                      
} catch (IOException | SAXException e) {                                                             | } catch (IOException | ParserConfigurationException | SAXException e) {                             
throw new SecurityException(e);                                                                        throw new SecurityException(e);                                                                     
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
