/**
 * Compare two objects for equality, after coercing to the same type if appropriate.
 *
 * If the objects are identical (including both null) return true.
 * If either object is null, return false.
 * If either object is Boolean, coerce both to Boolean and check equality.
 * Similarly for Enum, String, BigDecimal, Double(Float), Long(Integer, Short, Byte, Character)
 * Otherwise default to using Object.equals().
 *
 * @param ctx the context in which this equality test is taking place
 * @param obj0 the first object
 * @param obj1 the second object
 * @return true if the objects are equal
 * @throws ELException if one of the coercion fails
 */
public static final boolean equals(final ELContext ctx, final Object obj0, final Object obj1) throws ELException {
    if (obj0 == obj1) {
        return true;
    } else if (obj0 == null || obj1 == null) {
        return false;
    } else if (isBigDecimalOp(obj0, obj1)) {
        BigDecimal bd0 = (BigDecimal) coerceToNumber(ctx, obj0, BigDecimal.class);
        BigDecimal bd1 = (BigDecimal) coerceToNumber(ctx, obj1, BigDecimal.class);
        return bd0.equals(bd1);
    } else if (isDoubleOp(obj0, obj1)) {
        Double d0 = (Double) coerceToNumber(ctx, obj0, Double.class);
        Double d1 = (Double) coerceToNumber(ctx, obj1, Double.class);
        return d0.equals(d1);
    } else if (isBigIntegerOp(obj0, obj1)) {
        BigInteger bi0 = (BigInteger) coerceToNumber(ctx, obj0, BigInteger.class);
        BigInteger bi1 = (BigInteger) coerceToNumber(ctx, obj1, BigInteger.class);
        return bi0.equals(bi1);
    } else if (isLongOp(obj0, obj1)) {
        Long l0 = (Long) coerceToNumber(ctx, obj0, Long.class);
        Long l1 = (Long) coerceToNumber(ctx, obj1, Long.class);
        return l0.equals(l1);
    } else if (obj0 instanceof Boolean || obj1 instanceof Boolean) {
        return coerceToBoolean(ctx, obj0, false).equals(coerceToBoolean(ctx, obj1, false));
    } else if (obj0.getClass().isEnum()) {
        return obj0.equals(coerceToEnum(ctx, obj1, obj0.getClass()));
    } else if (obj1.getClass().isEnum()) {
        return obj1.equals(coerceToEnum(ctx, obj0, obj1.getClass()));
    } else if (obj0 instanceof String || obj1 instanceof String) {
        int lexCompare = coerceToString(ctx, obj0).compareTo(coerceToString(ctx, obj1));
        return (lexCompare == 0) ? true : false;
    } else {
        return obj0.equals(obj1);
    }
}