final public void ListData() throws ParseException {
    /*@bgen(jjtree) ListData */
    AstListData jjtn000 = new AstListData(JJTLISTDATA);
    boolean jjtc000 = true;
    jjtree.openNodeScope(jjtn000);
    try {
        jj_consume_token(LBRACK);
        switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
            case START_SET_OR_MAP:
            case INTEGER_LITERAL:
            case FLOATING_POINT_LITERAL:
            case STRING_LITERAL:
            case TRUE:
            case FALSE:
            case NULL:
            case LPAREN:
            case LBRACK:
            case NOT0:
            case NOT1:
            case EMPTY:
            case MINUS:
            case IDENTIFIER:
                {
                    Expression();
                    label_17: while (true) {
                        switch((jj_ntk == -1) ? jj_ntk_f() : jj_ntk) {
                            case COMMA:
                                {
                                    ;
                                    break;
                                }
                            default:
                                jj_la1[44] = jj_gen;
                                break label_17;
                        }
                        jj_consume_token(COMMA);
                        Expression();
                    }
                    break;
                }
            default:
                jj_la1[45] = jj_gen;
                ;
        }
        jj_consume_token(RBRACK);
    } catch (Throwable jjte000) {
        if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
        } else {
            jjtree.popNode();
        }
        if (jjte000 instanceof RuntimeException) {
            {
                if (true) {
                    throw (RuntimeException) jjte000;
                }
            }
        }
        if (jjte000 instanceof ParseException) {
            {
                if (true) {
                    throw (ParseException) jjte000;
                }
            }
        }
        {
            if (true) {
                throw (Error) jjte000;
            }
        }
    } finally {
        if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
        }
    }
}