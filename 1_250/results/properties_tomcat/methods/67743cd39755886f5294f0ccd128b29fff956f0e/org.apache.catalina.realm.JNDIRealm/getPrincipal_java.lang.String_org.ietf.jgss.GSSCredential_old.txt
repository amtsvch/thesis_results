protected Principal getPrincipal(String username, GSSCredential gssCredential) {
    JNDIConnection connection = null;
    Principal principal = null;
    try {
        // Ensure that we have a directory context available
        connection = get();
        // Occasionally the directory context will timeout.  Try one more
        // time before giving up.
        try {
            // Authenticate the specified username if possible
            principal = getPrincipal(connection, username, gssCredential);
        } catch (CommunicationException | ServiceUnavailableException e) {
            // log the exception so we know it's there.
            containerLog.info(sm.getString("jndiRealm.exception.retry"), e);
            // close the connection so we know it will be reopened.
            close(connection);
            closePooledConnections();
            // open a new directory context.
            connection = get();
            // Try the authentication again.
            principal = getPrincipal(connection, username, gssCredential);
        }
        // Release this context
        release(connection);
        // Return the authenticated Principal (if any)
        return principal;
    } catch (NamingException e) {
        // Log the problem for posterity
        containerLog.error(sm.getString("jndiRealm.exception"), e);
        // close the connection so we know it will be reopened.
        close(connection);
        closePooledConnections();
        // Return "not authenticated" for this request
        return null;
    }
}