/**                                                                                                    /**                                                                                                 
* Release our use of this connection so that it can be recycled.                                       * Release our use of this connection so that it can be recycled.                                    
*                                                                                                      *                                                                                                   
* @param connection The directory context to release                                                   * @param connection The directory context to release                                                
*/                                                                                                     */                                                                                                  
protected void release(JNDIConnection connection) {                                                    protected void release(JNDIConnection connection) {                                                 
if (connectionPool != null) {                                                                          if (connectionPool != null) {                                                                       
                                                                                                     | if (connection != null) {                                                                           
if (!connectionPool.push(connection)) {                                                                if (!connectionPool.push(connection)) {                                                             
// Any connection that doesn't end back to the pool must be closed                                     // Any connection that doesn't end back to the pool must be closed                                  
close(connection);                                                                                     close(connection);                                                                                  
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
} else {                                                                                               } else {                                                                                            
singleConnectionLock.unlock();                                                                         singleConnectionLock.unlock();                                                                      
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
