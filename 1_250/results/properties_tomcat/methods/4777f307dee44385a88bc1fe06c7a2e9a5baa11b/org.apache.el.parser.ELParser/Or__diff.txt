/*
 * Or
 * For 'or' '||', then And
 */
final public void Or() throws ParseException {
    And();
    label_7: while (true) {
        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
            case OR0:
            case OR1:
                ;
                break;
            default:
                jj_la1[10] = jj_gen;
                break label_7;
        }
        switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
            case OR0:
                jj_consume_token(OR0);
                break;
            case OR1:
                jj_consume_token(OR1);
                break;
            default:
                jj_la1[11] = jj_gen;
                jj_consume_token(-1);
                throw new ParseException();
        }
        AstOr jjtn001 = new AstOr(JJTOR);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
        try {
            And();
        } catch (Throwable jjte001) {
            if (jjtc001) {
                jjtree.clearNodeScope(jjtn001);
                jjtc001 = false;
            } else {
                jjtree.popNode();
            }
            if (jjte001 instanceof RuntimeException) {
                {
                    if (true) {
                        throw (RuntimeException) jjte001;
                    }
                }
            }
            if (jjte001 instanceof ParseException) {
                {
                    if (true) {
                        throw (ParseException) jjte001;
                    }
                }
            }
            {
                if (true) {
                    throw (Error) jjte001;
                }
            }
        } finally {
            if (jjtc001) {
                jjtree.closeNodeScope(jjtn001, 2);
            }
        }
    }
}