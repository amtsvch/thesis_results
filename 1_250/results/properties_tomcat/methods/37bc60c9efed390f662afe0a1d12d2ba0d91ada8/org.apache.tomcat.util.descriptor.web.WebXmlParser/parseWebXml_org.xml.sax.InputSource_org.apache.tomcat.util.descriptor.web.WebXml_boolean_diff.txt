public boolean parseWebXml(InputSource source, WebXml dest, boolean fragment) {
    boolean ok = true;
    if (source == null) {
        return ok;
    }
    XmlErrorHandler handler = new XmlErrorHandler();
    Digester digester;
    WebRuleSet ruleSet;
    if (fragment) {
        digester = webFragmentDigester;
        ruleSet = webFragmentRuleSet;
    } else {
        digester = webDigester;
        ruleSet = webRuleSet;
    }
    digester.push(dest);
    digester.setErrorHandler(handler);
    if (log.isDebugEnabled()) {
        log.debug(sm.getString("webXmlParser.applicationStart", source.getSystemId()));
    }
    try {
        digester.parse(source);
        if (handler.getWarnings().size() > 0 || handler.getErrors().size() > 0) {
            ok = false;
            handler.logFindings(log, source.getSystemId());
        }
    } catch (SAXParseException e) {
        log.error(sm.getString("webXmlParser.applicationParse", source.getSystemId()), e);
        log.error(sm.getString("webXmlParser.applicationPosition", "" + e.getLineNumber(), "" + e.getColumnNumber()));
        ok = false;
    } catch (Exception e) {
        log.error(sm.getString("webXmlParser.applicationParse", source.getSystemId()), e);
        ok = false;
    } finally {
        InputSourceUtil.close(source);
        digester.reset();
        ruleSet.recycle();
    }
    return ok;
}