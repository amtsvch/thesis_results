/**
 * Clear references.
 */
protected void clearReferences() {
    // If the JVM is shutting down, skip the memory leak checks
    if (skipMemoryLeakChecksOnJvmShutdown && !resources.getContext().getParent().getState().isAvailable()) {
        // During reloading / redeployment the parent is expected to be
        // available. Parent is not available so this might be a JVM
        // shutdown.
        try {
            Thread dummyHook = new Thread();
            Runtime.getRuntime().addShutdownHook(dummyHook);
            Runtime.getRuntime().removeShutdownHook(dummyHook);
        } catch (IllegalStateException ise) {
            return;
        }
    }
    if (!JreCompat.isGraalAvailable()) {
        // De-register any remaining JDBC drivers
        clearReferencesJdbc();
    }
    // Stop any threads the web application started
    clearReferencesThreads();
    // Clear any references retained in the serialization caches
    if (clearReferencesObjectStreamClassCaches && !JreCompat.isGraalAvailable()) {
        clearReferencesObjectStreamClassCaches();
    }
    // Check for leaks triggered by ThreadLocals loaded by this class loader
    if (clearReferencesThreadLocals && !JreCompat.isGraalAvailable()) {
        checkThreadLocalsForLeaks();
    }
    // Clear RMI Targets loaded by this class loader
    if (clearReferencesRmiTargets) {
        clearReferencesRmiTargets();
    }
    // Clear the IntrospectionUtils cache.
    IntrospectionUtils.clear();
    // Clear the classloader reference in common-logging
    if (clearReferencesLogFactoryRelease) {
        org.apache.juli.logging.LogFactory.release(this);
    }
    // Clear the classloader reference in the VM's bean introspector
    java.beans.Introspector.flushCaches();
    // Clear any custom URLStreamHandlers
    TomcatURLStreamHandlerFactory.release(this);
}