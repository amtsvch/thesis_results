// ------------------------------------------------------ Lifecycle Methods                            // ------------------------------------------------------ Lifecycle Methods                         
/**                                                                                                    /**                                                                                                 
* Prepare for the beginning of active use of the public methods of this                                * Prepare for the beginning of active use of the public methods of this                             
* component and implement the requirements of                                                          * component and implement the requirements of                                                       
* {@link org.apache.catalina.util.LifecycleBase#startInternal()}.                                      * {@link org.apache.catalina.util.LifecycleBase#startInternal()}.                                   
*                                                                                                      *                                                                                                   
* @exception LifecycleException if this component detects a fatal error                                * @exception LifecycleException if this component detects a fatal error                             
*  that prevents this component from being used                                                        *  that prevents this component from being used                                                     
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
protected void startInternal() throws LifecycleException {                                             protected void startInternal() throws LifecycleException {                                          
if (connectionPoolSize != 1) {                                                                         if (connectionPoolSize != 1) {                                                                      
connectionPool = new SynchronizedStack&lt;&gt;(SynchronizedStack.DEFAULT_SIZE, connectionPoolSize);    connectionPool = new SynchronizedStack&lt;&gt;(SynchronizedStack.DEFAULT_SIZE, connectionPoolSize); 
}                                                                                                      }                                                                                                   
// Check to see if the connection to the directory can be opened                                       // Check to see if the connection to the directory can be opened                                    
                                                                                                     | ClassLoader ocl = null;                                                                             
JNDIConnection connection = null;                                                                      JNDIConnection connection = null;                                                                   
try {                                                                                                  try {                                                                                               
                                                                                                     | // https://bz.apache.org/bugzilla/show_bug.cgi?id=65553                                             
                                                                                                     | // This can move back to open() once it is known that Tomcat must be                                
                                                                                                     | // running on a JVM that includes a fix for                                                         
                                                                                                     | // https://bugs.openjdk.java.net/browse/JDK-8273874                                                 
                                                                                                     | if (!isUseContextClassLoader()) {                                                                   
                                                                                                     | ocl = Thread.currentThread().getContextClassLoader();                                               
                                                                                                     | Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());                     
                                                                                                     | }                                                                                                   
connection = get();                                                                                    connection = get();                                                                                 
} catch (NamingException e) {                                                                          } catch (NamingException e) {                                                                       
// A failure here is not fatal as the directory may be unavailable                                     // A failure here is not fatal as the directory may be unavailable                                  
// now but available later. Unavailability of the directory is not                                     // now but available later. Unavailability of the directory is not                                  
// fatal once the Realm has started so there is no reason for it to                                    // fatal once the Realm has started so there is no reason for it to                                 
// be fatal when the Realm starts.                                                                     // be fatal when the Realm starts.                                                                  
containerLog.error(sm.getString("jndiRealm.open"), e);                                                 containerLog.error(sm.getString("jndiRealm.open"), e);                                              
} finally {                                                                                            } finally {                                                                                         
release(connection);                                                                                   release(connection);                                                                                
                                                                                                     | if (!isUseContextClassLoader()) {                                                                   
                                                                                                     | Thread.currentThread().setContextClassLoader(ocl);                                                  
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
super.startInternal();                                                                                 super.startInternal();                                                                              
}                                                                                                      }                                                                                                   
