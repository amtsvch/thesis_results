/*
     * This method duplicates code in org.apache.el.util.ReflectionUtil. When
     * making changes keep the code in sync.
     */
static Method getMethod(Class<?> type, Object base, Method m) {
    // If base is null, method MUST be static
    // If base is non-null, method may be static or non-static
    if (m == null || (Modifier.isPublic(type.getModifiers()) && (m.canAccess(base) || base != null && m.canAccess(null)))) {
        return m;
    }
    Class<?>[] interfaces = type.getInterfaces();
    Method mp = null;
    for (Class<?> iface : interfaces) {
        try {
            mp = iface.getMethod(m.getName(), m.getParameterTypes());
            mp = getMethod(mp.getDeclaringClass(), base, mp);
            if (mp != null) {
                return mp;
            }
        } catch (NoSuchMethodException e) {
            // Ignore
        }
    }
    Class<?> sup = type.getSuperclass();
    if (sup != null) {
        try {
            mp = sup.getMethod(m.getName(), m.getParameterTypes());
            mp = getMethod(mp.getDeclaringClass(), base, mp);
            if (mp != null) {
                return mp;
            }
        } catch (NoSuchMethodException e) {
            // Ignore
        }
    }
    return null;
}