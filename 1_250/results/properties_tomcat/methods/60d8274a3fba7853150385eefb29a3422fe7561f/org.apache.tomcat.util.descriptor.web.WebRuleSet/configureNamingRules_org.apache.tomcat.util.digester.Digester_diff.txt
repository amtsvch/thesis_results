protected void configureNamingRules(Digester digester) {
    // ejb-local-ref
    digester.addObjectCreate(fullPrefix + "/ejb-local-ref", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb");
    digester.addSetNext(fullPrefix + "/ejb-local-ref", "addEjbLocalRef", "org.apache.tomcat.util.descriptor.web.ContextLocalEjb");
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/ejb-link", "setLink", 0);
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/ejb-ref-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/ejb-ref-type", "setType", 0);
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/local", "setLocal", 0);
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/local-home", "setHome", 0);
    digester.addRule(fullPrefix + "/ejb-local-ref/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/ejb-local-ref/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/ejb-local-ref/");
    // ejb-ref
    digester.addObjectCreate(fullPrefix + "/ejb-ref", "org.apache.tomcat.util.descriptor.web.ContextEjb");
    digester.addSetNext(fullPrefix + "/ejb-ref", "addEjbRef", "org.apache.tomcat.util.descriptor.web.ContextEjb");
    digester.addCallMethod(fullPrefix + "/ejb-ref/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/ejb-ref/ejb-link", "setLink", 0);
    digester.addCallMethod(fullPrefix + "/ejb-ref/ejb-ref-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/ejb-ref/ejb-ref-type", "setType", 0);
    digester.addCallMethod(fullPrefix + "/ejb-ref/home", "setHome", 0);
    digester.addCallMethod(fullPrefix + "/ejb-ref/remote", "setRemote", 0);
    digester.addRule(fullPrefix + "/ejb-ref/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/ejb-ref/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/ejb-ref/");
    // env-entry
    digester.addObjectCreate(fullPrefix + "/env-entry", "org.apache.tomcat.util.descriptor.web.ContextEnvironment");
    digester.addSetNext(fullPrefix + "/env-entry", "addEnvEntry", "org.apache.tomcat.util.descriptor.web.ContextEnvironment");
    digester.addRule(fullPrefix + "/env-entry", new SetOverrideRule());
    digester.addCallMethod(fullPrefix + "/env-entry/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/env-entry/env-entry-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/env-entry/env-entry-type", "setType", 0);
    digester.addCallMethod(fullPrefix + "/env-entry/env-entry-value", "setValue", 0);
    digester.addRule(fullPrefix + "/env-entry/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/env-entry/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/env-entry/");
    // resource-env-ref
    digester.addObjectCreate(fullPrefix + "/resource-env-ref", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef");
    digester.addSetNext(fullPrefix + "/resource-env-ref", "addResourceEnvRef", "org.apache.tomcat.util.descriptor.web.ContextResourceEnvRef");
    digester.addCallMethod(fullPrefix + "/resource-env-ref/resource-env-ref-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/resource-env-ref/resource-env-ref-type", "setType", 0);
    digester.addRule(fullPrefix + "/resource-env-ref/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/resource-env-ref/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/resource-env-ref/");
    // message-destination
    digester.addObjectCreate(fullPrefix + "/message-destination", "org.apache.tomcat.util.descriptor.web.MessageDestination");
    digester.addSetNext(fullPrefix + "/message-destination", "addMessageDestination", "org.apache.tomcat.util.descriptor.web.MessageDestination");
    digester.addCallMethod(fullPrefix + "/message-destination/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/message-destination/display-name", "setDisplayName", 0);
    digester.addCallMethod(fullPrefix + "/message-destination/icon/large-icon", "setLargeIcon", 0);
    digester.addCallMethod(fullPrefix + "/message-destination/icon/small-icon", "setSmallIcon", 0);
    digester.addCallMethod(fullPrefix + "/message-destination/message-destination-name", "setName", 0);
    digester.addRule(fullPrefix + "/message-destination/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/message-destination/lookup-name", "setLookupName", 0);
    // message-destination-ref
    digester.addObjectCreate(fullPrefix + "/message-destination-ref", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef");
    digester.addSetNext(fullPrefix + "/message-destination-ref", "addMessageDestinationRef", "org.apache.tomcat.util.descriptor.web.MessageDestinationRef");
    digester.addCallMethod(fullPrefix + "/message-destination-ref/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/message-destination-ref/message-destination-link", "setLink", 0);
    digester.addCallMethod(fullPrefix + "/message-destination-ref/message-destination-ref-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/message-destination-ref/message-destination-type", "setType", 0);
    digester.addCallMethod(fullPrefix + "/message-destination-ref/message-destination-usage", "setUsage", 0);
    digester.addRule(fullPrefix + "/message-destination-ref/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/message-destination-ref/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/message-destination-ref/");
    // resource-ref
    digester.addObjectCreate(fullPrefix + "/resource-ref", "org.apache.tomcat.util.descriptor.web.ContextResource");
    digester.addSetNext(fullPrefix + "/resource-ref", "addResourceRef", "org.apache.tomcat.util.descriptor.web.ContextResource");
    digester.addCallMethod(fullPrefix + "/resource-ref/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/resource-ref/res-auth", "setAuth", 0);
    digester.addCallMethod(fullPrefix + "/resource-ref/res-ref-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/resource-ref/res-sharing-scope", "setScope", 0);
    digester.addCallMethod(fullPrefix + "/resource-ref/res-type", "setType", 0);
    digester.addRule(fullPrefix + "/resource-ref/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/resource-ref/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/resource-ref/");
    // service-ref
    digester.addObjectCreate(fullPrefix + "/service-ref", "org.apache.tomcat.util.descriptor.web.ContextService");
    digester.addSetNext(fullPrefix + "/service-ref", "addServiceRef", "org.apache.tomcat.util.descriptor.web.ContextService");
    digester.addCallMethod(fullPrefix + "/service-ref/description", "setDescription", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/display-name", "setDisplayname", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/icon/large-icon", "setLargeIcon", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/icon/small-icon", "setSmallIcon", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/service-ref-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/service-interface", "setInterface", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/service-ref-type", "setType", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/wsdl-file", "setWsdlfile", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/jaxrpc-mapping-file", "setJaxrpcmappingfile", 0);
    digester.addRule(fullPrefix + "/service-ref/service-qname", new ServiceQnameRule());
    digester.addRule(fullPrefix + "/service-ref/port-component-ref", new CallMethodMultiRule("addPortcomponent", 2, 1));
    digester.addCallParam(fullPrefix + "/service-ref/port-component-ref/service-endpoint-interface", 0);
    digester.addRule(fullPrefix + "/service-ref/port-component-ref/port-component-link", new CallParamMultiRule(1));
    digester.addObjectCreate(fullPrefix + "/service-ref/handler", "org.apache.tomcat.util.descriptor.web.ContextHandler");
    digester.addRule(fullPrefix + "/service-ref/handler", new SetNextRule("addHandler", "org.apache.tomcat.util.descriptor.web.ContextHandler"));
    digester.addCallMethod(fullPrefix + "/service-ref/handler/handler-name", "setName", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/handler/handler-class", "setHandlerclass", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/handler/init-param", "setProperty", 2);
    digester.addCallParam(fullPrefix + "/service-ref/handler/init-param/param-name", 0);
    digester.addCallParam(fullPrefix + "/service-ref/handler/init-param/param-value", 1);
    digester.addRule(fullPrefix + "/service-ref/handler/soap-header", new SoapHeaderRule());
    digester.addCallMethod(fullPrefix + "/service-ref/handler/soap-role", "addSoapRole", 0);
    digester.addCallMethod(fullPrefix + "/service-ref/handler/port-name", "addPortName", 0);
    digester.addRule(fullPrefix + "/service-ref/mapped-name", new MappedNameRule());
    digester.addCallMethod(fullPrefix + "/service-ref/lookup-name", "setLookupName", 0);
    configureInjectionRules(digester, "web-app/service-ref/");
}